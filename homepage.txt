All of the files and code in here belong to the homepage in the directory: /prospera-home/homepage

The structure of defining the files within this document is like this:

"Filepath"

"Code for file:"

```
code
```

Files separated by: "---------------------------------------------------------"

Let's Begin

------------------------------------------------------------------------------------

File: /prospera-home/homepage/public/index.html

Code for file: /prospera-home/homepage/public/index.html

```
<!--
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
-->

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="shortcut icon" href="%PUBLIC_URL%/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <link rel="apple-touch-icon" sizes="76x76" href="%PUBLIC_URL%/apple-icon.png" />
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <title>PROSPERA DEFI</title>
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,900|Roboto+Slab:400,700"
    />
    <link
      href="https://fonts.googleapis.com/css?family=Material+Icons|Material+Icons+Outlined|Material+Icons+Two+Tone|Material+Icons+Round|Material+Icons+Sharp"
      rel="stylesheet"
    />
    <script src="https://kit.fontawesome.com/42d5adcbca.js" crossorigin="anonymous"></script>
    <!-- Add this line to include the runtime config -->
    <script src="%PUBLIC_URL%/env-config.js"></script>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
  </body>
</html>
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/public/index.html

Code for file: /prospera-home/homepage/public/manifest.json

```
{
  "short_name": "PROSPERA DEFI",
  "name": "PROSPERA DEFI",
  "icons": [
    {
      "src": "favicon.png",
      "sizes": "64x64 32x32 24x24 16x16",
      "type": "image/png"
    }
  ],
  "start_url": ".",
  "display": "standalone",
  "theme_color": "#01ff02",
  "background_color": "#000000"
}

```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/public/robots.txt

Code for file: /prospera-home/homepage/public/robots.txt

```
# https://www.robotstxt.org/robotstxt.html
User-agent: *
Disallow:
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/css/customStyles.css

Code for file: /prospera-home/homepage/src/assets/css/customStyles.css

```
.custom-scrollbar {
  scrollbar-width: thin;
  scrollbar-color: #01ff02 rgba(0, 0, 0, 0.1);
}

.custom-scrollbar::-webkit-scrollbar {
  width: 6px;
}

.custom-scrollbar::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.1);
}

.custom-scrollbar::-webkit-scrollbar-thumb {
  background-color: rgba(255, 255, 255, 0.3);
  border-radius: 3px;
}

.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background-color: rgba(255, 255, 255, 0.5);
}
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/base/borders.js

Code for file: /prospera-home/homepage/src/assets/theme/base/borders.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

/**
 * The base border styles for the PROSPERA DEFI PLATFORM.
 * You can add new border width, border color or border radius using this file.
 * You can customized the borders value for the entire PROSPERA DEFI PLATFORM using thie file.
 */

// PROSPERA DEFI PLATFORM Base Styles
import colors from "assets/theme/base/colors";

// PROSPERA DEFI PLATFORM Helper Functions
import pxToRem from "assets/theme/functions/pxToRem";

const { grey } = colors;

export default {
  borderColor: grey[300],

  borderWidth: {
    0: 0,
    1: pxToRem(1),
    2: pxToRem(2),
    3: pxToRem(3),
    4: pxToRem(4),
    5: pxToRem(5),
  },

  borderRadius: {
    xs: pxToRem(1.6),
    sm: pxToRem(2),
    md: pxToRem(6),
    lg: pxToRem(8),
    xl: pxToRem(12),
    xxl: pxToRem(16),
    section: pxToRem(160),
  },
};

```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/base/boxShadows.js

Code for file: /prospera-home/homepage/src/assets/theme/base/boxShadows.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

/**
 * The base box-shadow styles for the PROSPERA DEFI PLATFORM.
 * You can add new box-shadow using this file.
 * You can customized the box-shadow for the entire PROSPERA DEFI PLATFORM using thie file.
 */

// PROSPERA DEFI PLATFORM Base Styles
import colors from "assets/theme/base/colors";

// PROSPERA DEFI PLATFORM Helper Functions
import boxShadow from "assets/theme/functions/boxShadow";

const { black, white, tabs, coloredShadows } = colors;

export default {
  xs: boxShadow([0, 2], [9, -5], black.main, 0.15),
  sm: boxShadow([0, 5], [10, 0], black.main, 0.12),
  md: `${boxShadow([0, 4], [6, -1], black.main, 0.1)}, ${boxShadow(
    [0, 2],
    [4, -1],
    black.main,
    0.06
  )}`,
  lg: `${boxShadow([0, 10], [15, -3], black.main, 0.1)}, ${boxShadow(
    [0, 4],
    [6, -2],
    black.main,
    0.05
  )}`,
  xl: `${boxShadow([0, 20], [25, -5], black.main, 0.1)}, ${boxShadow(
    [0, 10],
    [10, -5],
    black.main,
    0.04
  )}`,
  xxl: boxShadow([0, 20], [27, 0], black.main, 0.05),
  inset: boxShadow([0, 1], [2, 0], black.main, 0.075, "inset"),
  colored: {
    primary: `${boxShadow([0, 4], [20, 0], black.main, 0.14)}, ${boxShadow(
      [0, 7],
      [10, -5],
      coloredShadows.primary,
      0.4
    )}`,
    secondary: `${boxShadow([0, 4], [20, 0], black.main, 0.14)}, ${boxShadow(
      [0, 7],
      [10, -5],
      coloredShadows.secondary,
      0.4
    )}`,
    info: `${boxShadow([0, 4], [20, 0], black.main, 0.14)}, ${boxShadow(
      [0, 7],
      [10, -5],
      coloredShadows.info,
      0.4
    )}`,
    success: `${boxShadow([0, 4], [20, 0], black.main, 0.14)}, ${boxShadow(
      [0, 7],
      [10, -5],
      coloredShadows.success,
      0.4
    )}`,
    warning: `${boxShadow([0, 4], [20, 0], black.main, 0.14)}, ${boxShadow(
      [0, 7],
      [10, -5],
      coloredShadows.warning,
      0.4
    )}`,
    error: `${boxShadow([0, 4], [20, 0], black.main, 0.14)}, ${boxShadow(
      [0, 7],
      [10, -5],
      coloredShadows.error,
      0.4
    )}`,
    light: `${boxShadow([0, 4], [20, 0], black.main, 0.14)}, ${boxShadow(
      [0, 7],
      [10, -5],
      coloredShadows.light,
      0.4
    )}`,
    dark: `${boxShadow([0, 4], [20, 0], black.main, 0.14)}, ${boxShadow(
      [0, 7],
      [10, -5],
      coloredShadows.dark,
      0.4
    )}`,
    white: `${boxShadow([0, 4], [20, 0], white.main, 0.14)}, ${boxShadow(
      [0, 7],
      [10, -5],
      white.main,
      0.4
    )}`,
  },

  sliderBoxShadow: {
    thumb: boxShadow([0, 1], [13, 0], black.main, 0.2),
  },
  tabsBoxShadow: {
    indicator: boxShadow([0, 1], [5, 1], tabs.indicator.boxShadow, 1),
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/base/breakpoints.js

Code for file: /prospera-home/homepage/src/assets/theme/base/breakpoints.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

/**
 * The base breakpoints for the PROSPERA DEFI PLATFORM.
 * You can add new breakpoints using this file.
 * You can customized the breakpoints for the entire PROSPERA DEFI PLATFORM using thie file.
 */

export default {
  values: {
    xs: 0,
    sm: 576,
    md: 768,
    lg: 992,
    xl: 1200,
    xxl: 1400,
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/base/colors.js

Code for file: /prospera-home/homepage/src/assets/theme/base/colors.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

/**
 * The base colors for the PROSPERA DEFI PLATFORM.
 * You can add new color using this file.
 * You can customized the colors for the entire PROSPERA DEFI PLATFORM using thie file.
 */

export default {
  background: {
    default: "#000000",
  },

  text: {
    main: "#7b809a",
    focus: "#7b809a",
  },

  transparent: {
    main: "transparent",
  },

  white: {
    main: "#ffffff",
    focus: "#ffffff",
  },

  black: {
    light: "#000000",
    main: "#000000",
    focus: "#000000",
  },

  primary: {
    main: "#e91e63",
    focus: "#e91e63",
  },

  secondary: {
    main: "#7b809a",
    focus: "#8f93a9",
  },

  info: {
    main: "#1A73E8",
    focus: "#1662C4",
  },

  success: {
    main: "#4CAF50",
    focus: "#67bb6a",
  },

  warning: {
    main: "#fb8c00",
    focus: "#fc9d26",
  },

  error: {
    main: "#F44335",
    focus: "#f65f53",
  },

  light: {
    main: "#f0f2f5",
    focus: "#f0f2f5",
  },

  dark: {
    main: "#344767",
    focus: "#2c3c58",
  },

  pros: {
    main: "#01ff02",
    focus: "#2c3c58",
  },

  grey: {
    100: "#f8f9fa",
    200: "#f0f2f5",
    300: "#dee2e6",
    400: "#ced4da",
    500: "#adb5bd",
    600: "#6c757d",
    700: "#495057",
    800: "#343a40",
    900: "#212529",
  },

  gradients: {
    primary: {
      main: "#EC407A",
      state: "#D81B60",
    },

    secondary: {
      main: "#747b8a",
      state: "#495361",
    },

    info: {
      main: "#49a3f1",
      state: "#1A73E8",
    },

    success: {
      main: "#66BB6A",
      state: "#43A047",
    },

    warning: {
      main: "#FFA726",
      state: "#FB8C00",
    },

    error: {
      main: "#EF5350",
      state: "#E53935",
    },

    light: {
      main: "#EBEFF4",
      state: "#CED4DA",
    },

    dark: {
      main: "#42424a",
      state: "#191919",
      focus: "#000000",
    },

    pros: {
      main: "#01ff02",
      state: "#000000",
    },
  },

  socialMediaColors: {
    facebook: {
      main: "#3b5998",
      dark: "#344e86",
    },

    twitter: {
      main: "#55acee",
      dark: "#3ea1ec",
    },

    instagram: {
      main: "#125688",
      dark: "#0e456d",
    },

    linkedin: {
      main: "#0077b5",
      dark: "#00669c",
    },

    pinterest: {
      main: "#cc2127",
      dark: "#b21d22",
    },

    youtube: {
      main: "#e52d27",
      dark: "#d41f1a",
    },

    vimeo: {
      main: "#1ab7ea",
      dark: "#13a3d2",
    },

    slack: {
      main: "#3aaf85",
      dark: "#329874",
    },

    dribbble: {
      main: "#ea4c89",
      dark: "#e73177",
    },

    github: {
      main: "#24292e",
      dark: "#171a1d",
    },

    reddit: {
      main: "#ff4500",
      dark: "#e03d00",
    },

    tumblr: {
      main: "#35465c",
      dark: "#2a3749",
    },
  },

  badgeColors: {
    primary: {
      background: "#f8b3ca",
      text: "#cc084b",
    },

    secondary: {
      background: "#d7d9e1",
      text: "#6c757d",
    },

    info: {
      background: "#aecef7",
      text: "#095bc6",
    },

    success: {
      background: "#bce2be",
      text: "#339537",
    },

    warning: {
      background: "#ffd59f",
      text: "#c87000",
    },

    error: {
      background: "#fcd3d0",
      text: "#f61200",
    },

    light: {
      background: "#ffffff",
      text: "#c7d3de",
    },

    dark: {
      background: "#8097bf",
      text: "#1e2e4a",
    },
    pros: {
      background: "#000000",
      text: "#01ff02",
    },
  },

  coloredShadows: {
    primary: "#e91e62",
    secondary: "#110e0e",
    info: "#00bbd4",
    success: "#4caf4f",
    warning: "#ff9900",
    error: "#f44336",
    light: "#adb5bd",
    dark: "#404040",
  },

  inputBorderColor: "#d2d6da",

  tabs: {
    indicator: { boxShadow: "#ddd" },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/base/globals.js

Code for file: /prospera-home/homepage/src/assets/theme/base/globals.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM Base Styles
import colors from "assets/theme/base/colors";

const { info, pros } = colors;

export default {
  html: {
    scrollBehavior: "smooth",
  },
  "*, *::before, *::after": {
    margin: 0,
    padding: 0,
  },
  "a, a:link, a:visited": {
    textDecoration: "none !important",
  },
  "a.link, .link, a.link:link, .link:link, a.link:visited, .link:visited": {
    color: `${pros.main} !important`,
    transition: "color 150ms ease-in !important",
  },
  "a.link:hover, .link:hover, a.link:focus, .link:focus": {
    color: `${info.main} !important`,
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/base/typography.js

Code for file: /prospera-home/homepage/src/assets/theme/base/typography.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

/**
 * The base typography styles for the PROSPERA DEFI PLATFORM.
 * You can add new typography style using this file.
 * You can customized the typography styles for the entire PROSPERA DEFI PLATFORM using thie file.
 */

// PROSPERA DEFI PLATFORM Base Styles
import colors from "assets/theme/base/colors";

// PROSPERA DEFI PLATFORM Helper Functions
import pxToRem from "assets/theme/functions/pxToRem";

const { pros } = colors;

const baseProperties = {
  fontFamily: "Helvetica Monospaced, sans-serif",
  fontFamily2: "Helvetica Monospaced, sans-serif",
  fontWeightLighter: 100,
  fontWeightLight: 300,
  fontWeightRegular: 400,
  fontWeightMedium: 600,
  fontWeightBold: 700,
  fontSizeXXS: pxToRem(10.4),
  fontSizeXS: pxToRem(12),
  fontSizeSM: pxToRem(14),
  fontSizeMD: pxToRem(16),
  fontSizeLG: pxToRem(18),
  fontSizeXL: pxToRem(20),
  fontSize2XL: pxToRem(24),
  fontSize3XL: pxToRem(30),
};

const baseHeadingProperties = {
  color: pros.main,
  fontWeight: baseProperties.fontWeightBold,
};

const baseDisplayProperties = {
  fontFamily: baseProperties.fontFamily,
  color: pros.main,
  fontWeight: baseProperties.fontWeightLight,
  lineHeight: 1.2,
};

const typography = {
  fontFamily: baseProperties.fontFamily,
  fontWeightLighter: baseProperties.fontWeightLighter,
  fontWeightLight: baseProperties.fontWeightLight,
  fontWeightRegular: baseProperties.fontWeightRegular,
  fontWeightMedium: baseProperties.fontWeightMedium,
  fontWeightBold: baseProperties.fontWeightBold,

  h1: {
    fontFamily: baseProperties.fontFamily2,
    fontSize: pxToRem(48),
    lineHeight: 1.25,
    ...baseHeadingProperties,
  },

  h2: {
    fontFamily: baseProperties.fontFamily2,
    fontSize: pxToRem(36),
    lineHeight: 1.3,
    ...baseHeadingProperties,
  },

  h3: {
    fontFamily: baseProperties.fontFamily2,
    fontSize: pxToRem(30),
    lineHeight: 1.375,
    ...baseHeadingProperties,
  },

  h4: {
    fontFamily: baseProperties.fontFamily,
    fontSize: pxToRem(24),
    lineHeight: 1.375,
    ...baseHeadingProperties,
  },

  h5: {
    fontFamily: baseProperties.fontFamily,
    fontSize: pxToRem(20),
    lineHeight: 1.375,
    ...baseHeadingProperties,
  },

  h6: {
    fontFamily: baseProperties.fontFamily,
    fontSize: pxToRem(16),
    lineHeight: 1.625,
    ...baseHeadingProperties,
  },

  subtitle1: {
    fontFamily: baseProperties.fontFamily,
    fontSize: baseProperties.fontSizeXL,
    fontWeight: baseProperties.fontWeightLight,
    lineHeight: 1.625,
  },

  subtitle2: {
    fontFamily: baseProperties.fontFamily,
    fontSize: baseProperties.fontSizeMD,
    fontWeight: baseProperties.fontWeightLight,
    lineHeight: 1.6,
  },

  body1: {
    fontFamily: baseProperties.fontFamily,
    fontSize: baseProperties.fontSizeXL,
    fontWeight: baseProperties.fontWeightRegular,
    lineHeight: 1.625,
  },

  body2: {
    fontFamily: baseProperties.fontFamily,
    fontSize: baseProperties.fontSizeMD,
    fontWeight: baseProperties.fontWeightLight,
    lineHeight: 1.6,
  },

  button: {
    fontFamily: baseProperties.fontFamily,
    fontSize: baseProperties.fontSizeSM,
    fontWeight: baseProperties.fontWeightLight,
    lineHeight: 1.5,
    textTransform: "uppercase",
  },

  caption: {
    fontFamily: baseProperties.fontFamily,
    fontSize: baseProperties.fontSizeXS,
    fontWeight: baseProperties.fontWeightLight,
    lineHeight: 1.25,
  },

  overline: {
    fontFamily: baseProperties.fontFamily,
  },

  d1: {
    fontSize: pxToRem(80),
    ...baseDisplayProperties,
  },

  d2: {
    fontSize: pxToRem(72),
    ...baseDisplayProperties,
  },

  d3: {
    fontSize: pxToRem(64),
    ...baseDisplayProperties,
  },

  d4: {
    fontSize: pxToRem(56),
    ...baseDisplayProperties,
  },

  d5: {
    fontSize: pxToRem(48),
    ...baseDisplayProperties,
  },

  d6: {
    fontSize: pxToRem(40),
    ...baseDisplayProperties,
  },

  size: {
    xxs: baseProperties.fontSizeXXS,
    xs: baseProperties.fontSizeXS,
    sm: baseProperties.fontSizeSM,
    md: baseProperties.fontSizeMD,
    lg: baseProperties.fontSizeLG,
    xl: baseProperties.fontSizeXL,
    "2xl": baseProperties.fontSize2XL,
    "3xl": baseProperties.fontSize3XL,
  },

  lineHeight: {
    sm: 1.25,
    md: 1.5,
    lg: 2,
  },
};

export default typography;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/button/contained.js

Code for file: /prospera-home/homepage/src/assets/theme/components/button/contained.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM Base Styles
import colors from "assets/theme/base/colors";
import typography from "assets/theme/base/typography";

// PROSPERA DEFI PLATFORM Helper Functions
import pxToRem from "assets/theme/functions/pxToRem";

const { white, text, info, secondary } = colors;
const { size } = typography;

export default {
  base: {
    backgroundColor: white.main,
    minHeight: pxToRem(40),
    color: text.main,
    padding: `${pxToRem(10)} ${pxToRem(24)}`,

    "&:hover": {
      backgroundColor: white.main,
    },

    "&:active, &:active:focus, &:active:hover": {
      opacity: 0.85,
    },

    "& .material-icon, .material-icons-round, svg": {
      fontSize: `${pxToRem(16)} !important`,
    },
  },

  small: {
    minHeight: pxToRem(32),
    padding: `${pxToRem(6)} ${pxToRem(16)}`,
    fontSize: size.xs,

    "& .material-icon, .material-icons-round, svg": {
      fontSize: `${pxToRem(12)} !important`,
    },
  },

  large: {
    minHeight: pxToRem(47),
    padding: `${pxToRem(12)} ${pxToRem(28)}`,
    fontSize: size.sm,

    "& .material-icon, .material-icons-round, svg": {
      fontSize: `${pxToRem(22)} !important`,
    },
  },

  primary: {
    backgroundColor: info.main,

    "&:hover": {
      backgroundColor: info.main,
    },

    "&:focus:not(:hover)": {
      backgroundColor: info.focus,
    },
  },

  secondary: {
    backgroundColor: secondary.main,

    "&:hover": {
      backgroundColor: secondary.main,
    },

    "&:focus:not(:hover)": {
      backgroundColor: secondary.focus,
    },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/button/index.js

Code for file: /prospera-home/homepage/src/assets/theme/components/button/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM Button Styles
import root from "assets/theme/components/button/root";
import contained from "assets/theme/components/button/contained";
import outlined from "assets/theme/components/button/outlined";
import text from "assets/theme/components/button/text";
import joinico from "assets/theme/components/button/joinico";

export default {
  defaultProps: {
    disableRipple: false,
  },
  styleOverrides: {
    root: { ...root },
    contained: { ...contained.base },
    containedSizeSmall: { ...contained.small },
    containedSizeLarge: { ...contained.large },
    containedPrimary: { ...contained.primary },
    containedSecondary: { ...contained.secondary },
    joinico: { ...joinico.base },
    joinicoSizeSmall: { ...joinico.small },
    joinicoSizeLarge: { ...joinico.large },
    joinicoPrimary: { ...joinico.primary },
    joinicoSecondary: { ...joinico.secondary },
    outlined: { ...outlined.base },
    outlinedSizeSmall: { ...outlined.small },
    outlinedSizeLarge: { ...outlined.large },
    outlinedPrimary: { ...outlined.primary },
    outlinedSecondary: { ...outlined.secondary },
    text: { ...text.base },
    textSizeSmall: { ...text.small },
    textSizeLarge: { ...text.large },
    textPrimary: { ...text.primary },
    textSecondary: { ...text.secondary },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/button/joinico.js

Code for file: /prospera-home/homepage/src/assets/theme/components/button/joinico.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM Base Styles
import colors from "assets/theme/base/colors";
import typography from "assets/theme/base/typography";

// PROSPERA DEFI PLATFORM Helper Functions
import pxToRem from "assets/theme/functions/pxToRem";

const { black, text } = colors;
const { size } = typography;

export default {
  base: {
    backgroundColor: black.main,
    minHeight: pxToRem(40),
    color: text.main,
    padding: `${pxToRem(10)} ${pxToRem(24)}`,

    "&:hover": {
      backgroundColor: black.main,
    },

    "&:active, &:active:focus, &:active:hover": {
      opacity: 0.85,
    },

    "& .material-icon, .material-icons-round, svg": {
      fontSize: `${pxToRem(16)} !important`,
    },
  },

  small: {
    minHeight: pxToRem(32),
    padding: `${pxToRem(6)} ${pxToRem(16)}`,
    fontSize: size.xs,

    "& .material-icon, .material-icons-round, svg": {
      fontSize: `${pxToRem(12)} !important`,
    },
  },

  large: {
    minHeight: pxToRem(47),
    padding: `${pxToRem(12)} ${pxToRem(28)}`,
    fontSize: size.sm,

    "& .material-icon, .material-icons-round, svg": {
      fontSize: `${pxToRem(22)} !important`,
    },
  },

  primary: {
    backgroundColor: black.main,

    "&:hover": {
      backgroundColor: black.main,
    },

    "&:focus:not(:hover)": {
      backgroundColor: black.focus,
    },
  },

  secondary: {
    backgroundColor: black.main,

    "&:hover": {
      backgroundColor: black.main,
    },

    "&:focus:not(:hover)": {
      backgroundColor: black.focus,
    },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/button/outlined.js

Code for file: /prospera-home/homepage/src/assets/theme/components/button/outlined.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM Base Styles
import colors from "assets/theme/base/colors";
import typography from "assets/theme/base/typography";

// PROSPERA DEFI PLATFORM Helper Functions
import pxToRem from "assets/theme/functions/pxToRem";

const { transparent, light, info, secondary } = colors;
const { size } = typography;

export default {
  base: {
    minHeight: pxToRem(40),
    color: light.main,
    borderColor: light.main,
    padding: `${pxToRem(10)} ${pxToRem(24)}`,

    "&:hover": {
      opacity: 0.75,
      backgroundColor: transparent.main,
    },

    "& .material-icon, .material-icons-round, svg": {
      fontSize: `${pxToRem(16)} !important`,
    },
  },

  small: {
    minHeight: pxToRem(32),
    padding: `${pxToRem(6)} ${pxToRem(16)}`,
    fontSize: size.xs,

    "& .material-icon, .material-icons-round, svg": {
      fontSize: `${pxToRem(12)} !important`,
    },
  },

  large: {
    minHeight: pxToRem(47),
    padding: `${pxToRem(12)} ${pxToRem(28)}`,
    fontSize: size.sm,

    "& .material-icon, .material-icons-round, svg": {
      fontSize: `${pxToRem(22)} !important`,
    },
  },

  primary: {
    backgroundColor: transparent.main,
    borderColor: info.main,

    "&:hover": {
      backgroundColor: transparent.main,
    },
  },

  secondary: {
    backgroundColor: transparent.main,
    borderColor: secondary.main,

    "&:hover": {
      backgroundColor: transparent.main,
    },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/button/root.js

Code for file: /prospera-home/homepage/src/assets/theme/components/button/root.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM Base Styles
import typography from "assets/theme/base/typography";
import borders from "assets/theme/base/borders";

// PROSPERA DEFI PLATFORM Helper Functions
import pxToRem from "assets/theme/functions/pxToRem";

const { fontWeightBold, size } = typography;
const { borderRadius } = borders;

export default {
  display: "inline-flex",
  justifyContent: "center",
  alignItems: "center",
  fontSize: size.xs,
  fontWeight: fontWeightBold,
  borderRadius: borderRadius.lg,
  padding: `${pxToRem(6.302)} ${pxToRem(16.604)}`,
  lineHeight: 1.4,
  textAlign: "center",
  textTransform: "uppercase",
  userSelect: "none",
  backgroundSize: "150% !important",
  backgroundPositionX: "25% !important",
  transition: "all 150ms ease-in",

  "&:disabled": {
    pointerEvent: "none",
    opacity: 0.65,
  },

  "& .material-icons": {
    fontSize: pxToRem(15),
    marginTop: pxToRem(-2),
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/button/text.js

Code for file: /prospera-home/homepage/src/assets/theme/components/button/text.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM Base Styles
import colors from "assets/theme/base/colors";
import typography from "assets/theme/base/typography";

// PROSPERA DEFI PLATFORM Helper Functions
import pxToRem from "assets/theme/functions/pxToRem";

const { text, info, secondary, transparent } = colors;
const { size } = typography;

export default {
  base: {
    backgroundColor: transparent.main,
    minHeight: pxToRem(40),
    color: text.main,
    boxShadow: "none",
    padding: `${pxToRem(10)} ${pxToRem(24)}`,

    "&:hover": {
      backgroundColor: transparent.main,
      boxShadow: "none",
    },

    "&:focus": {
      boxShadow: "none",
    },

    "&:active, &:active:focus, &:active:hover": {
      opacity: 0.85,
      boxShadow: "none",
    },

    "&:disabled": {
      boxShadow: "none",
    },

    "& .material-icon, .material-icons-round, svg": {
      fontSize: `${pxToRem(16)} !important`,
    },
  },

  small: {
    minHeight: pxToRem(32),
    padding: `${pxToRem(6)} ${pxToRem(16)}`,
    fontSize: size.xs,

    "& .material-icon, .material-icons-round, svg": {
      fontSize: `${pxToRem(12)} !important`,
    },
  },

  large: {
    minHeight: pxToRem(47),
    padding: `${pxToRem(12)} ${pxToRem(28)}`,
    fontSize: size.sm,

    "& .material-icon, .material-icons-round, svg": {
      fontSize: `${pxToRem(22)} !important`,
    },
  },

  primary: {
    color: info.main,

    "&:hover": {
      color: info.main,
    },

    "&:focus:not(:hover)": {
      color: info.focus,
      boxShadow: "none",
    },
  },

  secondary: {
    color: secondary.main,

    "&:hover": {
      color: secondary.main,
    },

    "&:focus:not(:hover)": {
      color: secondary.focus,
      boxShadow: "none",
    },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/card/cardContent.js

Code for file: /prospera-home/homepage/src/assets/theme/components/card/cardContent.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM Helper Functions
import pxToRem from "assets/theme/functions/pxToRem";

export default {
  styleOverrides: {
    root: {
      marginTop: 0,
      marginBottom: 0,
      padding: `${pxToRem(8)} ${pxToRem(24)} ${pxToRem(24)}`,
    },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/card/cardMedia.js

Code for file: /prospera-home/homepage/src/assets/theme/components/card/cardMedia.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM Base Styles
import borders from "assets/theme/base/borders";

// PROSPERA DEFI PLATFORM Helper Functions
import pxToRem from "assets/theme/functions/pxToRem";

const { borderRadius } = borders;

export default {
  styleOverrides: {
    root: {
      borderRadius: borderRadius.xl,
      margin: `${pxToRem(16)} ${pxToRem(16)} 0`,
    },

    media: {
      width: "auto",
    },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/card/index.js

Code for file: /prospera-home/homepage/src/assets/theme/components/card/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM Base Styles
import colors from "assets/theme/base/colors";
import borders from "assets/theme/base/borders";
import boxShadows from "assets/theme/base/boxShadows";

// PROSPERA DEFI PLATFORM Helper Function
import rgba from "assets/theme/functions/rgba";

const { black, white } = colors;
const { borderWidth, borderRadius } = borders;
const { md } = boxShadows;

export default {
  styleOverrides: {
    root: {
      display: "flex",
      flexDirection: "column",
      position: "relative",
      minWidth: 0,
      wordWrap: "break-word",
      backgroundColor: white.main,
      backgroundClip: "border-box",
      border: `${borderWidth[0]} solid ${rgba(black.main, 0.125)}`,
      borderRadius: borderRadius.xl,
      boxShadow: md,
      overflow: "visible",
    },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/dialog/dialogActions.js

Code for file: /prospera-home/homepage/src/assets/theme/components/dialog/dialogActions.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM helper functions
import pxToRem from "assets/theme/functions/pxToRem";

export default {
  styleOverrides: {
    root: {
      padding: pxToRem(16),
    },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/dialog/dialogContent.js

Code for file: /prospera-home/homepage/src/assets/theme/components/dialog/dialogContent.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM base styles
import typography from "assets/theme/base/typography";
import borders from "assets/theme/base/borders";
import colors from "assets/theme/base/colors";

// PROSPERA DEFI PLATFORM helper functions
import pxToRem from "assets/theme/functions/pxToRem";

const { size } = typography;
const { text } = colors;
const { borderWidth, borderColor } = borders;

export default {
  styleOverrides: {
    root: {
      padding: pxToRem(16),
      fontSize: size.md,
      color: text.main,
    },

    dividers: {
      borderTop: `${borderWidth[1]} solid ${borderColor}`,
      borderBottom: `${borderWidth[1]} solid ${borderColor}`,
    },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/dialog/dialogContentText.js

Code for file: /prospera-home/homepage/src/assets/theme/components/dialog/dialogContentText.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM base styles
import typography from "assets/theme/base/typography";
import colors from "assets/theme/base/colors";

// PROSPERA DEFI PLATFORM helper functions
// import pxToRem from "assets/theme/functions/pxToRem";

const { size } = typography;
const { text } = colors;

export default {
  styleOverrides: {
    root: {
      fontSize: size.md,
      color: text.main,
    },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/dialog/dialogTitle.js

Code for file: /prospera-home/homepage/src/assets/theme/components/dialog/dialogTitle.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM base styles
import typography from "assets/theme/base/typography";

// PROSPERA DEFI PLATFORM helper functions
import pxToRem from "assets/theme/functions/pxToRem";

const { size } = typography;

export default {
  styleOverrides: {
    root: {
      padding: pxToRem(16),
      fontSize: size.xl,
    },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/dialog/index.js

Code for file: /prospera-home/homepage/src/assets/theme/components/dialog/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM base styles
import borders from "assets/theme/base/borders";
import boxShadows from "assets/theme/base/boxShadows";

const { borderRadius } = borders;
const { xxl } = boxShadows;

export default {
  styleOverrides: {
    paper: {
      borderRadius: borderRadius.lg,
      boxShadow: xxl,
    },

    paperFullScreen: {
      borderRadius: 0,
    },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/form/autocomplete.js

Code for file: /prospera-home/homepage/src/assets/theme/components/form/autocomplete.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM base styles
import boxShadows from "assets/theme/base/boxShadows";
import typography from "assets/theme/base/typography";
import colors from "assets/theme/base/colors";
import borders from "assets/theme/base/borders";

// PROSPERA DEFI PLATFORM helper functions
import pxToRem from "assets/theme/functions/pxToRem";

const { lg } = boxShadows;
const { size } = typography;
const { text, white, transparent, light, dark, gradients } = colors;
const { borderRadius } = borders;

export default {
  styleOverrides: {
    popper: {
      boxShadow: lg,
      padding: pxToRem(8),
      fontSize: size.sm,
      color: text.main,
      textAlign: "left",
      backgroundColor: `${white.main} !important`,
      borderRadius: borderRadius.md,
    },

    paper: {
      boxShadow: "none",
      backgroundColor: transparent.main,
    },

    option: {
      padding: `${pxToRem(4.8)} ${pxToRem(16)}`,
      borderRadius: borderRadius.md,
      fontSize: size.sm,
      color: text.main,
      transition: "background-color 300ms ease, color 300ms ease",

      "&:hover, &:focus, &.Mui-selected, &.Mui-selected:hover, &.Mui-selected:focus": {
        backgroundColor: light.main,
        color: dark.main,
      },

      '&[aria-selected="true"]': {
        backgroundColor: `${light.main} !important`,
        color: `${dark.main} !important`,
      },
    },

    noOptions: {
      fontSize: size.sm,
      color: text.main,
    },

    groupLabel: {
      color: dark.main,
    },

    loading: {
      fontSize: size.sm,
      color: text.main,
    },

    tag: {
      display: "flex",
      alignItems: "center",
      height: "auto",
      padding: pxToRem(4),
      backgroundColor: gradients.dark.state,
      color: white.main,

      "& .MuiChip-label": {
        lineHeight: 1.2,
        padding: `0 ${pxToRem(10)} 0 ${pxToRem(4)}`,
      },

      "& .MuiSvgIcon-root, & .MuiSvgIcon-root:hover, & .MuiSvgIcon-root:focus": {
        color: white.main,
        marginRight: 0,
      },
    },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/form/checkbox.js

Code for file: /prospera-home/homepage/src/assets/theme/components/form/checkbox.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM base styles
import borders from "assets/theme/base/borders";
import colors from "assets/theme/base/colors";

// PROSPERA DEFI PLATFORM helper functions
import pxToRem from "assets/theme/functions/pxToRem";
import linearGradient from "assets/theme/functions/linearGradient";

const { borderWidth, borderColor } = borders;
const { transparent, info } = colors;

export default {
  styleOverrides: {
    root: {
      "& .MuiSvgIcon-root": {
        backgroundPosition: "center",
        backgroundSize: "contain",
        backgroundRepeat: "no-repeat",
        width: pxToRem(20),
        height: pxToRem(20),
        color: transparent.main,
        border: `${borderWidth[1]} solid ${borderColor}`,
        borderRadius: pxToRem(5.6),
      },

      "&:hover": {
        backgroundColor: transparent.main,
      },

      "&.Mui-focusVisible": {
        border: `${borderWidth[2]} solid ${info.main} !important`,
      },
    },

    colorPrimary: {
      color: borderColor,

      "&.Mui-checked": {
        color: info.main,

        "& .MuiSvgIcon-root": {
          backgroundImage: `url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 -1 22 22'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='2.5' d='M6 10l3 3l6-6'/%3e%3c/svg%3e"), ${linearGradient(
            info.main,
            info.main
          )}`,
          borderColor: info.main,
        },
      },
    },

    colorSecondary: {
      color: borderColor,

      "& .MuiSvgIcon-root": {
        color: info.main,
        "&.Mui-checked": {
          backgroundImage: `url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 -1 22 22'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='2.5' d='M6 10l3 3l6-6'/%3e%3c/svg%3e"), ${linearGradient(
            info.main,
            info.main
          )}`,
          borderColor: info.main,
        },
      },
    },
  },
};

```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/form/formControlLabel.js

Code for file: /prospera-home/homepage/src/assets/theme/components/form/formControlLabel.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM base styles
import colors from "assets/theme/base/colors";
import typography from "assets/theme/base/typography";

// PROSPERA DEFI PLATFORM helper functions
import pxToRem from "assets/theme/functions/pxToRem";

const { dark } = colors;
const { size, fontWeightBold } = typography;

export default {
  styleOverrides: {
    root: {
      display: "block",
      minHeight: pxToRem(24),
      marginBottom: pxToRem(2),
    },

    label: {
      display: "inline-block",
      fontSize: size.sm,
      fontWeight: fontWeightBold,
      color: dark.main,
      lineHeight: 1,
      transform: `translateY(${pxToRem(1)})`,
      marginLeft: pxToRem(4),

      "&.Mui-disabled": {
        color: dark.main,
      },
    },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/form/formLabel.js

Code for file: /prospera-home/homepage/src/assets/theme/components/form/formLabel.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM base styles
import colors from "assets/theme/base/colors";

const { text } = colors;

export default {
  styleOverrides: {
    root: {
      color: text.main,
    },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/form/input.js

Code for file: /prospera-home/homepage/src/assets/theme/components/form/input.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM Base Styles
import colors from "assets/theme/base/colors";
import typography from "assets/theme/base/typography";
import borders from "assets/theme/base/borders";

const { info, inputBorderColor, dark } = colors;
const { size } = typography;
const { borderWidth } = borders;

export default {
  styleOverrides: {
    root: {
      fontSize: size.sm,
      color: dark.main,

      "&:hover:not(.Mui-disabled):before": {
        borderBottom: `${borderWidth[1]} solid ${inputBorderColor}`,
      },

      "&:before": {
        borderColor: inputBorderColor,
      },

      "&:after": {
        borderColor: info.main,
      },
    },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/form/inputLabel.js

Code for file: /prospera-home/homepage/src/assets/theme/components/form/inputLabel.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM Base Styles
import colors from "assets/theme/base/colors";
import typography from "assets/theme/base/typography";

const { text, info } = colors;
const { size } = typography;

export default {
  styleOverrides: {
    root: {
      fontSize: size.sm,
      color: text.main,
      lineHeight: 0.9,

      "&.Mui-focused": {
        color: info.main,
      },

      "&.MuiInputLabel-shrink": {
        lineHeight: 1.5,
        fontSize: size.md,

        "~ .MuiInputBase-root .MuiOutlinedInput-notchedOutline legend": {
          fontSize: "0.85em",
        },
      },
    },

    sizeSmall: {
      fontSize: size.xs,
      lineHeight: 1.625,

      "&.MuiInputLabel-shrink": {
        lineHeight: 1.6,
        fontSize: size.sm,

        "~ .MuiInputBase-root .MuiOutlinedInput-notchedOutline legend": {
          fontSize: "0.72em",
        },
      },
    },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/form/inputOutlined.js

Code for file: /prospera-home/homepage/src/assets/theme/components/form/inputOutlined.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM Base Styles
import colors from "assets/theme/base/colors";
import borders from "assets/theme/base/borders";
import typography from "assets/theme/base/typography";

// PROSPERA DEFI PLATFORM helper functions
import pxToRem from "assets/theme/functions/pxToRem";

const { inputBorderColor, info, grey, transparent } = colors;
const { borderRadius } = borders;
const { size } = typography;

export default {
  styleOverrides: {
    root: {
      backgroundColor: transparent.main,
      fontSize: size.sm,
      borderRadius: borderRadius.md,

      "&:hover .MuiOutlinedInput-notchedOutline": {
        borderColor: inputBorderColor,
      },

      "&.Mui-focused": {
        "& .MuiOutlinedInput-notchedOutline": {
          borderColor: info.main,
        },
      },
    },

    notchedOutline: {
      borderColor: inputBorderColor,
    },

    input: {
      color: grey[700],
      padding: pxToRem(12),
      backgroundColor: transparent.main,
    },

    inputSizeSmall: {
      fontSize: size.xs,
      padding: pxToRem(10),
    },

    multiline: {
      color: grey[700],
      padding: 0,
    },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/form/radio.js

Code for file: /prospera-home/homepage/src/assets/theme/components/form/radio.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM base styles
import borders from "assets/theme/base/borders";
import colors from "assets/theme/base/colors";

// PROSPERA DEFI PLATFORM helper functions
import pxToRem from "assets/theme/functions/pxToRem";
import linearGradient from "assets/theme/functions/linearGradient";

const { borderWidth, borderColor } = borders;
const { transparent, info } = colors;

export default {
  styleOverrides: {
    root: {
      "& .MuiSvgIcon-root": {
        width: pxToRem(20),
        height: pxToRem(20),
        color: transparent.main,
        border: `${borderWidth[1]} solid ${borderColor}`,
        borderRadius: "50%",
      },

      "&:after": {
        transition: "opacity 250ms ease-in-out",
        content: `""`,
        position: "absolute",
        width: pxToRem(14),
        height: pxToRem(14),
        borderRadius: "50%",
        backgroundImage: linearGradient(info.main, info.main),
        opacity: 0,
        left: 0,
        right: 0,
        top: 0,
        bottom: 0,
        margin: "auto",
      },

      "&:hover": {
        backgroundColor: transparent.main,
      },

      "&.Mui-focusVisible": {
        border: `${borderWidth[2]} solid ${info.main} !important`,
      },
    },

    colorPrimary: {
      color: borderColor,

      "&.Mui-checked": {
        color: info.main,

        "& .MuiSvgIcon-root": {
          borderColor: info.main,
        },

        "&:after": {
          opacity: 1,
        },
      },
    },

    colorSecondary: {
      color: borderColor,

      "&.Mui-checked": {
        color: info.main,

        "& .MuiSvgIcon-root": {
          borderColor: info.main,
        },

        "&:after": {
          opacity: 1,
        },
      },
    },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/form/select.js

Code for file: /prospera-home/homepage/src/assets/theme/components/form/select.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM base styles
import colors from "assets/theme/base/colors";

// PROSPERA DEFI PLATFORM helper functions
import pxToRem from "assets/theme/functions/pxToRem";

const { transparent } = colors;

export default {
  styleOverrides: {
    select: {
      display: "grid",
      alignItems: "center",
      padding: `0 ${pxToRem(12)} !important`,

      "& .Mui-selected": {
        backgroundColor: transparent.main,
      },
    },

    selectMenu: {
      background: "none",
      height: "none",
      minHeight: "none",
      overflow: "unset",
    },

    icon: {
      display: "none",
    },
  },
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/form/switchButton.js

Code for file: /prospera-home/homepage/src/assets/theme/components/form/switchButton.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// PROSPERA DEFI PLATFORM base styles
import colors from "assets/theme/base/colors";
import borders from "assets/theme/base/borders";
import boxShadows from "assets/theme/base/boxShadows";

// PROSPERA DEFI PLATFORM helper functions
// import rgba from "assets/theme/functions/rgba";
import pxToRem from "assets/theme/functions/pxToRem";
import linearGradient from "assets/theme/functions/linearGradient";

const { white, gradients, grey, transparent } = colors;
const { borderWidth } = borders;
const { md } = boxShadows;

export default {
  defaultProps: {
    disableRipple: false,
  },

  styleOverrides: {
    switchBase: {
      color: gradients.dark.main,

      "&:hover": {
        backgroundColor: transparent.main,
      },

      "&.Mui-checked": {
        color: gradients.dark.main,

        "&:hover": {
          backgroundColor: transparent.main,
        },

        "& .MuiSwitch-thumb": {
          borderColor: `${gradients.dark.main} !important`,
        },

        "& + .MuiSwitch-track": {
          backgroundColor: `${gradients.dark.main} !important`,
          borderColor: `${gradients.dark.main} !important`,
          opacity: 1,
        },
      },

      "&.Mui-disabled + .MuiSwitch-track": {
        opacity: "0.3 !important",
      },

      "&.Mui-focusVisible .MuiSwitch-thumb": {
        backgroundImage: linearGradient(gradients.info.main, gradients.info.state),
      },
    },

    thumb: {
      backgroundColor: white.main,
      boxShadow: md,
      border: `${borderWidth[1]} solid ${grey[400]}`,
    },

    track: {
      width: pxToRem(32),
      height: pxToRem(15),
      backgroundColor: grey[400],
      border: `${borderWidth[1]} solid ${grey[400]}`,
      opacity: 1,
    },

    checked: {},
  },
};
```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/form/textField.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  Base Styles
import colors from "assets/theme/base/colors";

const { transparent } = colors;

export default {
  styleOverrides: {
    root: {
      backgroundColor: transparent.main,
    },
  },
};


```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/list/index.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

export default {
  styleOverrides: {
    padding: {
      paddingTop: 0,
      paddingBottom: 0,
    },
  },
};
```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/list/listItem.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

export default {
  defaultProps: {
    disableGutters: true,
  },

  styleOverrides: {
    root: {
      paddingTop: 0,
      paddingBottom: 0,
    },
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/list/listItemText.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

export default {
  styleOverrides: {
    root: {
      marginTop: 0,
      marginBottom: 0,
    },
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/menu/index.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  base styles
import boxShadows from "assets/theme/base/boxShadows";
import typography from "assets/theme/base/typography";
import colors from "assets/theme/base/colors";
import borders from "assets/theme/base/borders";

// PROSPERADEFI PRO React  helper functions
import pxToRem from "assets/theme/functions/pxToRem";

const { lg } = boxShadows;
const { size } = typography;
const { text, white } = colors;
const { borderRadius } = borders;

export default {
  defaultProps: {
    disableAutoFocusItem: true,
  },

  styleOverrides: {
    paper: {
      minWidth: pxToRem(160),
      boxShadow: lg,
      padding: `${pxToRem(16)} ${pxToRem(8)}`,
      fontSize: size.sm,
      color: text.main,
      textAlign: "left",
      backgroundColor: `${white.main} !important`,
      borderRadius: borderRadius.md,
    },
  },
};
```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/menu/menuItem.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  base styles
import colors from "assets/theme/base/colors";
import borders from "assets/theme/base/borders";
import typography from "assets/theme/base/typography";

// PROSPERADEFI PRO React  helper functions
import pxToRem from "assets/theme/functions/pxToRem";

const { light, text, dark } = colors;
const { borderRadius } = borders;
const { size } = typography;

export default {
  styleOverrides: {
    root: {
      minWidth: pxToRem(160),
      minHeight: "unset",
      padding: `${pxToRem(4.8)} ${pxToRem(16)}`,
      borderRadius: borderRadius.md,
      fontSize: size.sm,
      color: text.main,
      transition: "background-color 300ms ease, color 300ms ease",

      "&:hover, &:focus, &.Mui-selected, &.Mui-selected:hover, &.Mui-selected:focus": {
        backgroundColor: light.main,
        color: dark.main,
      },
    },
  },
};


```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/stepper/index.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  base styles
import colors from "assets/theme/base/colors";
import borders from "assets/theme/base/borders";
import boxShadows from "assets/theme/base/boxShadows";

// PROSPERADEFI PRO React  helper functions
import pxToRem from "assets/theme/functions/pxToRem";
import linearGradient from "assets/theme/functions/linearGradient";

const { transparent, gradients } = colors;
const { borderRadius } = borders;
const { colored } = boxShadows;

export default {
  styleOverrides: {
    root: {
      background: linearGradient(gradients.info.main, gradients.info.state),
      padding: `${pxToRem(24)} 0 ${pxToRem(16)}`,
      borderRadius: borderRadius.lg,
      boxShadow: colored.info,

      "&.MuiPaper-root": {
        backgroundColor: transparent.main,
      },
    },
  },
};
```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/stepper/step.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  helper functions
import pxToRem from "assets/theme/functions/pxToRem";

export default {
  styleOverrides: {
    root: {
      padding: `0 ${pxToRem(6)}`,
    },
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/stepper/stepConnector.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  base styles
import borders from "assets/theme/base/borders";
import colors from "assets/theme/base/colors";

const { white } = colors;
const { borderWidth } = borders;

export default {
  styleOverrides: {
    root: {
      color: "#9fc9ff",
      transition: "all 200ms linear",

      "&.Mui-active": {
        color: white.main,
      },

      "&.Mui-completed": {
        color: white.main,
      },
    },

    alternativeLabel: {
      top: "14%",
      left: "-50%",
      right: "50%",
    },

    line: {
      borderWidth: `${borderWidth[2]} !important`,
      borderColor: "currentColor",
      opacity: 0.5,
    },
  },
};
```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/stepper/stepIcon.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  base styles
import colors from "assets/theme/base/colors";

// PROSPERADEFI PRO React  helper functions
import pxToRem from "assets/theme/functions/pxToRem";
import boxShadow from "assets/theme/functions/boxShadow";

const { white } = colors;

export default {
  styleOverrides: {
    root: {
      background: "#9fc9ff",
      fill: "#9fc9ff",
      stroke: "#9fc9ff",
      strokeWidth: pxToRem(10),
      width: pxToRem(13),
      height: pxToRem(13),
      borderRadius: "50%",
      zIndex: 99,
      transition: "all 200ms linear",

      "&.Mui-active": {
        background: white.main,
        fill: white.main,
        stroke: white.main,
        borderColor: white.main,
        boxShadow: boxShadow([0, 0], [0, 2], white.main, 1),
      },

      "&.Mui-completed": {
        background: white.main,
        fill: white.main,
        stroke: white.main,
        borderColor: white.main,
        boxShadow: boxShadow([0, 0], [0, 2], white.main, 1),
      },
    },
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/stepper/stepLabel.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  base styles
import typography from "assets/theme/base/typography";
import colors from "assets/theme/base/colors";

// PROSPERADEFI PRO React  helper functions
import pxToRem from "assets/theme/functions/pxToRem";
import rgba from "assets/theme/functions/rgba";

const { size, fontWeightRegular } = typography;
const { white } = colors;

export default {
  styleOverrides: {
    label: {
      marginTop: `${pxToRem(8)} !important`,
      fontWeight: fontWeightRegular,
      fontSize: size.xs,
      color: "#9fc9ff",
      textTransform: "uppercase",

      "&.Mui-active": {
        fontWeight: `${fontWeightRegular} !important`,
        color: `${rgba(white.main, 0.8)} !important`,
      },

      "&.Mui-completed": {
        fontWeight: `${fontWeightRegular} !important`,
        color: `${rgba(white.main, 0.8)} !important`,
      },
    },
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/table/tableCell.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  base styles
import borders from "assets/theme/base/borders";
import colors from "assets/theme/base/colors";

// PROSPERADEFI PRO React  helper functions
import pxToRem from "assets/theme/functions/pxToRem";

const { borderWidth } = borders;
const { light } = colors;

export default {
  styleOverrides: {
    root: {
      padding: `${pxToRem(12)} ${pxToRem(16)}`,
      borderBottom: `${borderWidth[1]} solid ${light.main}`,
    },
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/table/tableContainer.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  base styles
import colors from "assets/theme/base/colors";
import boxShadows from "assets/theme/base/boxShadows";
import borders from "assets/theme/base/borders";

const { white } = colors;
const { md } = boxShadows;
const { borderRadius } = borders;

export default {
  styleOverrides: {
    root: {
      backgroundColor: white.main,
      boxShadow: md,
      borderRadius: borderRadius.xl,
    },
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/table/tableHead.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  base styles
import borders from "assets/theme/base/borders";

// PROSPERADEFI PRO React  helper functions
import pxToRem from "assets/theme/functions/pxToRem";

const { borderRadius } = borders;

export default {
  styleOverrides: {
    root: {
      display: "block",
      padding: `${pxToRem(16)} ${pxToRem(16)} 0  ${pxToRem(16)}`,
      borderRadius: `${borderRadius.xl} ${borderRadius.xl} 0 0`,
    },
  },
};
```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/tabs/index.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  base styles
import colors from "assets/theme/base/colors";
import borders from "assets/theme/base/borders";
import boxShadows from "assets/theme/base/boxShadows";

// PROSPERADEFI PRO React  helper functions
import pxToRem from "assets/theme/functions/pxToRem";

const { grey, white } = colors;
const { borderRadius } = borders;
const { tabsBoxShadow } = boxShadows;

export default {
  styleOverrides: {
    root: {
      position: "relative",
      backgroundColor: grey[100],
      borderRadius: borderRadius.xl,
      minHeight: "unset",
      padding: pxToRem(4),
    },

    flexContainer: {
      height: "100%",
      position: "relative",
      zIndex: 10,
    },

    fixed: {
      overflow: "unset !important",
      overflowX: "unset !important",
    },

    vertical: {
      "& .MuiTabs-indicator": {
        width: "100%",
      },
    },

    indicator: {
      height: "100%",
      borderRadius: borderRadius.lg,
      backgroundColor: white.main,
      boxShadow: tabsBoxShadow.indicator,
      transition: "all 500ms ease",
    },
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/tabs/tab.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  base styles
import typography from "assets/theme/base/typography";
import borders from "assets/theme/base/borders";
import colors from "assets/theme/base/colors";

// PROSPERADEFI PRO React  helper functions
import pxToRem from "assets/theme/functions/pxToRem";

const { size, fontWeightRegular } = typography;
const { borderRadius } = borders;
const { dark } = colors;

export default {
  styleOverrides: {
    root: {
      display: "flex",
      alignItems: "center",
      flexDirection: "row",
      flex: "1 1 auto",
      textAlign: "center",
      maxWidth: "unset !important",
      minWidth: "unset !important",
      minHeight: "unset !important",
      fontSize: size.md,
      fontWeight: fontWeightRegular,
      textTransform: "none",
      lineHeight: "inherit",
      padding: pxToRem(4),
      borderRadius: borderRadius.lg,
      color: `${dark.main} !important`,
      opacity: "1 !important",

      "& .material-icons, .material-icons-round": {
        marginBottom: "0 !important",
        marginRight: pxToRem(6),
      },

      "& svg": {
        marginBottom: "0 !important",
        marginRight: pxToRem(6),
      },

      "& i.MuiTab-iconWrapper": {
        marginBottom: 0,
      },
    },

    labelIcon: {
      paddingTop: pxToRem(4),
    },
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/appBar.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

export default {
  defaultProps: {
    color: "transparent",
  },

  styleOverrides: {
    root: {
      boxShadow: "none",
    },
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/avatar.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  base styles
import borders from "assets/theme/base/borders";

const { borderRadius } = borders;

export default {
  styleOverrides: {
    root: {
      transition: "all 200ms ease-in-out",
    },

    rounded: {
      borderRadius: borderRadius.lg,
    },

    img: {
      height: "auto",
    },
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/breadcrumbs.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  base styles
import colors from "assets/theme/base/colors";
import typography from "assets/theme/base/typography";

const { grey } = colors;
const { size } = typography;

export default {
  styleOverrides: {
    li: {
      lineHeight: 0,
    },

    separator: {
      fontSize: size.sm,
      color: grey[600],
    },
  },
};
```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/buttonBase.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

export default {
  defaultProps: {
    disableRipple: false,
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/container.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  base styles
import breakpoints from "assets/theme/base/breakpoints";

// PROSPERADEFI PRO React  helper functions
import pxToRem from "assets/theme/functions/pxToRem";

const {
  values: { sm, md, lg, xl, xxl },
} = breakpoints;

const SM = `@media (min-width: ${sm}px)`;
const MD = `@media (min-width: ${md}px)`;
const LG = `@media (min-width: ${lg}px)`;
const XL = `@media (min-width: ${xl}px)`;
const XXL = `@media (min-width: ${xxl}px)`;

const sharedClasses = {
  paddingRight: `${pxToRem(24)} !important`,
  paddingLeft: `${pxToRem(24)} !important`,
  marginRight: "auto !important",
  marginLeft: "auto !important",
  width: "100% !important",
  position: "relative",
};

export default {
  [SM]: {
    ".MuiContainer-root": {
      ...sharedClasses,
      maxWidth: "540px !important",
    },
  },
  [MD]: {
    ".MuiContainer-root": {
      ...sharedClasses,
      maxWidth: "720px !important",
    },
  },
  [LG]: {
    ".MuiContainer-root": {
      ...sharedClasses,
      maxWidth: "960px !important",
    },
  },
  [XL]: {
    ".MuiContainer-root": {
      ...sharedClasses,
      maxWidth: "1140px !important",
    },
  },
  [XXL]: {
    ".MuiContainer-root": {
      ...sharedClasses,
      maxWidth: "1320px !important",
    },
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/divider.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  base styles
import colors from "assets/theme/base/colors";

// PROSPERADEFI PRO React  helper functions
import rgba from "assets/theme/functions/rgba";
import pxToRem from "assets/theme/functions/pxToRem";

const { dark, white } = colors;

export default {
  styleOverrides: {
    root: {
      background: rgba(dark.main, 0.2),
      height: pxToRem(1),
      margin: `${pxToRem(16)} 0`,
      borderBottom: "none",
      opacity: 0.25,
    },

    vertical: {
      background: rgba(dark.main, 0.2),
      width: pxToRem(1),
      height: "100%",
      margin: `0 ${pxToRem(16)}`,
      borderRight: "none",
    },

    light: {
      background: rgba(white.main, 0.2),

      "&.MuiDivider-vertical": {
        background: rgba(white.main, 0.2),
      },
    },
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/flatpickr.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  base styles
import colors from "assets/theme/base/colors";

// PROSPERADEFI PRO React  helper functions
import rgba from "assets/theme/functions/rgba";

const { info, white, gradients } = colors;

export default {
  ".flatpickr-day:hover, .flatpickr-day:focus, .flatpickr-day.nextMonthDay:hover, .flatpickr-day.nextMonthDay:focus":
    {
      background: rgba(info.main, 0.28),
      border: "none",
    },

  ".flatpickr-day.today": {
    background: info.main,
    color: white.main,
    border: "none",

    "&:hover, &:focus": {
      background: `${info.focus} !important`,
    },
  },

  ".flatpickr-day.selected, .flatpickr-day.selected:hover, .flatpickr-day.nextMonthDay.selected, .flatpickr-day.nextMonthDay.selected:hover, .flatpickr-day.nextMonthDay.selected:focus":
    {
      background: `${gradients.info.state} !important`,
      color: white.main,
      border: "none",
    },

  ".flatpickr-months .flatpickr-next-month:hover svg, .flatpickr-months .flatpickr-prev-month:hover svg":
    {
      color: `${info.main} !important`,
      fill: `${info.main} !important`,
    },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/icon.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  helper functions
import pxToRem from "assets/theme/functions/pxToRem";

export default {
  defaultProps: {
    baseClassName: "material-icons-round",
    fontSize: "inherit",
  },

  styleOverrides: {
    fontSizeInherit: {
      fontSize: "inherit !important",
    },

    fontSizeSmall: {
      fontSize: `${pxToRem(20)} !important`,
    },

    fontSizeLarge: {
      fontSize: `${pxToRem(36)} !important`,
    },
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/iconButton.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  Base Styles
import colors from "assets/theme/base/colors";

const { transparent } = colors;

export default {
  styleOverrides: {
    root: {
      "&:hover": {
        backgroundColor: transparent.main,
      },
    },
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/linearProgress.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  base styles
import borders from "assets/theme/base/borders";
import colors from "assets/theme/base/colors";

// PROSPERADEFI PRO React  helper functions
import pxToRem from "assets/theme/functions/pxToRem";

const { borderRadius } = borders;
const { light } = colors;

export default {
  styleOverrides: {
    root: {
      height: pxToRem(6),
      borderRadius: borderRadius.md,
      overflow: "visible",
      position: "relative",
    },

    colorPrimary: {
      backgroundColor: light.main,
    },

    colorSecondary: {
      backgroundColor: light.main,
    },

    bar: {
      height: pxToRem(6),
      borderRadius: borderRadius.sm,
      position: "absolute",
      transform: `translate(0, 0) !important`,
      transition: "width 0.6s ease !important",
    },
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/link.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

export default {
  defaultProps: {
    underline: "none",
    color: "inherit",
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/popover.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  base styles
import colors from "assets/theme/base/colors";
import boxShadows from "assets/theme/base/boxShadows";
import borders from "assets/theme/base/borders";

const { transparent } = colors;
const { lg } = boxShadows;
const { borderRadius } = borders;

export default {
  styleOverrides: {
    paper: {
      backgroundColor: transparent.main,
      boxShadow: lg,
      borderRadius: borderRadius.md,
    },
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/slider.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  base styles
import colors from "assets/theme/base/colors";
import borders from "assets/theme/base/borders";
import boxShadows from "assets/theme/base/boxShadows";

// PROSPERADEFI PRO React  helper functions
import pxToRem from "assets/theme/functions/pxToRem";
import boxShadow from "assets/theme/functions/boxShadow";

const { grey, white, black, info } = colors;
const { borderRadius, borderWidth } = borders;
const { sliderBoxShadow } = boxShadows;

export default {
  styleOverrides: {
    root: {
      width: "100%",

      "& .MuiSlider-active, & .Mui-focusVisible": {
        boxShadow: "none !important",
      },

      "& .MuiSlider-valueLabel": {
        color: black.main,
      },
    },

    rail: {
      height: pxToRem(2),
      background: grey[200],
      borderRadius: borderRadius.sm,
      opacity: 1,
    },

    track: {
      background: info.main,
      height: pxToRem(2),
      position: "relative",
      border: "none",
      borderRadius: borderRadius.lg,
      zIndex: 1,
    },

    thumb: {
      width: pxToRem(14),
      height: pxToRem(14),
      backgroundColor: white.main,
      zIndex: 10,
      boxShadow: sliderBoxShadow.thumb,
      border: `${borderWidth[1]} solid ${info.main}`,
      transition: "all 200ms linear",

      "&:hover": {
        boxShadow: "none",
      },

      "&:active": {
        transform: "translate(-50%, -50%) scale(1.4)",
      },

      "&.Mui-active": { boxShadow: boxShadow([0, 0], [0, 14], info.main, 0.16) },
    },
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/svgIcon.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// PROSPERADEFI PRO React  helper functions
import pxToRem from "assets/theme/functions/pxToRem";

export default {
  defaultProps: {
    fontSize: "inherit",
  },

  styleOverrides: {
    fontSizeInherit: {
      fontSize: "inherit !important",
    },

    fontSizeSmall: {
      fontSize: `${pxToRem(20)} !important`,
    },

    fontSizeLarge: {
      fontSize: `${pxToRem(36)} !important`,
    },
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/swiper.js

Code For File:

```
// PROSPERADEFI PRO React  base styles
import colors from "assets/theme/base/colors";

// PROSPERADEFI PRO React  helper functions
import pxToRem from "assets/theme/functions/pxToRem";

const { white } = colors;

export default {
  ".swiper-button-prev, .swiper-button-next": {
    position: "absolute",
    top: "50%",
    padding: `0 ${pxToRem(64)}`,
    color: white.main,
    opacity: 0.5,
    transform: "translateY(-250%)",
    transition: "opacity 0.15s ease",

    "&::after": {
      fontSize: pxToRem(28),
    },

    "&:hover, &:focus": {
      opacity: 1,
    },
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/components/tooltip.js
Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// @mui material components
import Fade from "@mui/material/Fade";

// PROSPERADEFI PRO React  base styles
import colors from "assets/theme/base/colors";
import typography from "assets/theme/base/typography";
import borders from "assets/theme/base/borders";

// PROSPERADEFI PRO React  helper functions
import pxToRem from "assets/theme/functions/pxToRem";

const { black, light } = colors;
const { size, fontWeightRegular } = typography;
const { borderRadius } = borders;

export default {
  defaultProps: {
    arrow: true,
    TransitionComponent: Fade,
  },

  styleOverrides: {
    tooltip: {
      maxWidth: pxToRem(200),
      backgroundColor: black.main,
      color: light.main,
      fontSize: size.sm,
      fontWeight: fontWeightRegular,
      textAlign: "center",
      borderRadius: borderRadius.md,
      opacity: 0.7,
      padding: `${pxToRem(5)} ${pxToRem(8)} ${pxToRem(4)}`,
    },

    arrow: {
      color: black.main,
    },
  },
};

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/functions/boxShadow.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

/**
  The boxShadow() function helps you to create a box shadow for an element
 */

// PROSPERADEFI PRO React  helper functions
import rgba from "assets/theme/functions/rgba";
import pxToRem from "assets/theme/functions/pxToRem";

function boxShadow(offset = [], radius = [], color, opacity, inset = "") {
  const [x, y] = offset;
  const [blur, spread] = radius;

  return `${inset} ${pxToRem(x)} ${pxToRem(y)} ${pxToRem(blur)} ${pxToRem(spread)} ${rgba(
    color,
    opacity
  )}`;
}

export default boxShadow;

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/functions/gradientChartLine.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

/**
  The gradientChartLine() function helps you to create a gradient color for the chart line
 */

// PROSPERADEFI PRO React  helper functions
import rgba from "assets/theme/functions/rgba";

function gradientChartLine(chart, color, opacity = 0.2) {
  const ctx = chart.getContext("2d");
  const gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);
  const primaryColor = rgba(color, opacity).toString();

  gradientStroke.addColorStop(1, primaryColor);
  gradientStroke.addColorStop(0.2, "rgba(72, 72, 176, 0.0)");
  gradientStroke.addColorStop(0, "rgba(203, 12, 159, 0)");

  return gradientStroke;
}

export default gradientChartLine;

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/functions/hexToRgb.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

/**
  The hexToRgb() function helps you to change the hex color code to rgb
  using chroma-js library.
 */

// chroma-js is a library for all kinds of color conversions and color scales.
import chroma from "chroma-js";

function hexToRgb(color) {
  return chroma(color).rgb().join(", ");
}

export default hexToRgb;

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/functions/linearGradient.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

/**
  The linearGradient() function helps you to create a linear gradient color background
 */

function linearGradient(color, colorState, angle = 195) {
  return `linear-gradient(${angle}deg, ${color}, ${colorState})`;
}

export default linearGradient;

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/functions/pxToRem.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

/**
  The pxToRem() function helps you to convert a px unit into a rem unit, 
 */

function pxToRem(number, baseNumber = 16) {
  return `${number / baseNumber}rem`;
}

export default pxToRem;

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/functions/rgba.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

/**
  The rgba() function helps you to create a rgba color code, it uses the hexToRgb() function
  to convert the hex code into rgb for using it inside the rgba color format.
 */

// PROSPERADEFI PRO React  helper functions
import hexToRgb from "assets/theme/functions/hexToRgb";

function rgba(color, opacity) {
  return `rgba(${hexToRgb(color)}, ${opacity})`;
}

export default rgba;

```

---------------------------------------------------------------------------------

File: /prospera-home/homepage/src/assets/theme/index.js

Code For File:

```
/** 

=========================================================
* PROSPERADEFI PRO React - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERADEFI PRO React .

*/

// @mui material components
import { createTheme } from "@mui/material/styles";
// import Fade from "@mui/material/Fade";

// PROSPERADEFI PRO React  base styles
import colors from "assets/theme/base/colors";
import breakpoints from "assets/theme/base/breakpoints";
import typography from "assets/theme/base/typography";
import boxShadows from "assets/theme/base/boxShadows";
import borders from "assets/theme/base/borders";
import globals from "assets/theme/base/globals";

// PROSPERADEFI PRO React  helper functions
import boxShadow from "assets/theme/functions/boxShadow";
import hexToRgb from "assets/theme/functions/hexToRgb";
import linearGradient from "assets/theme/functions/linearGradient";
import pxToRem from "assets/theme/functions/pxToRem";
import rgba from "assets/theme/functions/rgba";

// PROSPERADEFI PRO React  components base styles for @mui material components
import list from "assets/theme/components/list";
import listItem from "assets/theme/components/list/listItem";
import listItemText from "assets/theme/components/list/listItemText";
import card from "assets/theme/components/card";
import cardMedia from "assets/theme/components/card/cardMedia";
import cardContent from "assets/theme/components/card/cardContent";
import button from "assets/theme/components/button";
import iconButton from "assets/theme/components/iconButton";
import input from "assets/theme/components/form/input";
import inputLabel from "assets/theme/components/form/inputLabel";
import inputOutlined from "assets/theme/components/form/inputOutlined";
import textField from "assets/theme/components/form/textField";
import menu from "assets/theme/components/menu";
import menuItem from "assets/theme/components/menu/menuItem";
import switchButton from "assets/theme/components/form/switchButton";
import divider from "assets/theme/components/divider";
import tableContainer from "assets/theme/components/table/tableContainer";
import tableHead from "assets/theme/components/table/tableHead";
import tableCell from "assets/theme/components/table/tableCell";
import linearProgress from "assets/theme/components/linearProgress";
import breadcrumbs from "assets/theme/components/breadcrumbs";
import slider from "assets/theme/components/slider";
import avatar from "assets/theme/components/avatar";
import tooltip from "assets/theme/components/tooltip";
import appBar from "assets/theme/components/appBar";
import tabs from "assets/theme/components/tabs";
import tab from "assets/theme/components/tabs/tab";
import stepper from "assets/theme/components/stepper";
import step from "assets/theme/components/stepper/step";
import stepConnector from "assets/theme/components/stepper/stepConnector";
import stepLabel from "assets/theme/components/stepper/stepLabel";
import stepIcon from "assets/theme/components/stepper/stepIcon";
import select from "assets/theme/components/form/select";
import formControlLabel from "assets/theme/components/form/formControlLabel";
import formLabel from "assets/theme/components/form/formLabel";
import checkbox from "assets/theme/components/form/checkbox";
import radio from "assets/theme/components/form/radio";
import autocomplete from "assets/theme/components/form/autocomplete";
import flatpickr from "assets/theme/components/flatpickr";
import container from "assets/theme/components/container";
import popover from "assets/theme/components/popover";
import buttonBase from "assets/theme/components/buttonBase";
import icon from "assets/theme/components/icon";
import svgIcon from "assets/theme/components/svgIcon";
import link from "assets/theme/components/link";
import dialog from "assets/theme/components/dialog";
import dialogTitle from "assets/theme/components/dialog/dialogTitle";
import dialogContent from "assets/theme/components/dialog/dialogContent";
import dialogContentText from "assets/theme/components/dialog/dialogContentText";
import dialogActions from "assets/theme/components/dialog/dialogActions";
import swiper from "assets/theme/components/swiper";

export default createTheme({
  breakpoints: { ...breakpoints },
  palette: { ...colors },
  typography: { ...typography },
  boxShadows: { ...boxShadows },
  borders: { ...borders },
  functions: {
    boxShadow,
    hexToRgb,
    linearGradient,
    pxToRem,
    rgba,
  },

  components: {
    MuiCssBaseline: {
      styleOverrides: {
        ...globals,
        ...flatpickr,
        ...container,
        ...swiper,
      },
    },
    MuiList: { ...list },
    MuiListItem: { ...listItem },
    MuiListItemText: { ...listItemText },
    MuiCard: { ...card },
    MuiCardMedia: { ...cardMedia },
    MuiCardContent: { ...cardContent },
    MuiButton: { ...button },
    MuiIconButton: { ...iconButton },
    MuiInput: { ...input },
    MuiInputLabel: { ...inputLabel },
    MuiOutlinedInput: { ...inputOutlined },
    MuiTextField: { ...textField },
    MuiMenu: { ...menu },
    MuiMenuItem: { ...menuItem },
    MuiSwitch: { ...switchButton },
    MuiDivider: { ...divider },
    MuiTableContainer: { ...tableContainer },
    MuiTableHead: { ...tableHead },
    MuiTableCell: { ...tableCell },
    MuiLinearProgress: { ...linearProgress },
    MuiBreadcrumbs: { ...breadcrumbs },
    MuiSlider: { ...slider },
    MuiAvatar: { ...avatar },
    MuiTooltip: { ...tooltip },
    MuiAppBar: { ...appBar },
    MuiTabs: { ...tabs },
    MuiTab: { ...tab },
    MuiStepper: { ...stepper },
    MuiStep: { ...step },
    MuiStepConnector: { ...stepConnector },
    MuiStepLabel: { ...stepLabel },
    MuiStepIcon: { ...stepIcon },
    MuiSelect: { ...select },
    MuiFormControlLabel: { ...formControlLabel },
    MuiFormLabel: { ...formLabel },
    MuiCheckbox: { ...checkbox },
    MuiRadio: { ...radio },
    MuiAutocomplete: { ...autocomplete },
    MuiPopover: { ...popover },
    MuiButtonBase: { ...buttonBase },
    MuiIcon: { ...icon },
    MuiSvgIcon: { ...svgIcon },
    MuiLink: { ...link },
    MuiDialog: { ...dialog },
    MuiDialogTitle: { ...dialogTitle },
    MuiDialogContent: { ...dialogContent },
    MuiDialogContentText: { ...dialogContentText },
    MuiDialogActions: { ...dialogActions },
    ```

    ------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/BetaAccessHOC/index.js

Code for File:

```
import React, { useContext } from "react";
import { AuthContext } from "../contexts/AuthContext";
import { BetaContext } from "../contexts/BetaContext";
import { WalletContext } from "../contexts/WalletContext";

const BetaAccessHOC = (WrappedComponent) => {
  return function WithBetaAccess(props) {
    const { user } = useContext(AuthContext);
    const { isBetaMode, isWhitelisted, hasRequestedWhitelist, requestWhitelist } =
      useContext(BetaContext);
    const { wallet } = useContext(WalletContext);

    if (!user) {
      return <div>Please sign in to access this page.</div>;
    }

    if (
      isBetaMode &&
      !isWhitelisted &&
      !["admin", "co-admin", "prosperaTeam", "kol"].includes(user.role)
    ) {
      if (!hasRequestedWhitelist) {
        return (
          <div>
            <p>You are not an approved member to access during beta-testing.</p>
            <button onClick={() => requestWhitelist(wallet.address)}>
              Request Whitelist Access
            </button>
          </div>
        );
      } else {
        return <div>Your whitelist request is being processed. Please check back later.</div>;
      }
    }

    return <WrappedComponent {...props} />;
  };
};

export default BetaAccessHOC;
```

    ------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/DefaultNavbar/DefaultNavbarDropdown.js

Code for File: /prospera-home/homepage/src/components/DefaultNavbar/DefaultNavbarDropdown.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// react-router-dom components
import { Link } from "react-router-dom";

// @mui material components
import Collapse from "@mui/material/Collapse";
import Icon from "@mui/material/Icon";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

function DefaultNavbarDropdown({
  name,
  icon,
  children,
  collapseStatus,
  light,
  href,
  route,
  collapse,
  ...rest
}) {
  const linkComponent = {
    component: "a",
    href,
    target: "_blank",
    rel: "noreferrer",
  };

  const routeComponent = {
    component: Link,
    to: route,
  };

  return (
    <>
      <MKBox
        {...rest}
        mx={1}
        p={1}
        display="flex"
        alignItems="baseline"
        color={light ? "white" : "white"}
        opacity={light ? 1 : 0.6}
        sx={{ cursor: "pointer", userSelect: "none" }}
        {...(route && routeComponent)}
        {...(href && linkComponent)}
      >
        <MKTypography
          variant="body2"
          lineHeight={1}
          color="inherit"
          sx={{ alignSelf: "center", "& *": { verticalAlign: "middle" } }}
        >
          {icon}
        </MKTypography>
        <MKTypography
          variant="button"
          fontWeight="regular"
          textTransform="capitalize"
          color={light ? "white" : "white"}
          sx={{ fontWeight: "100%", ml: 1, mr: 0.25 }}
        >
          {name}
        </MKTypography>
        <MKTypography variant="body2" color={light ? "white" : "white"} ml="auto">
          <Icon sx={{ fontWeight: "normal", verticalAlign: "middle" }}>
            {collapse && "keyboard_arrow_down"}
          </Icon>
        </MKTypography>
      </MKBox>
      {children && (
        <Collapse in={Boolean(collapseStatus)} timeout={400} unmountOnExit>
          {children}
        </Collapse>
      )}
    </>
  );
}

// Setting default values for the props of DefaultNavbarDropdown
DefaultNavbarDropdown.defaultProps = {
  children: false,
  collapseStatus: false,
  light: false,
  href: "",
  route: "",
};

// Typechecking props for the DefaultNavbarDropdown
DefaultNavbarDropdown.propTypes = {
  name: PropTypes.string.isRequired,
  icon: PropTypes.node.isRequired,
  children: PropTypes.node,
  collapseStatus: PropTypes.bool,
  light: PropTypes.bool,
  href: PropTypes.string,
  route: PropTypes.string,
  collapse: PropTypes.bool.isRequired,
};

export default DefaultNavbarDropdown;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/DefaultNavbar/DefaultNavbarMobile.js

Code for File: /prospera-home/homepage/src/components/DefaultNavbar/DefaultNavbarMobile.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import { useState } from "react";

// react-router components
import { Link } from "react-router-dom";

// prop-types is a library for typechecking of props.
import PropTypes from "prop-types";

// @mui material components
import Collapse from "@mui/material/Collapse";
import MuiLink from "@mui/material/Link";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

// PROSPERA DEFI PLATFORM examples
import DefaultNavbarDropdown from "./DefaultNavbarDropdown";

function DefaultNavbarMobile({ routes, open }) {
  const [collapse, setCollapse] = useState("");

  const handleSetCollapse = (name) => (collapse === name ? setCollapse(false) : setCollapse(name));

  const renderNavbarItems = routes.map(
    ({ name, icon, collapse: routeCollapses, href, route, collapse: navCollapse }) => (
      <DefaultNavbarDropdown
        key={name}
        name={name}
        icon={icon}
        collapseStatus={name === collapse}
        onClick={() => handleSetCollapse(name)}
        href={href}
        route={route}
        collapse={Boolean(navCollapse)}
      >
        <MKBox sx={{ height: "15rem", maxHeight: "15rem", overflowY: "scroll" }}>
          {routeCollapses &&
            routeCollapses.map((item) => (
              <MKBox key={item.name} px={2}>
                {item.collapse ? (
                  <>
                    <MKTypography
                      display="block"
                      variant="button"
                      fontWeight="bold"
                      textTransform="capitalize"
                      py={1}
                      px={0.5}
                    >
                      {item.name}
                    </MKTypography>
                    {item.collapse.map((el) => (
                      <MKTypography
                        key={el.name}
                        component={el.route ? Link : MuiLink}
                        to={el.route ? el.route : ""}
                        href={el.href ? el.href : ""}
                        target={el.href ? "_blank" : ""}
                        rel={el.href ? "noreferrer" : "noreferrer"}
                        minWidth="11.25rem"
                        display="block"
                        variant="button"
                        color="text"
                        textTransform="capitalize"
                        fontWeight="regular"
                        py={0.625}
                        px={2}
                        sx={({ palette: { grey, dark }, borders: { borderRadius } }) => ({
                          borderRadius: borderRadius.md,
                          cursor: "pointer",
                          transition: "all 300ms linear",

                          "&:hover": {
                            backgroundColor: grey[200],
                            color: dark.main,
                          },
                        })}
                      >
                        {el.name}
                      </MKTypography>
                    ))}
                  </>
                ) : (
                  <MKBox
                    key={item.key}
                    display="block"
                    component={item.route ? Link : MuiLink}
                    to={item.route ? item.route : ""}
                    href={item.href ? item.href : ""}
                    target={item.href ? "_blank" : ""}
                    rel={item.href ? "noreferrer" : "noreferrer"}
                    sx={({ palette: { grey, dark }, borders: { borderRadius } }) => ({
                      borderRadius: borderRadius.md,
                      cursor: "pointer",
                      transition: "all 300ms linear",
                      py: 1,
                      px: 1.625,

                      "&:hover": {
                        backgroundColor: grey[200],
                        color: dark.main,

                        "& *": {
                          color: dark.main,
                        },
                      },
                    })}
                  >
                    <MKTypography
                      display="block"
                      variant="button"
                      fontWeight="bold"
                      textTransform="capitalize"
                    >
                      {item.name}
                    </MKTypography>
                    <MKTypography
                      display="block"
                      variant="button"
                      color="text"
                      fontWeight="regular"
                      sx={{ transition: "all 300ms linear" }}
                    >
                      {item.description}
                    </MKTypography>
                  </MKBox>
                )}
              </MKBox>
            ))}
        </MKBox>
      </DefaultNavbarDropdown>
    )
  );

  return (
    <Collapse in={Boolean(open)} timeout="auto" unmountOnExit>
      <MKBox width="calc(100% + 1.625rem)" my={2} ml={-2}>
        {renderNavbarItems}
      </MKBox>
    </Collapse>
  );
}

// Typechecking props for the DefaultNavbarMobile
DefaultNavbarMobile.propTypes = {
  routes: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object])).isRequired,
  open: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]).isRequired,
};

export default DefaultNavbarMobile;
```

------------------------------------------------------------------------------------

    ------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/DefaultNavbar/index.js

Code for File: /prospera-home/homepage/src/components/DefaultNavbar/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import { Fragment, useState, useEffect } from "react";

// react-router components
import { Link } from "react-router-dom";

// prop-types is a library for typechecking of props.
import PropTypes from "prop-types";

// @mui material components
import Container from "@mui/material/Container";
import Icon from "@mui/material/Icon";
import Popper from "@mui/material/Popper";
import Grow from "@mui/material/Grow";
import Grid from "@mui/material/Grid";
import Divider from "@mui/material/Divider";
import MuiLink from "@mui/material/Link";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import MKButton from "components/MKButton";

// PROSPERA DEFI PLATFORM examples
import DefaultNavbarDropdown from "./DefaultNavbarDropdown";
import DefaultNavbarMobile from "./DefaultNavbarMobile";

// PROSPERA DEFI PLATFORM base styles
import breakpoints from "assets/theme/base/breakpoints";

function DefaultNavbar({ brand, routes, transparent, light, action, sticky, relative, center }) {
  const [dropdown, setDropdown] = useState("");
  const [dropdownEl, setDropdownEl] = useState("");
  const [dropdownName, setDropdownName] = useState("");
  const [nestedDropdown, setNestedDropdown] = useState("");
  const [nestedDropdownEl, setNestedDropdownEl] = useState("");
  const [nestedDropdownName, setNestedDropdownName] = useState("");
  const [arrowRef, setArrowRef] = useState(null);
  const [mobileNavbar, setMobileNavbar] = useState(false);
  const [mobileView, setMobileView] = useState(false);

  const openMobileNavbar = () => setMobileNavbar(!mobileNavbar);

  useEffect(() => {
    // A function that sets the display state for the DefaultNavbarMobile.
    function displayMobileNavbar() {
      if (window.innerWidth < breakpoints.values.lg) {
        setMobileView(true);
        setMobileNavbar(false);
      } else {
        setMobileView(false);
        setMobileNavbar(false);
      }
    }

    /** 
     The event listener that's calling the displayMobileNavbar function when 
     resizing the window.
    */
    window.addEventListener("resize", displayMobileNavbar);

    // Call the displayMobileNavbar function to set the state with the initial value.
    displayMobileNavbar();

    // Remove event listener on cleanup
    return () => window.removeEventListener("resize", displayMobileNavbar);
  }, []);

  const renderNavbarItems = routes.map(({ name, icon, href, route, collapse }) => (
    <DefaultNavbarDropdown
      key={name}
      name={name}
      icon={icon}
      href={href}
      route={route}
      collapse={Boolean(collapse)}
      onMouseEnter={({ currentTarget }) => {
        if (collapse) {
          setDropdown(currentTarget);
          setDropdownEl(currentTarget);
          setDropdownName(name);
        }
      }}
      onMouseLeave={() => collapse && setDropdown(null)}
      light={light}
    />
  ));

  // Render the routes on the dropdown menu
  const renderRoutes = routes.map(({ name, collapse, columns, rowsPerColumn }) => {
    let template;

    // Render the dropdown menu that should be display as columns
    if (collapse && columns && name === dropdownName) {
      const calculateColumns = collapse.reduce((resultArray, item, index) => {
        const chunkIndex = Math.floor(index / rowsPerColumn);

        if (!resultArray[chunkIndex]) {
          resultArray[chunkIndex] = [];
        }

        resultArray[chunkIndex].push(item);

        return resultArray;
      }, []);

      template = (
        <Grid key={name} container spacing={3} py={1} px={1.5}>
          {calculateColumns.map((cols, key) => {
            const gridKey = `grid-${key}`;
            const dividerKey = `divider-${key}`;

            return (
              <Grid key={gridKey} item xs={12 / columns} sx={{ position: "relative" }}>
                {cols.map((col, index) => (
                  <Fragment key={col.name}>
                    <MKTypography
                      display="block"
                      variant="button"
                      fontWeight="bold"
                      textTransform="capitalize"
                      py={1}
                      px={0.5}
                      mt={index !== 0 ? 2 : 0}
                    >
                      {col.name}
                    </MKTypography>
                    {col.collapse.map((item) => (
                      <MKTypography
                        key={item.name}
                        component={item.route ? Link : MuiLink}
                        to={item.route ? item.route : ""}
                        href={item.href ? item.href : (e) => e.preventDefault()}
                        target={item.href ? "_blank" : ""}
                        rel={item.href ? "noreferrer" : "noreferrer"}
                        minWidth="11.25rem"
                        display="block"
                        variant="button"
                        color="text"
                        textTransform="capitalize"
                        fontWeight="regular"
                        py={0.625}
                        px={2}
                        sx={({ palette: { grey, dark }, borders: { borderRadius } }) => ({
                          borderRadius: borderRadius.md,
                          cursor: "pointer",
                          transition: "all 300ms linear",

                          "&:hover": {
                            backgroundColor: grey[200],
                            color: dark.main,
                          },
                        })}
                      >
                        {item.name}
                      </MKTypography>
                    ))}
                  </Fragment>
                ))}
                {key !== 0 && (
                  <Divider
                    key={dividerKey}
                    orientation="vertical"
                    sx={{
                      position: "absolute",
                      top: "50%",
                      left: "-4px",
                      transform: "translateY(-45%)",
                      height: "90%",
                    }}
                  />
                )}
              </Grid>
            );
          })}
        </Grid>
      );

      // Render the dropdown menu that should be display as list items
    } else if (collapse && name === dropdownName) {
      template = collapse.map((item) => {
        const linkComponent = {
          component: MuiLink,
          href: item.href,
          target: "_blank",
          rel: "noreferrer",
        };

        const routeComponent = {
          component: Link,
          to: item.route,
        };

        return (
          <MKTypography
            key={item.name}
            {...(item.route ? routeComponent : linkComponent)}
            display="flex"
            justifyContent="space-between"
            alignItems="center"
            variant="button"
            textTransform="capitalize"
            minWidth={item.description ? "14rem" : "12rem"}
            color={item.description ? "dark" : "text"}
            fontWeight={item.description ? "bold" : "regular"}
            py={item.description ? 1 : 0.625}
            px={2}
            sx={({ palette: { grey, dark }, borders: { borderRadius } }) => ({
              borderRadius: borderRadius.md,
              cursor: "pointer",
              transition: "all 300ms linear",

              "&:hover": {
                backgroundColor: grey[200],
                color: dark.main,

                "& *": {
                  color: dark.main,
                },
              },
            })}
            onMouseEnter={({ currentTarget }) => {
              if (item.dropdown) {
                setNestedDropdown(currentTarget);
                setNestedDropdownEl(currentTarget);
                setNestedDropdownName(item.name);
              }
            }}
            onMouseLeave={() => {
              if (item.dropdown) {
                setNestedDropdown(null);
              }
            }}
          >
            {item.description ? (
              <MKBox>
                {item.name}
                <MKTypography
                  display="block"
                  variant="button"
                  color="text"
                  fontWeight="regular"
                  sx={{ transition: "all 300ms linear" }}
                >
                  {item.description}
                </MKTypography>
              </MKBox>
            ) : (
              item.name
            )}
            {item.collapse && (
              <Icon
                fontSize="small"
                sx={{ fontWeight: "normal", verticalAlign: "middle", mr: -0.5 }}
              >
                keyboard_arrow_right
              </Icon>
            )}
          </MKTypography>
        );
      });
    }

    return template;
  });

  // Routes dropdown menu
  const dropdownMenu = (
    <Popper
      anchorEl={dropdown}
      popperRef={null}
      open={Boolean(dropdown)}
      placement="top-start"
      transition
      style={{ zIndex: 10 }}
      modifiers={[
        {
          name: "arrow",
          enabled: true,
          options: {
            element: arrowRef,
          },
        },
      ]}
      onMouseEnter={() => setDropdown(dropdownEl)}
      onMouseLeave={() => {
        if (!nestedDropdown) {
          setDropdown(null);
          setDropdownName("");
        }
      }}
    >
      {({ TransitionProps }) => (
        <Grow
          {...TransitionProps}
          sx={{
            transformOrigin: "left top",
            background: ({ palette: { black } }) => black.main,
          }}
        >
          <MKBox borderRadius="lg">
            <MKTypography variant="h1" color="pros">
              <Icon ref={setArrowRef} sx={{ mt: -3 }}>
                arrow_drop_up
              </Icon>
            </MKTypography>
            <MKBox shadow="lg" borderRadius="lg" p={2} mt={2}>
              {renderRoutes}
            </MKBox>
          </MKBox>
        </Grow>
      )}
    </Popper>
  );

  // Render routes that are nested inside the dropdown menu routes
  const renderNestedRoutes = routes.map(({ collapse, columns }) =>
    collapse && !columns
      ? collapse.map(({ name: parentName, collapse: nestedCollapse }) => {
          let template;

          if (parentName === nestedDropdownName) {
            template =
              nestedCollapse &&
              nestedCollapse.map((item) => {
                const linkComponent = {
                  component: MuiLink,
                  href: item.href,
                  target: "_blank",
                  rel: "noreferrer",
                };

                const routeComponent = {
                  component: Link,
                  to: item.route,
                };

                return (
                  <MKTypography
                    key={item.name}
                    {...(item.route ? routeComponent : linkComponent)}
                    display="flex"
                    justifyContent="space-between"
                    alignItems="center"
                    variant="button"
                    textTransform="capitalize"
                    minWidth={item.description ? "14rem" : "12rem"}
                    color={item.description ? "white" : "text"}
                    fontWeight={item.description ? "bold" : "regular"}
                    py={item.description ? 1 : 0.625}
                    px={2}
                    sx={({ palette: { grey, dark }, borders: { borderRadius } }) => ({
                      borderRadius: borderRadius.md,
                      cursor: "pointer",
                      transition: "all 300ms linear",

                      "&:hover": {
                        backgroundColor: grey[200],
                        color: dark.main,

                        "& *": {
                          color: dark.main,
                        },
                      },
                    })}
                  >
                    {item.description ? (
                      <MKBox>
                        {item.name}
                        <MKTypography
                          display="block"
                          variant="button"
                          color="text"
                          fontWeight="regular"
                          sx={{ transition: "all 300ms linear" }}
                        >
                          {item.description}
                        </MKTypography>
                      </MKBox>
                    ) : (
                      item.name
                    )}
                    {item.collapse && (
                      <Icon
                        fontSize="small"
                        sx={{ fontWeight: "normal", verticalAlign: "middle", mr: -0.5 }}
                      >
                        keyboard_arrow_right
                      </Icon>
                    )}
                  </MKTypography>
                );
              });
          }

          return template;
        })
      : null
  );

  // Dropdown menu for the nested dropdowns
  const nestedDropdownMenu = (
    <Popper
      anchorEl={nestedDropdown}
      popperRef={null}
      open={Boolean(nestedDropdown)}
      placement="right-start"
      transition
      style={{ zIndex: 10 }}
      onMouseEnter={() => {
        setNestedDropdown(nestedDropdownEl);
      }}
      onMouseLeave={() => {
        setNestedDropdown(null);
        setNestedDropdownName("");
        setDropdown(null);
      }}
    >
      {({ TransitionProps }) => (
        <Grow
          {...TransitionProps}
          sx={{
            transformOrigin: "left top",
            background: ({ palette: { black } }) => black.main,
          }}
        >
          <MKBox ml={2.5} mt={-2.5} borderRadius="lg">
            <MKBox shadow="lg" borderRadius="lg" py={1.5} px={1} mt={2}>
              {renderNestedRoutes}
            </MKBox>
          </MKBox>
        </Grow>
      )}
    </Popper>
  );

  return (
    <Container sx={sticky ? { position: "sticky", top: 0, zIndex: 10 } : null}>
      <MKBox
        py={1}
        px={{ xs: 4, sm: transparent ? 2 : 3, lg: transparent ? 0 : 2 }}
        my={relative ? 0 : 2}
        mx={relative ? 0 : 3}
        width={relative ? "100%" : "calc(100% - 48px)"}
        borderRadius="xl"
        shadow={transparent ? "none" : "md"}
        color={light ? "white" : "black"}
        position={relative ? "relative" : "absolute"}
        left={0}
        zIndex={3}
        sx={({ palette: { transparent: transparentColor, black }, functions: { rgba } }) => ({
          backgroundColor: transparent ? transparentColor.main : rgba(black.main, 0.8),
          backdropFilter: transparent ? "none" : `saturate(200%) blur(30px)`,
        })}
      >
        <MKBox display="flex" justifyContent="space-between" alignItems="center">
          <MKBox
            component={Link}
            to="/"
            lineHeight={1}
            py={transparent ? 1.5 : 0.75}
            pl={relative || transparent ? 0 : { xs: 0, lg: 1 }}
          >
            <MKTypography variant="button" fontWeight="bold" color={light ? "" : "white"}>
              {brand}
            </MKTypography>
          </MKBox>
          <MKBox
            color="inherit"
            display={{ xs: "none", lg: "flex" }}
            ml="auto"
            mr={center ? "auto" : 0}
          >
            {renderNavbarItems}
          </MKBox>
          <MKBox ml={{ xs: "auto", lg: 0 }}>
            {action &&
              (action.type === "internal" ? (
                <MKButton
                  component={Link}
                  to={action.route}
                  variant={
                    action.color === "white" || action.color === "default"
                      ? "contained"
                      : "gradient"
                  }
                  color={action.color ? action.color : "info"}
                  size="small"
                >
                  {action.label}
                </MKButton>
              ) : (
                <MKButton
                  component="a"
                  href={action.route}
                  target="_blank"
                  rel="noreferrer"
                  variant={
                    action.color === "white" || action.color === "default"
                      ? "contained"
                      : "gradient"
                  }
                  color={action.color ? action.color : "info"}
                  size="small"
                >
                  {action.label}
                </MKButton>
              ))}
          </MKBox>
          <MKBox
            display={{ xs: "inline-block", lg: "none" }}
            lineHeight={0}
            py={1.5}
            pl={1.5}
            color={transparent ? "white" : "inherit"}
            sx={{ cursor: "pointer" }}
            onClick={openMobileNavbar}
          >
            <Icon fontSize="default">{mobileNavbar ? "close" : "menu"}</Icon>
          </MKBox>
        </MKBox>
        <MKBox
          bgColor={transparent ? "black" : "transparent"}
          shadow={transparent ? "lg" : "none"}
          borderRadius="xl"
          px={transparent ? 2 : 0}
        >
          {mobileView && <DefaultNavbarMobile routes={routes} open={mobileNavbar} />}
        </MKBox>
      </MKBox>
      {dropdownMenu}
      {nestedDropdownMenu}
    </Container>
  );
}

// Setting default values for the props of DefaultNavbar
DefaultNavbar.defaultProps = {
  brand: "PROSPERA",
  transparent: false,
  light: false,
  action: false,
  sticky: false,
  relative: false,
  center: false,
};

// Typechecking props for the DefaultNavbar
DefaultNavbar.propTypes = {
  brand: PropTypes.string,
  routes: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object])).isRequired,
  transparent: PropTypes.bool,
  light: PropTypes.bool,
  action: PropTypes.oneOfType([
    PropTypes.bool,
    PropTypes.shape({
      type: PropTypes.oneOf(["external", "internal"]).isRequired,
      route: PropTypes.string.isRequired,
      color: PropTypes.oneOf([
        "primary",
        "secondary",
        "info",
        "success",
        "warning",
        "error",
        "dark",
        "light",
        "pros",
        "black",
        "default",
        "white",
      ]),
      label: PropTypes.string.isRequired,
    }),
  ]),
  sticky: PropTypes.bool,
  relative: PropTypes.bool,
  center: PropTypes.bool,
};

export default DefaultNavbar;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/footer/index.js

Code for File: /prospera-home/homepage/src/components/footer/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// react-router-dom components
import { Link } from "react-router-dom";

// prop-types is a library for typechecking of props.
import PropTypes from "prop-types";

// @mui material components
import Container from "@mui/material/Container";
import Grid from "@mui/material/Grid";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

function DefaultFooter({ content }) {
  const { brand, socials, menus, copyright } = content;

  return (
    <MKBox component="footer">
      <Container>
        <Grid container spacing={3}>
          <Grid item xs={12} md={3} sx={{ ml: "auto", mb: 3 }}>
            <MKBox>
              <Link to={brand.route}>
                <MKBox component="img" src={brand.image} alt={brand.name} maxWidth="2rem" mb={2} />
              </Link>
              <MKTypography color="pros" variant="h6">
                {brand.name}
              </MKTypography>
            </MKBox>
            <MKBox display="flex" alignItems="center" mt={3}>
              {socials.map(({ icon, link }, key) => (
                <MKTypography
                  key={link}
                  component="a"
                  href={link}
                  target="_blank"
                  rel="noreferrer"
                  variant="h5"
                  color="pros"
                  opacity={0.8}
                  mr={key === socials.length - 1 ? 0 : 2.5}
                >
                  {icon}
                </MKTypography>
              ))}
            </MKBox>
          </Grid>
          {menus.map(({ name: title, items }) => (
            <Grid key={title} item xs={6} md={2} sx={{ mb: 3 }}>
              <MKTypography
                display="block"
                color="pros"
                variant="button"
                fontWeight="bold"
                textTransform="capitalize"
                mb={1}
              >
                {title}
              </MKTypography>
              <MKBox component="ul" p={0} m={0} sx={{ listStyle: "none" }}>
                {items.map(({ name, route, href }) => (
                  <MKBox key={name} component="li" p={0} m={0} lineHeight={1.25}>
                    {href ? (
                      <MKTypography
                        component="a"
                        color="white"
                        href={href}
                        target="_blank"
                        rel="noreferrer"
                        variant="button"
                        fontWeight="regular"
                        textTransform="capitalize"
                      >
                        {name}
                      </MKTypography>
                    ) : (
                      <MKTypography
                        component={Link}
                        color="white"
                        to={route}
                        variant="button"
                        fontWeight="regular"
                        textTransform="capitalize"
                      >
                        {name}
                      </MKTypography>
                    )}
                  </MKBox>
                ))}
              </MKBox>
            </Grid>
          ))}
          <Grid item xs={12} sx={{ textAlign: "center", my: 3 }}>
            {copyright}
          </Grid>
        </Grid>
      </Container>
    </MKBox>
  );
}

// Typechecking props for the DefaultFooter
DefaultFooter.propTypes = {
  content: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.object, PropTypes.array])).isRequired,
};

export default DefaultFooter;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKAlert/index.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import { useState } from "react";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Fade from "@mui/material/Fade";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";

// Custom styles for the MKAlert
import MKAlertRoot from "components/MKAlert/MKAlertRoot";
import MKAlertCloseIcon from "components/MKAlert/MKAlertCloseIcon";

function MKAlert({ color, dismissible, children, ...rest }) {
  const [alertStatus, setAlertStatus] = useState("mount");

  const handleAlertStatus = () => setAlertStatus("fadeOut");

  // The base template for the alert
  const alertTemplate = (mount = true) => (
    <Fade in={mount} timeout={300}>
      <MKAlertRoot ownerState={{ color }} {...rest}>
        <MKBox
          display="flex"
          alignItems="center"
          fontSize="1rem"
          fontWeight="regular"
          color={color === "light" ? "dark" : "white"}
        >
          {children}
        </MKBox>
        {dismissible ? (
          <MKAlertCloseIcon onClick={mount ? handleAlertStatus : null}>&times;</MKAlertCloseIcon>
        ) : null}
      </MKAlertRoot>
    </Fade>
  );

  switch (true) {
    case alertStatus === "mount":
      return alertTemplate();
    case alertStatus === "fadeOut":
      setTimeout(() => setAlertStatus("unmount"), 400);
      return alertTemplate(false);
    default:
      alertTemplate();
      break;
  }

  return null;
}

// Setting default values for the props of MKAlert
MKAlert.defaultProps = {
  color: "info",
  dismissible: false,
};

// Typechecking props of the MKAlert
MKAlert.propTypes = {
  color: PropTypes.oneOf([
    "primary",
    "secondary",
    "info",
    "success",
    "warning",
    "error",
    "light",
    "dark",
  ]),
  dismissible: PropTypes.bool,
  children: PropTypes.node.isRequired,
};

export default MKAlert;

```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKAlert/MKAlertCloseIcon.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// @mui material components
import { styled } from "@mui/material/styles";

export default styled("span")(({ theme }) => {
  const { palette, typography, functions } = theme;

  const { white } = palette;
  const { size, fontWeightMedium } = typography;
  const { pxToRem } = functions;

  return {
    color: white.main,
    fontSize: size.xl,
    padding: `${pxToRem(9)} ${pxToRem(6)} ${pxToRem(8)}`,
    marginLeft: pxToRem(40),
    fontWeight: fontWeightMedium,
    cursor: "pointer",
    lineHeight: 0,
  };
});
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKAlert/MKAlertRoot.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// @mui material components
import Box from "@mui/material/Box";
import { styled } from "@mui/material/styles";

export default styled(Box)(({ theme, ownerState }) => {
  const { palette, typography, borders, functions } = theme;
  const { color } = ownerState;

  const { white, gradients } = palette;
  const { fontSizeRegular, fontWeightMedium } = typography;
  const { borderRadius } = borders;
  const { pxToRem, linearGradient } = functions;

  // backgroundImage value
  const backgroundImageValue = gradients[color]
    ? linearGradient(gradients[color].main, gradients[color].state)
    : linearGradient(gradients.info.main, gradients.info.state);

  return {
    display: "flex",
    justifyContent: "space-between",
    alignItems: "center",
    minHeight: pxToRem(60),
    backgroundImage: backgroundImageValue,
    color: white.main,
    position: "relative",
    padding: pxToRem(16),
    marginBottom: pxToRem(16),
    borderRadius: borderRadius.md,
    fontSize: fontSizeRegular,
    fontWeight: fontWeightMedium,
  };
});

```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKAvatar/index.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/
import { forwardRef } from "react";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// Custom styles for MKAvatar
import MKAvatarRoot from "components/MKAvatar/MKAvatarRoot";

const MKAvatar = forwardRef(({ bgColor, size, shadow, ...rest }, ref) => (
  <MKAvatarRoot ref={ref} ownerState={{ shadow, bgColor, size }} {...rest} />
));

// Setting default values for the props of MKAvatar
MKAvatar.defaultProps = {
  bgColor: "transparent",
  size: "md",
  shadow: "none",
};

// Typechecking props for the MKAvatar
MKAvatar.propTypes = {
  bgColor: PropTypes.oneOf([
    "transparent",
    "primary",
    "secondary",
    "info",
    "success",
    "warning",
    "error",
    "light",
    "dark",
  ]),
  size: PropTypes.oneOf(["xs", "sm", "md", "lg", "xl", "xxl"]),
  shadow: PropTypes.oneOf(["none", "xs", "sm", "md", "lg", "xl", "xxl", "inset"]),
};

export default MKAvatar;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKAvatar/MKAvatarRoot.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// @mui material components
import Avatar from "@mui/material/Avatar";
import { styled } from "@mui/material/styles";

export default styled(Avatar)(({ theme, ownerState }) => {
  const { palette, functions, typography, boxShadows } = theme;
  const { shadow, bgColor, size } = ownerState;

  const { gradients, transparent, white } = palette;
  const { pxToRem, linearGradient } = functions;
  const { size: fontSize, fontWeightRegular } = typography;

  // backgroundImage value
  const backgroundValue =
    bgColor === "transparent"
      ? transparent.main
      : linearGradient(gradients[bgColor].main, gradients[bgColor].state);

  // size value
  let sizeValue;

  switch (size) {
    case "xs":
      sizeValue = {
        width: pxToRem(24),
        height: pxToRem(24),
        fontSize: fontSize.xs,
      };
      break;
    case "sm":
      sizeValue = {
        width: pxToRem(36),
        height: pxToRem(36),
        fontSize: fontSize.sm,
      };
      break;
    case "lg":
      sizeValue = {
        width: pxToRem(58),
        height: pxToRem(58),
        fontSize: fontSize.sm,
      };
      break;
    case "xl":
      sizeValue = {
        width: pxToRem(74),
        height: pxToRem(74),
        fontSize: fontSize.md,
      };
      break;
    case "xxl":
      sizeValue = {
        width: pxToRem(110),
        height: pxToRem(110),
        fontSize: fontSize.md,
      };
      break;
    default: {
      sizeValue = {
        width: pxToRem(48),
        height: pxToRem(48),
        fontSize: fontSize.md,
      };
    }
  }

  return {
    background: backgroundValue,
    color: white.main,
    fontWeight: fontWeightRegular,
    boxShadow: boxShadows[shadow],
    ...sizeValue,
  };
});

```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKBadge/index.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import { forwardRef } from "react";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// Custom styles for the MKBadge
import MKBadgeRoot from "components/MKBadge/MKBadgeRoot";

const MKBadge = forwardRef(
  ({ color, variant, size, circular, indicator, border, container, children, ...rest }, ref) => (
    <MKBadgeRoot
      {...rest}
      ownerState={{ color, variant, size, circular, indicator, border, container, children }}
      ref={ref}
      color="default"
    >
      {children}
    </MKBadgeRoot>
  )
);

// Setting default values for the props of MKBadge
MKBadge.defaultProps = {
  color: "info",
  variant: "gradient",
  size: "sm",
  circular: false,
  indicator: false,
  border: false,
  children: false,
  container: false,
};

// Typechecking props of the MKBadge
MKBadge.propTypes = {
  color: PropTypes.oneOf([
    "white",
    "primary",
    "secondary",
    "info",
    "success",
    "warning",
    "error",
    "light",
    "dark",
  ]),
  variant: PropTypes.oneOf(["gradient", "contained"]),
  size: PropTypes.oneOf(["xs", "sm", "md", "lg"]),
  circular: PropTypes.bool,
  indicator: PropTypes.bool,
  border: PropTypes.bool,
  children: PropTypes.node,
  container: PropTypes.bool,
};

export default MKBadge;

```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKBadge/MKBadgeRoot.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// @mui material components
import Badge from "@mui/material/Badge";
import { styled } from "@mui/material/styles";

export default styled(Badge)(({ theme, ownerState }) => {
  const { palette, typography, borders, functions } = theme;
  const { color, circular, border, size, indicator, variant, container, children } = ownerState;

  const { white, dark, gradients, badgeColors } = palette;
  const { size: fontSize, fontWeightBold } = typography;
  const { borderRadius, borderWidth } = borders;
  const { pxToRem, linearGradient } = functions;

  // padding values
  const paddings = {
    xs: "0.45em 0.775em",
    sm: "0.55em 0.9em",
    md: "0.65em 1em",
    lg: "0.85em 1.375em",
  };

  // fontSize value
  const fontSizeValue = size === "xs" ? fontSize.xxs : fontSize.xs;

  // border value
  const borderValue = border ? `${borderWidth[3]} solid ${white.main}` : "none";

  // borderRadius value
  const borderRadiusValue = circular ? borderRadius.section : borderRadius.lg;

  // styles for the badge with indicator={true}
  const indicatorStyles = (sizeProp) => {
    let widthValue = pxToRem(20);
    let heightValue = pxToRem(20);

    if (sizeProp === "medium") {
      widthValue = pxToRem(24);
      heightValue = pxToRem(24);
    } else if (sizeProp === "large") {
      widthValue = pxToRem(32);
      heightValue = pxToRem(32);
    }

    return {
      width: widthValue,
      height: heightValue,
      display: "grid",
      placeItems: "center",
      textAlign: "center",
      borderRadius: "50%",
      padding: 0,
      border: borderValue,
    };
  };

  // styles for the badge with variant="gradient"
  const gradientStyles = (colorProp) => {
    const backgroundValue = gradients[colorProp]
      ? linearGradient(gradients[colorProp].main, gradients[colorProp].state)
      : linearGradient(gradients.info.main, gradients.info.state);
    const colorValue = colorProp === "light" ? dark.main : white.main;

    return {
      background: backgroundValue,
      color: colorValue,
    };
  };

  // styles for the badge with variant="contained"
  const containedStyles = (colorProp) => {
    let backgroundValue = badgeColors[colorProp]
      ? badgeColors[colorProp].background
      : badgeColors.info.background;
    let colorValue = badgeColors[colorProp] ? badgeColors[colorProp].text : badgeColors.info.text;

    if (colorProp === "light") {
      colorValue = dark.main;
    } else if (colorProp === "white") {
      backgroundValue = white.main;
      colorValue = dark.main;
    }

    return {
      background: backgroundValue,
      color: colorValue,
    };
  };

  // styles for the badge with no children and container={false}
  const standAloneStyles = () => ({
    position: "static",
    marginLeft: pxToRem(8),
    transform: "none",
    fontSize: pxToRem(9),
  });

  // styles for the badge with container={true}
  const containerStyles = () => ({
    position: "relative",
    transform: "none",
  });

  return {
    "& .MuiBadge-badge": {
      height: "auto",
      padding: paddings[size] || paddings.xs,
      fontSize: fontSizeValue,
      fontWeight: fontWeightBold,
      textTransform: "uppercase",
      lineHeight: 1,
      textAlign: "center",
      whiteSpace: "nowrap",
      verticalAlign: "baseline",
      border: borderValue,
      borderRadius: borderRadiusValue,
      ...(indicator && indicatorStyles(size)),
      ...(variant === "gradient" && gradientStyles(color)),
      ...(variant === "contained" && containedStyles(color)),
      ...(!children && !container && standAloneStyles(color)),
      ...(container && containerStyles(color)),
    },
  };
});
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKBox/index.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import { forwardRef } from "react";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// Custom styles for MKBox
import MKBoxRoot from "components/MKBox/MKBoxRoot";

const MKBox = forwardRef(
  ({ variant, bgColor, color, opacity, borderRadius, shadow, coloredShadow, ...rest }, ref) => (
    <MKBoxRoot
      {...rest}
      ref={ref}
      ownerState={{ variant, bgColor, color, opacity, borderRadius, shadow, coloredShadow }}
    />
  )
);

// Setting default values for the props of MKBox
MKBox.defaultProps = {
  variant: "contained",
  bgColor: "transparent",
  color: "dark",
  opacity: 1,
  borderRadius: "none",
  shadow: "none",
  coloredShadow: "none",
};

// Typechecking props for the MKBox
MKBox.propTypes = {
  variant: PropTypes.oneOf(["contained", "gradient"]),
  bgColor: PropTypes.string,
  color: PropTypes.string,
  opacity: PropTypes.number,
  borderRadius: PropTypes.string,
  shadow: PropTypes.string,
  coloredShadow: PropTypes.oneOf([
    "primary",
    "secondary",
    "pros",
    "black",
    "info",
    "success",
    "warning",
    "error",
    "light",
    "dark",
    "none",
  ]),
};

export default MKBox;

```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKBox/MKBoxRoot.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// @mui material components
import Box from "@mui/material/Box";
import { styled } from "@mui/material/styles";

export default styled(Box)(({ theme, ownerState }) => {
  const { palette, functions, borders, boxShadows } = theme;
  const { variant, bgColor, color, opacity, borderRadius, shadow, coloredShadow } = ownerState;

  const { gradients, grey, white } = palette;
  const { linearGradient } = functions;
  const { borderRadius: radius } = borders;
  const { colored } = boxShadows;

  const greyColors = {
    "grey-100": grey[100],
    "grey-200": grey[200],
    "grey-300": grey[300],
    "grey-400": grey[400],
    "grey-500": grey[500],
    "grey-600": grey[600],
    "grey-700": grey[700],
    "grey-800": grey[800],
    "grey-900": grey[900],
  };

  const validGradients = [
    "primary",
    "secondary",
    "info",
    "black",
    "pros",
    "success",
    "warning",
    "error",
    "dark",
    "light",
  ];

  const validColors = [
    "transparent",
    "white",
    "black",
    "pros",
    "primary",
    "secondary",
    "info",
    "success",
    "warning",
    "error",
    "light",
    "dark",
    "text",
    "grey-100",
    "grey-200",
    "grey-300",
    "grey-400",
    "grey-500",
    "grey-600",
    "grey-700",
    "grey-800",
    "grey-900",
  ];

  const validBorderRadius = ["xs", "sm", "md", "lg", "xl", "xxl", "section"];
  const validBoxShadows = ["xs", "sm", "md", "lg", "xl", "xxl", "inset"];

  // background value
  let backgroundValue = bgColor;

  if (variant === "gradient") {
    backgroundValue = validGradients.find((el) => el === bgColor)
      ? linearGradient(gradients[bgColor].main, gradients[bgColor].state)
      : white.main;
  } else if (validColors.find((el) => el === bgColor)) {
    backgroundValue = palette[bgColor] ? palette[bgColor].main : greyColors[bgColor];
  } else {
    backgroundValue = bgColor;
  }

  // color value
  let colorValue = color;

  if (validColors.find((el) => el === color)) {
    colorValue = palette[color] ? palette[color].main : greyColors[color];
  }

  // borderRadius value
  let borderRadiusValue = borderRadius;

  if (validBorderRadius.find((el) => el === borderRadius)) {
    borderRadiusValue = radius[borderRadius];
  }

  // boxShadow value
  let boxShadowValue = "none";

  if (validBoxShadows.find((el) => el === shadow)) {
    boxShadowValue = boxShadows[shadow];
  } else if (coloredShadow) {
    boxShadowValue = colored[coloredShadow] ? colored[coloredShadow] : "none";
  }

  return {
    opacity,
    background: backgroundValue,
    color: colorValue,
    borderRadius: borderRadiusValue,
    boxShadow: boxShadowValue,
  };
});

```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKButton/index.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import { forwardRef } from "react";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// Custom styles for MKButton
import MKButtonRoot from "components/MKButton/MKButtonRoot";

const MKButton = forwardRef(
  ({ color, variant, size, circular, iconOnly, children, ...rest }, ref) => (
    <MKButtonRoot
      {...rest}
      ref={ref}
      color="primary"
      variant={variant === "gradient" ? "contained" : variant}
      size={size}
      ownerState={{ color, variant, size, circular, iconOnly }}
    >
      {children}
    </MKButtonRoot>
  )
);

// Setting default values for the props of MKButton
MKButton.defaultProps = {
  size: "medium",
  variant: "contained",
  color: "white",
  circular: false,
  iconOnly: false,
};

// Typechecking props for the MKButton
MKButton.propTypes = {
  size: PropTypes.oneOf(["small", "medium", "large"]),
  variant: PropTypes.oneOf(["text", "contained", "outlined", "gradient"]),
  color: PropTypes.oneOf([
    "default",
    "white",
    "primary",
    "secondary",
    "info",
    "success",
    "warning",
    "error",
    "light",
    "dark",
    "black",
    "pros",
  ]),
  circular: PropTypes.bool,
  iconOnly: PropTypes.bool,
  children: PropTypes.node.isRequired,
};

export default MKButton;

```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKButton/MKButtonRoot.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// @mui material components
import Button from "@mui/material/Button";
import { styled } from "@mui/material/styles";

export default styled(Button)(({ theme, ownerState }) => {
  const { palette, functions, borders, boxShadows } = theme;
  const { color, variant, size, circular, iconOnly } = ownerState;

  const { white, text, transparent, gradients, dark } = palette;
  const { boxShadow, linearGradient, pxToRem, rgba } = functions;
  const { borderRadius } = borders;
  const { colored } = boxShadows;

  // styles for the button with variant="contained"
  const containedStyles = () => {
    // background color value
    const backgroundValue = palette[color] ? palette[color].main : white.main;

    // backgroundColor value when button is focused
    const focusedBackgroundValue = palette[color] ? palette[color].focus : white.focus;

    // boxShadow value
    const boxShadowValue = colored[color]
      ? `${boxShadow([0, 3], [3, 0], palette[color].main, 0.15)}, ${boxShadow(
          [0, 3],
          [1, -2],
          palette[color].main,
          0.2
        )}, ${boxShadow([0, 1], [5, 0], palette[color].main, 0.15)}`
      : "none";

    // boxShadow value when button is hovered
    const hoveredBoxShadowValue = colored[color]
      ? `${boxShadow([0, 14], [26, -12], palette[color].main, 0.4)}, ${boxShadow(
          [0, 4],
          [23, 0],
          palette[color].main,
          0.15
        )}, ${boxShadow([0, 8], [10, -5], palette[color].main, 0.2)}`
      : "none";

    // color value
    let colorValue = white.main;

    if (color === "default" || !palette[color]) {
      colorValue = text.main;
    } else if (color === "white" || color === "light") {
      colorValue = dark.main;
    }

    // color value when button is focused
    let focusedColorValue = white.main;

    if (color === "darfault") {
      focusedColorValue = text.main;
    } else if (color === "white") {
      focusedColorValue = dark.main;
    } else if (color === "primary" || color === "error" || color === "dark") {
      focusedColorValue = white.main;
    }

    return {
      background: backgroundValue,
      color: colorValue,
      boxShadow: boxShadowValue,

      "&:hover": {
        backgroundColor: backgroundValue,
        boxShadow: hoveredBoxShadowValue,
      },

      "&:focus:not(:hover)": {
        backgroundColor: focusedBackgroundValue,
        boxShadow: palette[color]
          ? boxShadow([0, 0], [0, 3.2], palette[color].main, 0.5)
          : boxShadow([0, 0], [0, 3.2], white.main, 0.5),
      },

      "&:disabled": {
        backgroundColor: backgroundValue,
        color: focusedColorValue,
      },
    };
  };

  // styles for the button with variant="outlined"
  const outliedStyles = () => {
    // background color value
    const backgroundValue = color === "white" ? rgba(white.main, 0.1) : transparent.main;

    // color value
    const colorValue = palette[color] ? palette[color].main : white.main;

    // boxShadow value
    const boxShadowValue = palette[color]
      ? boxShadow([0, 0], [0, 3.2], palette[color].main, 0.5)
      : boxShadow([0, 0], [0, 3.2], white.main, 0.5);

    // border color value
    let borderColorValue = palette[color] ? palette[color].main : rgba(white.main, 0.75);

    if (color === "white") {
      borderColorValue = rgba(white.main, 0.75);
    }

    return {
      background: backgroundValue,
      color: colorValue,
      borderColor: borderColorValue,

      "&:hover": {
        background: transparent.main,
        borderColor: colorValue,
      },

      "&:focus:not(:hover)": {
        background: transparent.main,
        boxShadow: boxShadowValue,
      },

      "&:active:not(:hover)": {
        backgroundColor: colorValue,
        color: white.main,
        opacity: 0.85,
      },

      "&:disabled": {
        color: colorValue,
        borderColor: colorValue,
      },
    };
  };

  // styles for the button with variant="gradient"
  const gradientStyles = () => {
    // background value
    const backgroundValue =
      color === "white" || !gradients[color]
        ? white.main
        : linearGradient(gradients[color].main, gradients[color].state);

    // boxShadow value
    const boxShadowValue = colored[color]
      ? `${boxShadow([0, 3], [3, 0], palette[color].main, 0.15)}, ${boxShadow(
          [0, 3],
          [1, -2],
          palette[color].main,
          0.2
        )}, ${boxShadow([0, 1], [5, 0], palette[color].main, 0.15)}`
      : "none";

    // boxShadow value when button is hovered
    const hoveredBoxShadowValue = colored[color]
      ? `${boxShadow([0, 14], [26, -12], palette[color].main, 0.4)}, ${boxShadow(
          [0, 4],
          [23, 0],
          palette[color].main,
          0.15
        )}, ${boxShadow([0, 8], [10, -5], palette[color].main, 0.2)}`
      : "none";

    // color value
    let colorValue = white.main;

    if (color === "white") {
      colorValue = text.main;
    } else if (color === "light") {
      colorValue = gradients.dark.state;
    }

    return {
      background: backgroundValue,
      color: colorValue,
      boxShadow: boxShadowValue,

      "&:hover": {
        backgroundColor: white.main,
        boxShadow: hoveredBoxShadowValue,
      },

      "&:focus:not(:hover)": {
        boxShadow: boxShadowValue,
      },

      "&:disabled": {
        background: backgroundValue,
        color: colorValue,
      },
    };
  };

  // styles for the button with variant="text"
  const textStyles = () => {
    // color value
    const colorValue = palette[color] ? palette[color].main : white.main;

    // color value when button is focused
    const focusedColorValue = palette[color] ? palette[color].focus : white.focus;

    return {
      color: colorValue,

      "&:hover": {
        color: focusedColorValue,
      },

      "&:focus:not(:hover)": {
        color: focusedColorValue,
      },
    };
  };

  // styles for the button with circular={true}
  const circularStyles = () => ({
    borderRadius: borderRadius.section,
  });

  // styles for the button with iconOnly={true}
  const iconOnlyStyles = () => {
    // width, height, minWidth and minHeight values
    let sizeValue = pxToRem(38);

    if (size === "small") {
      sizeValue = pxToRem(25.4);
    } else if (size === "large") {
      sizeValue = pxToRem(52);
    }

    // padding value
    let paddingValue = `${pxToRem(11)} ${pxToRem(11)} ${pxToRem(10)}`;

    if (size === "small") {
      paddingValue = pxToRem(4.5);
    } else if (size === "large") {
      paddingValue = pxToRem(16);
    }

    return {
      width: sizeValue,
      minWidth: sizeValue,
      height: sizeValue,
      minHeight: sizeValue,
      padding: paddingValue,

      "& .material-icons": {
        marginTop: 0,
      },

      "&:hover, &:focus, &:active": {
        transform: "none",
      },
    };
  };

  return {
    ...(variant === "contained" && containedStyles()),
    ...(variant === "outlined" && outliedStyles()),
    ...(variant === "gradient" && gradientStyles()),
    ...(variant === "text" && textStyles()),
    ...(circular && circularStyles()),
    ...(iconOnly && iconOnlyStyles()),
  };
});

```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKDatePicker/index.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// react-flatpickr components
import Flatpickr from "react-flatpickr";

// react-flatpickr styles
import "flatpickr/dist/flatpickr.css";

// PROSPERA DEFI PLATFORM components
import MKInput from "components/MKInput";

function MKDatePicker({ input, ...rest }) {
  return (
    <Flatpickr
      {...rest}
      render={({ defaultValue }, ref) => (
        <MKInput {...input} defaultValue={defaultValue} inputRef={ref} />
      )}
    />
  );
}

// Setting default values for the props of MKDatePicker
MKDatePicker.defaultProps = {
  input: {},
};

// Typechecking props for the MKDatePicker
MKDatePicker.propTypes = {
  input: PropTypes.objectOf(PropTypes.any),
};

export default MKDatePicker;

```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKInput/index.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import { forwardRef } from "react";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// Custom styles for MKInput
import MKInputRoot from "components/MKInput/MKInputRoot";

const MKInput = forwardRef(({ error, success, disabled, ...rest }, ref) => (
  <MKInputRoot {...rest} ref={ref} ownerState={{ error, success, disabled }} />
));

// Setting default values for the props of MKInput
MKInput.defaultProps = {
  error: false,
  success: false,
  disabled: false,
};

// Typechecking props for the MKInput
MKInput.propTypes = {
  error: PropTypes.bool,
  success: PropTypes.bool,
  disabled: PropTypes.bool,
};

export default MKInput;

```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKInput/MKInputRoot.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// @mui material components
import TextField from "@mui/material/TextField";
import { styled } from "@mui/material/styles";

export default styled(TextField)(({ theme, ownerState }) => {
  const { palette, functions } = theme;
  const { error, success, disabled } = ownerState;

  const { grey, transparent, error: colorError, success: colorSuccess } = palette;
  const { pxToRem } = functions;

  // styles for the input with error={true}
  const errorStyles = () => ({
    backgroundImage:
      "url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='%23F44335' viewBox='0 0 12 12'%3E%3Ccircle cx='6' cy='6' r='4.5'/%3E%3Cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3E%3Ccircle cx='6' cy='8.2' r='.6' fill='%23F44335' stroke='none'/%3E%3C/svg%3E\")",
    backgroundRepeat: "no-repeat",
    backgroundPosition: `right ${pxToRem(12)} center`,
    backgroundSize: `${pxToRem(16)} ${pxToRem(16)}`,

    "& .Mui-focused": {
      "& .MuiOutlinedInput-notchedOutline, &:after": {
        borderColor: colorError.main,
      },
    },

    "& .MuiInputLabel-root.Mui-focused": {
      color: colorError.main,
    },
  });

  // styles for the input with success={true}
  const successStyles = () => ({
    backgroundImage:
      "url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 8'%3E%3Cpath fill='%234CAF50' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3E%3C/svg%3E\")",
    backgroundRepeat: "no-repeat",
    backgroundPosition: `right ${pxToRem(12)} center`,
    backgroundSize: `${pxToRem(16)} ${pxToRem(16)}`,

    "& .Mui-focused": {
      "& .MuiOutlinedInput-notchedOutline, &:after": {
        borderColor: colorSuccess.main,
      },
    },

    "& .MuiInputLabel-root.Mui-focused": {
      color: colorSuccess.main,
    },
  });

  return {
    backgroundColor: disabled ? `${grey[200]} !important` : transparent.main,
    pointerEvents: disabled ? "none" : "auto",
    ...(error && errorStyles()),
    ...(success && successStyles()),
  };
});

```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKPagination/index.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import { forwardRef, createContext, useContext } from "react";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";

// Custom styles for MKPagination
import MKPaginationItemRoot from "components/MKPagination/MKPaginationItemRoot";

// The Pagination main context
const Context = createContext();

const MKPagination = forwardRef(
  ({ item, variant, color, size, active, children, placement, ...rest }, ref) => {
    const context = item ? useContext(Context) : null;
    const paginationSize = context ? context.size : null;
    let placementValue = "flex-end";

    if (placement === "left") {
      placementValue = "flex-start";
    } else if (placement === "center") {
      placementValue = "center";
    }

    return (
      <Context.Provider value={{ variant, color, size }}>
        {item ? (
          <MKPaginationItemRoot
            {...rest}
            ref={ref}
            variant={active ? context.variant : "outlined"}
            color={active ? context.color : "secondary"}
            iconOnly
            circular
            ownerState={{ variant, active, paginationSize }}
          >
            {children}
          </MKPaginationItemRoot>
        ) : (
          <MKBox
            display="flex"
            justifyContent={placementValue}
            alignItems="center"
            sx={{ listStyle: "none" }}
          >
            {children}
          </MKBox>
        )}
      </Context.Provider>
    );
  }
);

// Setting default values for the props of MKPagination
MKPagination.defaultProps = {
  item: false,
  variant: "gradient",
  color: "info",
  size: "medium",
  active: false,
  placement: "right",
};

// Typechecking props for the MKPagination
MKPagination.propTypes = {
  item: PropTypes.bool,
  variant: PropTypes.oneOf(["gradient", "contained"]),
  color: PropTypes.oneOf([
    "white",
    "primary",
    "secondary",
    "info",
    "success",
    "warning",
    "error",
    "light",
    "dark",
  ]),
  size: PropTypes.oneOf(["small", "medium", "large"]),
  active: PropTypes.bool,
  children: PropTypes.node.isRequired,
  placement: PropTypes.oneOf(["left", "right", "center"]),
};

export default MKPagination;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKPagination/MKPaginationItemRoot.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// @mui material components
import { styled } from "@mui/material/styles";

// PROSPERA DEFI PLATFORM components
import MKButton from "components/MKButton";

export default styled(MKButton)(({ theme, ownerState }) => {
  const { borders, functions, typography, palette } = theme;
  const { variant, paginationSize, active } = ownerState;

  const { borderColor } = borders;
  const { pxToRem } = functions;
  const { fontWeightRegular, size: fontSize } = typography;
  const { light } = palette;

  // width, height, minWidth and minHeight values
  let sizeValue = pxToRem(36);

  if (paginationSize === "small") {
    sizeValue = pxToRem(30);
  } else if (paginationSize === "large") {
    sizeValue = pxToRem(46);
  }

  return {
    borderColor,
    margin: `0 ${pxToRem(2)}`,
    pointerEvents: active ? "none" : "auto",
    fontWeight: fontWeightRegular,
    fontSize: fontSize.sm,
    width: sizeValue,
    minWidth: sizeValue,
    height: sizeValue,
    minHeight: sizeValue,

    "&:hover, &:focus, &:active": {
      transform: "none",
      boxShadow: (variant !== "gradient" || variant !== "contained") && "none !important",
      opacity: "1 !important",
    },

    "&:hover": {
      backgroundColor: light.main,
      borderColor,
    },
  };
});

```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKProgress/index.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import { forwardRef } from "react";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// PROSPERA DEFI PLATFORM components
import MKTypography from "components/MKTypography";

// Custom styles for MKProgress
import MKProgressRoot from "components/MKProgress/MKProgressRoot";

const MKProgress = forwardRef(({ variant, color, value, label, ...rest }, ref) => (
  <>
    {label && (
      <MKTypography variant="button" fontWeight="medium" color="text">
        {value}%
      </MKTypography>
    )}
    <MKProgressRoot
      {...rest}
      ref={ref}
      variant="determinate"
      value={value}
      ownerState={{ color, value, variant }}
    />
  </>
));

// Setting default values for the props of MKProgress
MKProgress.defaultProps = {
  variant: "contained",
  color: "info",
  value: 0,
  label: false,
};

// Typechecking props for the MKProgress
MKProgress.propTypes = {
  variant: PropTypes.oneOf(["contained", "gradient"]),
  color: PropTypes.oneOf([
    "primary",
    "secondary",
    "info",
    "success",
    "warning",
    "error",
    "light",
    "dark",
  ]),
  value: PropTypes.number,
  label: PropTypes.bool,
};

export default MKProgress;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKProgress/MKProgressRoot.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// @mui material components
import { styled } from "@mui/material/styles";
import LinearProgress from "@mui/material/LinearProgress";

export default styled(LinearProgress)(({ theme, ownerState }) => {
  const { palette, functions } = theme;
  const { color, value, variant } = ownerState;

  const { text, gradients } = palette;
  const { linearGradient } = functions;

  // background value
  let backgroundValue;

  if (variant === "gradient") {
    backgroundValue = gradients[color]
      ? linearGradient(gradients[color].main, gradients[color].state)
      : linearGradient(gradients.info.main, gradients.info.state);
  } else {
    backgroundValue = palette[color] ? palette[color].main : palette.info.main;
  }

  return {
    width: "100%",

    "& .MuiLinearProgress-bar": {
      background: backgroundValue,
      width: `${value}%`,
      color: text.main,
    },
  };
});

```


------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKSnackbar/index.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Snackbar from "@mui/material/Snackbar";
import IconButton from "@mui/material/IconButton";
import Icon from "@mui/material/Icon";
import Divider from "@mui/material/Divider";
import Fade from "@mui/material/Fade";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

// Custom styles for the MKSnackbar
import MKSnackbarIconRoot from "components/MKSnackbar/MKSnackbarIconRoot";

function MKSnackbar({ color, icon, title, dateTime, content, close, bgWhite, ...rest }) {
  let titleColor;
  let dateTimeColor;
  let dividerColor;

  if (bgWhite) {
    titleColor = color;
    dateTimeColor = "dark";
    dividerColor = false;
  } else if (color === "light") {
    titleColor = "dark";
    dateTimeColor = "text";
    dividerColor = false;
  } else {
    titleColor = "white";
    dateTimeColor = "white";
    dividerColor = true;
  }

  return (
    <Snackbar
      TransitionComponent={Fade}
      autoHideDuration={5000}
      anchorOrigin={{
        vertical: "bottom",
        horizontal: "right",
      }}
      {...rest}
      action={
        <IconButton size="small" aria-label="close" color="inherit" onClick={close}>
          <Icon fontSize="small">close</Icon>
        </IconButton>
      }
    >
      <MKBox
        variant={bgWhite ? "contained" : "gradient"}
        bgColor={bgWhite ? "white" : color}
        minWidth="21.875rem"
        maxWidth="100%"
        shadow="md"
        borderRadius="md"
        p={1}
        sx={{
          backgroundColor: ({ palette }) => palette[color] || palette.white.main,
        }}
      >
        <MKBox
          display="flex"
          justifyContent="space-between"
          alignItems="center"
          color="dark"
          p={1.5}
        >
          <MKBox display="flex" alignItems="center" lineHeight={0}>
            <MKSnackbarIconRoot fontSize="small" ownerState={{ color, bgWhite }}>
              {icon}
            </MKSnackbarIconRoot>
            <MKTypography
              variant="button"
              fontWeight="medium"
              color={titleColor}
              textGradient={bgWhite}
            >
              {title}
            </MKTypography>
          </MKBox>
          <MKBox display="flex" alignItems="center" lineHeight={0}>
            <MKTypography variant="caption" color={dateTimeColor}>
              {dateTime}
            </MKTypography>
            <Icon
              sx={{
                color: ({ palette: { dark, white } }) =>
                  bgWhite || color === "light" ? dark.main : white.main,
                fontWeight: ({ typography: { fontWeightBold } }) => fontWeightBold,
                cursor: "pointer",
                marginLeft: 2,
                transform: "translateY(-1px)",
              }}
              onClick={close}
            >
              close
            </Icon>
          </MKBox>
        </MKBox>
        <Divider sx={{ margin: 0 }} light={dividerColor} />
        <MKBox
          p={1.5}
          sx={{
            fontSize: ({ typography: { size } }) => size.sm,
            color: ({ palette: { white, text } }) =>
              bgWhite || color === "light" ? text.main : white.main,
          }}
        >
          {content}
        </MKBox>
      </MKBox>
    </Snackbar>
  );
}

// Setting default values for the props of MKSnackbar
MKSnackbar.defaultProps = {
  bgWhite: false,
  color: "info",
};

// Typechecking props for MKSnackbar
MKSnackbar.propTypes = {
  color: PropTypes.oneOf([
    "primary",
    "secondary",
    "info",
    "success",
    "warning",
    "error",
    "dark",
    "light",
  ]),
  icon: PropTypes.node.isRequired,
  title: PropTypes.string.isRequired,
  dateTime: PropTypes.string.isRequired,
  content: PropTypes.node.isRequired,
  close: PropTypes.func.isRequired,
  bgWhite: PropTypes.bool,
};

export default MKSnackbar;

```


------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKSnackbar/MKSnackbarIconRoot.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// @mui material components
import Icon from "@mui/material/Icon";
import { styled } from "@mui/material/styles";

export default styled(Icon)(({ theme, ownerState }) => {
  const { palette, functions, typography } = theme;
  const { color, bgWhite } = ownerState;

  const { white, transparent, gradients } = palette;
  const { pxToRem, linearGradient } = functions;
  const { size } = typography;

  // backgroundImage value
  let backgroundImageValue;

  if (bgWhite) {
    backgroundImageValue = gradients[color]
      ? linearGradient(gradients[color].main, gradients[color].state)
      : linearGradient(gradients.info.main, gradients.info.state);
  } else if (color === "light") {
    backgroundImageValue = linearGradient(gradients.dark.main, gradients.dark.state);
  }

  return {
    backgroundImage: backgroundImageValue,
    WebkitTextFillColor: bgWhite || color === "light" ? transparent.main : white.main,
    WebkitBackgroundClip: "text",
    marginRight: pxToRem(8),
    fontSize: size.lg,
    transform: `translateY(${pxToRem(-2)})`,
  };
});

```


------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKSocialButton/index.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import { forwardRef } from "react";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// Custom styles for MKSocialButton
import MKSocialButtonRoot from "components/MKSocialButton/MKSocialButtonRoot";

const MKSocialButton = forwardRef(({ color, size, iconOnly, circular, children, ...rest }, ref) => (
  <MKSocialButtonRoot
    {...rest}
    ref={ref}
    variant="contained"
    color="primary"
    size={size}
    ownerState={{ color, size, iconOnly, circular }}
  >
    {children}
  </MKSocialButtonRoot>
));

// Setting default values for the props of MKSocialButton
MKSocialButton.defaultProps = {
  size: "medium",
  color: "facebook",
  iconOnly: false,
  circular: false,
};

// Typechecking props for the MKSocialButton
MKSocialButton.propTypes = {
  size: PropTypes.oneOf(["small", "medium", "large"]),
  color: PropTypes.oneOf([
    "facebook",
    "twitter",
    "instagram",
    "linkedin",
    "pinterest",
    "youtube",
    "github",
    "vimeo",
    "slack",
    "dribbble",
    "reddit",
    "tumblr",
  ]),
  iconOnly: PropTypes.bool,
  circular: PropTypes.bool,
  children: PropTypes.node.isRequired,
};

export default MKSocialButton;

```


------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKSocialButton/MKSocialButtonRoot.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// @mui material components
import Button from "@mui/material/Button";
import { styled } from "@mui/material/styles";

export default styled(Button)(({ theme, ownerState }) => {
  const { palette, functions } = theme;
  const { color, size, iconOnly, circular } = ownerState;

  const { white, socialMediaColors } = palette;
  const { pxToRem } = functions;

  // backgroundColor value
  const backgroundColorValue = socialMediaColors[color]
    ? socialMediaColors[color].main
    : socialMediaColors.facebook.main;

  const focusedBackgroundColorValue = socialMediaColors[color]
    ? socialMediaColors[color].dark
    : socialMediaColors.facebook.dark;

  // styles for the button with circular={true}
  const circularStyles = () => ({
    borderRadius: "50%",
  });

  // styles for the button with iconOnly={true}
  const iconOnlyStyles = () => {
    // width, height, minWidth and minHeight values
    let sizeValue = pxToRem(38);

    if (size === "small") {
      sizeValue = pxToRem(25.4);
    } else if (size === "large") {
      sizeValue = pxToRem(52);
    }

    // padding value
    let paddingValue = `${pxToRem(11)} ${pxToRem(11)} ${pxToRem(10)}`;

    if (size === "small") {
      paddingValue = pxToRem(4.5);
    } else if (size === "large") {
      paddingValue = pxToRem(16);
    }

    return {
      width: sizeValue,
      minWidth: sizeValue,
      height: sizeValue,
      minHeight: sizeValue,
      padding: paddingValue,
    };
  };

  return {
    backgroundColor: backgroundColorValue,
    color: white.main,
    boxShadow: "none",

    "&:hover": {
      backgroundColor: focusedBackgroundColorValue,
      boxShadow: "none",
    },

    "&:focus:not(:hover)": {
      backgroundColor: socialMediaColors[color]
        ? socialMediaColors[color].dark
        : socialMediaColors.facebook.dark,
      boxShadow: "none",
    },

    "&:disabled": {
      backgroundColor: backgroundColorValue,
      color: white.main,
    },

    ...(circular && circularStyles()),
    ...(iconOnly && iconOnlyStyles()),
  };
});

```


------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKTypography/index.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import { forwardRef } from "react";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// Custom styles for MKTypography
import MKTypographyRoot from "components/MKTypography/MKTypographyRoot";

const MKTypography = forwardRef(
  (
    { color, fontWeight, textTransform, verticalAlign, textGradient, opacity, children, ...rest },
    ref
  ) => (
    <MKTypographyRoot
      {...rest}
      ref={ref}
      ownerState={{
        color,
        textTransform,
        verticalAlign,
        fontWeight,
        opacity,
        textGradient,
      }}
    >
      {children}
    </MKTypographyRoot>
  )
);

// Setting default values for the props of MKTypography
MKTypography.defaultProps = {
  color: "dark",
  fontWeight: false,
  textTransform: "none",
  verticalAlign: "unset",
  textGradient: false,
  opacity: 1,
};

// Typechecking props for the MKTypography
MKTypography.propTypes = {
  color: PropTypes.oneOf([
    "inherit",
    "primary",
    "secondary",
    "info",
    "success",
    "warning",
    "error",
    "light",
    "pros",
    "black",
    "dark",
    "text",
    "white",
  ]),
  fontWeight: PropTypes.oneOf([false, "light", "regular", "medium", "bold"]),
  textTransform: PropTypes.oneOf(["none", "capitalize", "uppercase", "lowercase"]),
  verticalAlign: PropTypes.oneOf([
    "unset",
    "baseline",
    "sub",
    "super",
    "text-top",
    "text-bottom",
    "middle",
    "top",
    "bottom",
  ]),
  textGradient: PropTypes.bool,
  children: PropTypes.node.isRequired,
  opacity: PropTypes.number,
};

export default MKTypography;

```


------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/MKTypography/MKTypographyRoot.js

Code for File:

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// @mui material components
import Typography from "@mui/material/Typography";
import { styled } from "@mui/material/styles";

export default styled(Typography)(({ theme, ownerState }) => {
  const { palette, typography, functions } = theme;
  const { color, textTransform, verticalAlign, fontWeight, opacity, textGradient } = ownerState;

  const { gradients, transparent } = palette;
  const { fontWeightLight, fontWeightRegular, fontWeightMedium, fontWeightBold } = typography;
  const { linearGradient } = functions;

  // fontWeight styles
  const fontWeights = {
    light: fontWeightLight,
    regular: fontWeightRegular,
    medium: fontWeightMedium,
    bold: fontWeightBold,
  };

  // styles for the typography with textGradient={true}
  const gradientStyles = () => ({
    backgroundImage:
      color !== "inherit" && color !== "text" && color !== "white" && gradients[color]
        ? linearGradient(gradients[color].main, gradients[color].state)
        : linearGradient(gradients.dark.main, gradients.dark.state),
    display: "inline-block",
    WebkitBackgroundClip: "text",
    WebkitTextFillColor: transparent.main,
    position: "relative",
    zIndex: 1,
  });

  // color value
  const colorValue = color === "inherit" || !palette[color] ? "inherit" : palette[color].main;

  return {
    opacity,
    textTransform,
    verticalAlign,
    textDecoration: "none",
    color: colorValue,
    letterSpacing: "-0.125px",
    fontWeight: fontWeights[fontWeight] && fontWeights[fontWeight],
    ...(textGradient && gradientStyles()),
  };
});
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Breadcrumbs/index.js

Code for file: /prospera-home/homepage/src/components/Breadcrumbs/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// react-router-dom components
import { Link } from "react-router-dom";

// @mui material components
import MuiBreadcrumbs from "@mui/material/Breadcrumbs";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

function Breadcrumbs({ routes, ...rest }) {
  return (
    <MKBox bgColor="light" borderRadius="md" py={1} px={2} width="100%">
      <MuiBreadcrumbs {...rest}>
        {routes.map(({ label, route }) =>
          route ? (
            <MKTypography
              key={label}
              component={Link}
              to={route}
              variant="button"
              color="text"
              fontWeight="regular"
              opacity={0.8}
              sx={{
                "&:hover, &:focus": {
                  color: ({ palette: { info } }) => info.main,
                },
              }}
            >
              {label}
            </MKTypography>
          ) : (
            <MKTypography key={label} variant="button" fontWeight="regular">
              {label}
            </MKTypography>
          )
        )}
      </MuiBreadcrumbs>
    </MKBox>
  );
}

// Typechecking props for the Breadcrumbs
Breadcrumbs.propTypes = {
  routes: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object])).isRequired,
};

export default Breadcrumbs;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/BackgroundCards/ColoredBackgroundCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/BackgroundCards/ColoredBackgroundCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// react-router-dom components
import { Link } from "react-router-dom";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Card from "@mui/material/Card";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKButton from "components/MKButton";
import MKTypography from "components/MKTypography";

function ColoredBackgroundCard({ color, image, label, title, description, action }) {
  return (
    <Card
      sx={({
        palette: { gradients },
        functions: { rgba, linearGradient },
        borders: { borderRadius },
      }) => ({
        backgroundImage: `${linearGradient(
          rgba(gradients[color] ? gradients[color].main : gradients.info.main, 0.9),
          rgba(gradients[color] ? gradients[color].state : gradients.info.state, 0.9)
        )}, url(${image})`,
        backgroundSize: "cover",
        backgroundPosition: "center",
        borderRadius: borderRadius.xl,
        height: "100%",
        display: "grid",
        placeItems: "center",
      })}
    >
      <MKBox textAlign="center" p={3} my={12}>
        {label && (
          <MKTypography
            display="block"
            variant="caption"
            color={color === "light" ? "text" : "white"}
            textTransform="uppercase"
            opacity={0.8}
            fontWeight="bold"
            mb={2}
          >
            {label}
          </MKTypography>
        )}
        <MKTypography variant="h4" color={color === "light" ? "dark" : "white"}>
          {title}
        </MKTypography>
        <MKTypography
          variant="body2"
          color={color === "light" ? "text" : "white"}
          opacity={0.8}
          mb={3}
        >
          {description}
        </MKTypography>
        {action.type === "internal" ? (
          <MKButton
            component={Link}
            to={action.route}
            variant={color === "light" ? "gradient" : "contained"}
            color={color === "light" ? "dark" : "white"}
            size="small"
          >
            {action.label}
          </MKButton>
        ) : (
          <MKButton
            component="a"
            href={action.route}
            target="_blank"
            rel="noreferrer"
            variant={color === "light" ? "gradient" : "contained"}
            color={color === "light" ? "dark" : "white"}
            size="small"
          >
            {action.label}
          </MKButton>
        )}
      </MKBox>
    </Card>
  );
}

// Setting default values for the props of ColoredBackgroundCard
ColoredBackgroundCard.defaultProps = {
  color: "info",
  label: "",
};

// Typechecking props for the ColoredBackgroundCard
ColoredBackgroundCard.propTypes = {
  color: PropTypes.oneOf([
    "primary",
    "secondary",
    "info",
    "success",
    "warning",
    "error",
    "dark",
    "light",
  ]),
  image: PropTypes.string.isRequired,
  label: PropTypes.string,
  title: PropTypes.string.isRequired,
  description: PropTypes.node.isRequired,
  action: PropTypes.shape({
    type: PropTypes.oneOf(["external", "internal"]).isRequired,
    route: PropTypes.string.isRequired,
    label: PropTypes.string.isRequired,
  }).isRequired,
};

export default ColoredBackgroundCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/BackgroundCards/DefaultBackgroundCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/BackgroundCards/DefaultBackgroundCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// react-router-dom components
import { Link } from "react-router-dom";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Card from "@mui/material/Card";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKButton from "components/MKButton";
import MKTypography from "components/MKTypography";

function DefaultBackgroundCard({ image, label, title, description, action }) {
  return (
    <Card
      sx={({
        functions: { rgba, linearGradient },
        palette: { black },
        borders: { borderRadius },
      }) => ({
        backgroundImage: `${linearGradient(
          rgba(black.main, 0.5),
          rgba(black.main, 0.5)
        )}, url(${image})`,
        backgroundSize: "cover",
        backgroundPosition: "center",
        borderRadius: borderRadius.xl,
      })}
    >
      <MKBox textAlign="center" pt={12} pb={3} px={3}>
        {label && (
          <MKTypography variant="body2" color="white" textTransform="uppercase" mb={2}>
            {label}
          </MKTypography>
        )}
        <MKTypography variant="h3" color="white">
          {title}
        </MKTypography>
        <MKTypography variant="body2" color="white" opacity={0.8} mb={2}>
          {description}
        </MKTypography>
        {action.type === "internal" ? (
          <MKButton component={Link} to={action.route} color="white" size="small" sx={{ my: 2 }}>
            {action.label}
          </MKButton>
        ) : (
          <MKButton
            component="a"
            href={action.route}
            target="_blank"
            rel="noreferrer"
            color="white"
            size="small"
            sx={{ my: 2 }}
          >
            {action.label}
          </MKButton>
        )}
      </MKBox>
    </Card>
  );
}

// Setting default values for the props of DefaultBackgroundCard
DefaultBackgroundCard.defaultProps = {
  label: "",
};

// Typechecking props for the DefaultBackgroundCard
DefaultBackgroundCard.propTypes = {
  image: PropTypes.string.isRequired,
  label: PropTypes.string,
  title: PropTypes.string.isRequired,
  description: PropTypes.node.isRequired,
  action: PropTypes.shape({
    type: PropTypes.oneOf(["external", "internal"]).isRequired,
    route: PropTypes.string.isRequired,
    label: PropTypes.string.isRequired,
  }).isRequired,
};

export default DefaultBackgroundCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/BackgroundCards/InfoBackgroundCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/BackgroundCards/InfoBackgroundCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Card from "@mui/material/Card";
import Icon from "@mui/material/Icon";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

function InfoBackgroundCard({ image, icon, title, label }) {
  return (
    <Card
      sx={({
        functions: { rgba, linearGradient },
        palette: { gradients },
        borders: { borderRadius },
      }) => ({
        backgroundImage: `${linearGradient(
          rgba(gradients.dark.main, 0.8),
          rgba(gradients.dark.state, 0.8)
        )}, url(${image})`,
        backgroundSize: "cover",
        backgroundPosition: "center",
        borderRadius: borderRadius.xl,
        height: "100%",
        display: "flex",
        flexDirection: "column",
        justifyContent: "space-between",
      })}
    >
      <MKBox width="100%" p={3}>
        <MKTypography variant="h3" color="white">
          {typeof icon === "string" ? <Icon>{icon}</Icon> : icon}
        </MKTypography>
      </MKBox>
      <MKBox width="100%" pt={1} pb={2} px={3} lineHeight={1}>
        <MKTypography variant="h4" color="white">
          {title}
        </MKTypography>
        {label && (
          <MKTypography
            variant="caption"
            textTransform="uppercase"
            fontWeight="bold"
            color="white"
            opacity={0.7}
          >
            {label}
          </MKTypography>
        )}
      </MKBox>
    </Card>
  );
}

// Setting default values for the props of InfoBackgroundCard
InfoBackgroundCard.defaultProps = {
  label: "",
};

// Typechecking props for the InfoBackgroundCard
InfoBackgroundCard.propTypes = {
  image: PropTypes.string.isRequired,
  icon: PropTypes.node.isRequired,
  title: PropTypes.string.isRequired,
  label: PropTypes.string,
};

export default InfoBackgroundCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/BackgroundCards/SimpleBackgroundCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/BackgroundCards/SimpleBackgroundCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Card from "@mui/material/Card";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

function SimpleBackgroundCard({ image, title, description }) {
  return (
    <Card
      sx={({
        functions: { rgba, linearGradient },
        palette: { black },
        borders: { borderRadius },
      }) => ({
        backgroundImage: `${linearGradient(
          rgba(black.main, 0.5),
          rgba(black.main, 0.5)
        )}, url(${image})`,
        backgroundSize: "cover",
        backgroundPosition: "center",
        borderRadius: borderRadius.xl,
        height: "100%",
        display: "grid",
        justifyContent: "end",
      })}
    >
      <MKBox pt={32} pb={3} px={3}>
        <MKTypography variant="h4" color="white" mb={1}>
          {title}
        </MKTypography>
        <MKTypography variant="body2" color="white" mb={2}>
          {description}
        </MKTypography>
      </MKBox>
    </Card>
  );
}

// Typechecking props for the SimpleBackgroundCard
SimpleBackgroundCard.propTypes = {
  image: PropTypes.string.isRequired,
  title: PropTypes.string.isRequired,
  description: PropTypes.node.isRequired,
};

export default SimpleBackgroundCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/BlogCards/BackgroundBlogCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/BlogCards/BackgroundBlogCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// react-router components
import { Link } from "react-router-dom";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Card from "@mui/material/Card";
import MuiLink from "@mui/material/Link";
import Icon from "@mui/material/Icon";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

function BackgroundBlogCard({ image, title, description, action }) {
  const cardActionStyles = {
    display: "flex",
    alignItems: "center",
    width: "max-content",

    "& .material-icons, .material-icons-round,": {
      transform: `translateX(2px)`,
      transition: "transform 0.2s cubic-bezier(0.34,1.61,0.7,1.3)",
    },

    "&:hover .material-icons, &:focus .material-icons, &:hover .material-icons-round, &:focus .material-icons-round":
      {
        transform: `translateX(6px)`,
      },
  };

  return (
    <Card
      sx={{
        backgroundImage: ({ palette: { black }, functions: { linearGradient, rgba } }) =>
          `${linearGradient(rgba(black.main, 0.5), rgba(black.main, 0.5))}, url(${image})`,
        backgroundSize: "cover",
      }}
    >
      <MKBox p={3}>
        <MKBox minHeight="20.625rem" my="auto" py={3}>
          <MKTypography
            variant="h2"
            color="white"
            mb={1}
            sx={({ breakpoints, typography: { size } }) => ({
              [breakpoints.down("md")]: {
                fontSize: size["3xl"],
              },
            })}
          >
            {title}
          </MKTypography>
          <MKTypography variant="body2" color="white" my={3}>
            {description}
          </MKTypography>
          {action.type === "internal" ? (
            <MKTypography
              component={Link}
              to={action.route}
              variant="body2"
              fontWeight="regular"
              color="white"
              textTransform="capitalize"
              sx={cardActionStyles}
            >
              {action.label}
              <Icon sx={{ fontWeight: "bold" }}>arrow_forward</Icon>
            </MKTypography>
          ) : (
            <MKTypography
              component={MuiLink}
              href={action.route}
              target="_blank"
              rel="noreferrer"
              variant="body2"
              fontWeight="regular"
              color="white"
              textTransform="capitalize"
              sx={cardActionStyles}
            >
              {action.label}
              <Icon sx={{ fontWeight: "bold" }}>arrow_forward</Icon>
            </MKTypography>
          )}
        </MKBox>
      </MKBox>
    </Card>
  );
}

// Typechecking props for the BackgroundBlogCard
BackgroundBlogCard.propTypes = {
  image: PropTypes.string.isRequired,
  title: PropTypes.string.isRequired,
  description: PropTypes.string.isRequired,
  action: PropTypes.shape({
    type: PropTypes.oneOf(["external", "internal"]).isRequired,
    route: PropTypes.string.isRequired,
    label: PropTypes.string.isRequired,
  }).isRequired,
};

export default BackgroundBlogCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/BlogCards/CenteredBlogCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/BlogCards/CenteredBlogCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// react-router components
import { Link } from "react-router-dom";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Card from "@mui/material/Card";
import MuiLink from "@mui/material/Link";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import MKButton from "components/MKButton";

function CenteredBlogCard({ image, title, description, action }) {
  return (
    <Card>
      <MKBox position="relative" borderRadius="lg" mx={2} mt={-3}>
        <MKBox
          component="img"
          src={image}
          alt={title}
          borderRadius="lg"
          width="100%"
          position="relative"
          zIndex={1}
        />
        <MKBox
          borderRadius="lg"
          shadow="md"
          width="100%"
          height="100%"
          position="absolute"
          left={0}
          top={0}
          sx={{
            backgroundImage: `url(${image})`,
            transform: "scale(0.94)",
            filter: "blur(12px)",
            backgroundSize: "cover",
          }}
        />
      </MKBox>
      <MKBox p={3} mt={-1} textAlign="center">
        <MKTypography display="inline" variant="h5" textTransform="capitalize" fontWeight="regular">
          {title}
        </MKTypography>
        <MKBox mt={1} mb={3}>
          <MKTypography variant="body2" component="p" color="text">
            {description}
          </MKTypography>
        </MKBox>
        {action.type === "external" ? (
          <MKButton
            component={MuiLink}
            href={action.route}
            target="_blank"
            rel="noreferrer"
            variant="gradient"
            size="small"
            color={action.color ? action.color : "dark"}
          >
            {action.label}
          </MKButton>
        ) : (
          <MKButton
            component={Link}
            to={action.route}
            variant="gradient"
            size="small"
            color={action.color ? action.color : "dark"}
          >
            {action.label}
          </MKButton>
        )}
      </MKBox>
    </Card>
  );
}

// Typechecking props for the CenteredBlogCard
CenteredBlogCard.propTypes = {
  image: PropTypes.string.isRequired,
  title: PropTypes.string.isRequired,
  description: PropTypes.string.isRequired,
  action: PropTypes.shape({
    type: PropTypes.oneOf(["external", "internal"]).isRequired,
    route: PropTypes.string.isRequired,
    color: PropTypes.oneOf([
      "primary",
      "secondary",
      "info",
      "success",
      "warning",
      "error",
      "dark",
      "light",
    ]),
    label: PropTypes.string.isRequired,
  }).isRequired,
};

export default CenteredBlogCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/BlogCards/DefaultBlogCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/BlogCards/DefaultBlogCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// react-router components
import { Link } from "react-router-dom";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Card from "@mui/material/Card";
import MuiLink from "@mui/material/Link";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import MKAvatar from "components/MKAvatar";

function DefaultBlogCard({ image, category, title, description, author, raised, action }) {
  const imageTemplate = (
    <>
      <MKBox
        component="img"
        src={image}
        alt={title}
        borderRadius="lg"
        shadow={raised ? "md" : "none"}
        width="100%"
        position="relative"
        zIndex={1}
      />
      <MKBox
        borderRadius="lg"
        shadow={raised ? "md" : "none"}
        width="100%"
        height="100%"
        position="absolute"
        left={0}
        top={0}
        sx={
          raised
            ? {
                backgroundImage: `url(${image})`,
                transform: "scale(0.94)",
                filter: "blur(12px)",
                backgroundSize: "cover",
              }
            : {}
        }
      />
    </>
  );

  return (
    <Card>
      <MKBox position="relative" borderRadius="lg" mx={2} mt={raised ? -3 : 2}>
        {action.type === "internal" ? (
          <Link to={action.route}>{imageTemplate}</Link>
        ) : (
          <MuiLink href={action.route} target="_blank" rel="noreferrer">
            {imageTemplate}
          </MuiLink>
        )}
      </MKBox>
      <MKBox p={3}>
        {category && (
          <MKTypography
            variant="caption"
            color={category.color}
            textTransform="uppercase"
            fontWeight="medium"
            textGradient
            sx={{ display: "block" }}
          >
            {category.label}
          </MKTypography>
        )}
        {action.type === "internal" ? (
          <Link to={action.route}>
            <MKTypography
              variant="h5"
              textTransform="capitalize"
              my={1}
              sx={{ display: "inline-block" }}
            >
              {title}
            </MKTypography>
          </Link>
        ) : (
          <MuiLink href={action.route} target="_blank" rel="noreferrer">
            <MKTypography
              variant="h5"
              textTransform="capitalize"
              mt={2}
              mb={1}
              sx={{ display: "inline-block" }}
            >
              {title}
            </MKTypography>
          </MuiLink>
        )}
        <MKTypography variant="body2" component="p" color="text">
          {description}
        </MKTypography>
        {author && (
          <MKBox display="flex" alignItems="center" mt={3}>
            <MKAvatar
              src={author.image}
              alt={author.name}
              shadow="md"
              variant={raised ? "circular" : "rounded"}
            />
            <MKBox pl={2} lineHeight={0}>
              <MKTypography component="h6" variant="button" fontWeight="medium" gutterBottom>
                {author.name}
              </MKTypography>
              <MKTypography variant="caption" color="text">
                {author.date}
              </MKTypography>
            </MKBox>
          </MKBox>
        )}
      </MKBox>
    </Card>
  );
}

// Setting default props for the DefaultBlogCard
DefaultBlogCard.defaultProps = {
  category: false,
  author: false,
  raised: true,
};

// Typechecking props for the DefaultBlogCard
DefaultBlogCard.propTypes = {
  image: PropTypes.string.isRequired,
  category: PropTypes.oneOfType([
    PropTypes.shape({
      color: PropTypes.oneOf([
        "primary",
        "secondary",
        "info",
        "success",
        "warning",
        "error",
        "dark",
      ]).isRequired,
      label: PropTypes.string.isRequired,
    }),
    PropTypes.bool,
  ]),
  title: PropTypes.string.isRequired,
  description: PropTypes.string.isRequired,
  author: PropTypes.oneOfType([
    PropTypes.shape({
      image: PropTypes.string.isRequired,
      name: PropTypes.string.isRequired,
      date: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,
    }),
    PropTypes.bool,
  ]),
  raised: PropTypes.bool,
  action: PropTypes.shape({
    type: PropTypes.oneOf(["external", "internal"]).isRequired,
    route: PropTypes.string.isRequired,
  }).isRequired,
};

export default DefaultBlogCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/BlogCards/RaisedBlogCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/BlogCards/RaisedBlogCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// react-router components
import { Link } from "react-router-dom";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Card from "@mui/material/Card";
import Icon from "@mui/material/Icon";
import MuiLink from "@mui/material/Link";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

function RaisedBlogCard({ image, title, description, action }) {
  const cardActionStyles = {
    display: "flex",
    alignItems: "center",

    "& .material-icons, .material-icons-round,": {
      transform: `translateX(2px)`,
      transition: "transform 0.2s cubic-bezier(0.34,1.61,0.7,1.3)",
    },

    "&:hover .material-icons, &:focus .material-icons, &:hover .material-icons-round, &:focus .material-icons-round":
      {
        transform: `translateX(6px)`,
      },
  };

  return (
    <Card>
      <MKBox position="relative" borderRadius="lg" mx={2} mt={-3}>
        <MKBox
          component="img"
          src={image}
          alt={title}
          borderRadius="lg"
          shadow="md"
          width="100%"
          position="relative"
          zIndex={1}
        />
        <MKBox
          borderRadius="lg"
          shadow="md"
          width="100%"
          height="100%"
          position="absolute"
          left={0}
          top={0}
          sx={{
            backgroundImage: `url(${image})`,
            transform: "scale(0.94)",
            filter: "blur(12px)",
            backgroundSize: "cover",
          }}
        />
      </MKBox>
      <MKBox p={3} mt={-2}>
        <MKTypography display="inline" variant="h4" textTransform="capitalize">
          {title}
        </MKTypography>
        <MKBox mt={1} mb={3}>
          <MKTypography variant="body2" component="p" color="text">
            {description}
          </MKTypography>
        </MKBox>
        {action.type === "external" ? (
          <MKTypography
            component={MuiLink}
            href={action.route}
            target="_blank"
            rel="noreferrer"
            variant="body2"
            fontWeight="regular"
            color={action.color ? action.color : "dark"}
            sx={cardActionStyles}
          >
            {action.label}
            <Icon sx={{ fontWeight: "bold" }}>arrow_forward</Icon>
          </MKTypography>
        ) : (
          <MKTypography
            component={Link}
            to={action.route}
            variant="body2"
            fontWeight="regular"
            color={action.color ? action.color : "dark"}
            sx={cardActionStyles}
          >
            {action.label}
            <Icon sx={{ fontWeight: "bold" }}>arrow_forward</Icon>
          </MKTypography>
        )}
      </MKBox>
    </Card>
  );
}

// Typechecking props for the RaisedBlogCard
RaisedBlogCard.propTypes = {
  image: PropTypes.string.isRequired,
  title: PropTypes.string.isRequired,
  description: PropTypes.string.isRequired,
  action: PropTypes.shape({
    type: PropTypes.oneOf(["external", "internal"]).isRequired,
    route: PropTypes.string.isRequired,
    color: PropTypes.oneOf([
      "primary",
      "secondary",
      "info",
      "success",
      "warning",
      "error",
      "dark",
      "light",
    ]),
    label: PropTypes.string.isRequired,
  }).isRequired,
};

export default RaisedBlogCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/BlogCards/SimpleBlogCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/BlogCards/SimpleBlogCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// react-router components
import { Link } from "react-router-dom";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Card from "@mui/material/Card";
import MuiLink from "@mui/material/Link";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import MKButton from "components/MKButton";

function SimpleBlogCard({ image, title, description, action }) {
  return (
    <Card>
      <MKBox position="relative" borderRadius="lg" mx={2} mt={-3}>
        <MKBox
          component="img"
          src={image}
          alt={title}
          borderRadius="lg"
          shadow="md"
          width="100%"
          position="relative"
          zIndex={1}
        />
        <MKBox
          borderRadius="lg"
          shadow="md"
          width="100%"
          height="100%"
          position="absolute"
          left={0}
          top={0}
          sx={{
            backgroundImage: `url(${image})`,
            transform: "scale(0.94)",
            filter: "blur(12px)",
            backgroundSize: "cover",
          }}
        />
      </MKBox>
      <MKBox p={3} mt={-2}>
        <MKTypography display="inline" variant="h5" textTransform="capitalize" fontWeight="regular">
          {title}
        </MKTypography>
        <MKBox mt={1} mb={3}>
          <MKTypography variant="body2" component="p" color="text">
            {description}
          </MKTypography>
        </MKBox>
        {action.type === "external" ? (
          <MKButton
            component={MuiLink}
            href={action.route}
            target="_blank"
            rel="noreferrer"
            variant="outlined"
            size="small"
            color={action.color ? action.color : "dark"}
          >
            {action.label}
          </MKButton>
        ) : (
          <MKButton
            component={Link}
            to={action.route}
            variant="outlined"
            size="small"
            color={action.color ? action.color : "dark"}
          >
            {action.label}
          </MKButton>
        )}
      </MKBox>
    </Card>
  );
}

// Typechecking props for the SimpleBlogCard
SimpleBlogCard.propTypes = {
  image: PropTypes.string.isRequired,
  title: PropTypes.string.isRequired,
  description: PropTypes.string.isRequired,
  action: PropTypes.shape({
    type: PropTypes.oneOf(["external", "internal"]).isRequired,
    route: PropTypes.string.isRequired,
    color: PropTypes.oneOf([
      "primary",
      "secondary",
      "info",
      "success",
      "warning",
      "error",
      "dark",
      "light",
    ]),
    label: PropTypes.string.isRequired,
  }).isRequired,
};

export default SimpleBlogCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/BlogCards/TransparentBlogCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/BlogCards/TransparentBlogCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// react-router components
import { Link } from "react-router-dom";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Card from "@mui/material/Card";
import Icon from "@mui/material/Icon";
import MuiLink from "@mui/material/Link";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

function TransparentBlogCard({ image, title, description, action }) {
  const cardActionStyles = {
    display: "flex",
    alignItems: "center",
    width: "max-content",

    "& .material-icons, .material-icons-round,": {
      transform: `translateX(2px)`,
      transition: "transform 0.2s cubic-bezier(0.34,1.61,0.7,1.3)",
    },

    "&:hover .material-icons, &:focus .material-icons, &:hover .material-icons-round, &:focus .material-icons-round":
      {
        transform: `translateX(6px)`,
      },
  };

  const imageTemplate = (
    <MKBox position="relative" borderRadius="lg">
      <MKBox
        component="img"
        src={image}
        alt={title}
        borderRadius="lg"
        shadow="md"
        width="100%"
        position="relative"
        zIndex={1}
      />
      <MKBox
        borderRadius="lg"
        shadow="md"
        width="100%"
        height="100%"
        position="absolute"
        left={0}
        top={0}
        sx={{
          backgroundImage: `url(${image})`,
          transform: "scale(0.94)",
          filter: "blur(12px)",
          backgroundSize: "cover",
        }}
      />
    </MKBox>
  );

  return (
    <Card
      sx={{
        background: "transparent",
        boxShadow: "none",
        overflow: "visible",
      }}
    >
      {action.type === "internal" ? (
        <Link to={action.route}>{imageTemplate}</Link>
      ) : (
        <MuiLink href={action.route} target="_blank" rel="noreferrer">
          {imageTemplate}
        </MuiLink>
      )}
      <MKBox pt={2} pb={3}>
        {action.type === "internal" ? (
          <Link to={action.route} sx={cardActionStyles}>
            <MKTypography variant="h5" gutterBottom>
              {title}
            </MKTypography>
          </Link>
        ) : (
          <MuiLink href={action.route} target="_blank" rel="noreferrer" sx={cardActionStyles}>
            <MKTypography variant="h5" gutterBottom>
              {title}
            </MKTypography>
          </MuiLink>
        )}
        <MKTypography variant="body2" component="p" color="text" mb={3}>
          {description}
        </MKTypography>
        {action.type === "internal" ? (
          <MKTypography
            component={Link}
            to={action.route}
            variant="body2"
            fontWeight="regular"
            color={action.color}
            textTransform="capitalize"
            sx={cardActionStyles}
          >
            {action.label}
            <Icon sx={{ fontWeight: "bold" }}>arrow_forward</Icon>
          </MKTypography>
        ) : (
          <MKTypography
            component={MuiLink}
            href={action.route}
            target="_blank"
            rel="noreferrer"
            variant="body2"
            fontWeight="regular"
            color={action.color}
            textTransform="capitalize"
            sx={cardActionStyles}
          >
            {action.label}
            <Icon sx={{ fontWeight: "bold" }}>arrow_forward</Icon>
          </MKTypography>
        )}
      </MKBox>
    </Card>
  );
}

// Typechecking props for the TransparentBlogCard
TransparentBlogCard.propTypes = {
  image: PropTypes.string.isRequired,
  title: PropTypes.string.isRequired,
  description: PropTypes.string.isRequired,
  action: PropTypes.shape({
    type: PropTypes.oneOf(["external", "internal"]),
    route: PropTypes.string.isRequired,
    label: PropTypes.string.isRequired,
    color: PropTypes.oneOf([
      "inherit",
      "primary",
      "secondary",
      "info",
      "success",
      "warning",
      "error",
      "light",
      "dark",
      "text",
    ]).isRequired,
  }).isRequired,
};

export default TransparentBlogCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/BookingCards/SimpleBookingCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/BookingCards/SimpleBookingCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import { Fragment } from "react";

// react-router components
import { Link } from "react-router-dom";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Card from "@mui/material/Card";
import MuiLink from "@mui/material/Link";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import MKButton from "components/MKButton";

function SimpleBookingCard({ image, title, description, categories, action }) {
  return (
    <Card>
      <MKBox position="relative" borderRadius="lg" mx={2} mt={-3}>
        <MKBox
          component="img"
          src={image}
          alt={title}
          borderRadius="lg"
          shadow="md"
          width="100%"
          position="relative"
          zIndex={1}
        />
        <MKBox
          borderRadius="lg"
          shadow="md"
          width="100%"
          height="100%"
          position="absolute"
          left={0}
          top={0}
          sx={{
            backgroundImage: `url(${image})`,
            transform: "scale(0.94)",
            filter: "blur(12px)",
            backgroundSize: "cover",
          }}
        />
      </MKBox>
      <MKBox p={3} mt={-2}>
        {categories.length > 0 && (
          <MKTypography
            display="block"
            variant="button"
            color="text"
            fontWeight="regular"
            mb={0.75}
          >
            {categories.map((category) => (
              <Fragment key={category}>{category}&nbsp;&bull;&nbsp;</Fragment>
            ))}
          </MKTypography>
        )}
        <MKTypography display="inline" variant="h5" fontWeight="bold">
          {title}
        </MKTypography>
        <MKBox mt={1} mb={3}>
          <MKTypography variant="body2" component="p" color="text">
            {description}
          </MKTypography>
        </MKBox>
        {action.type === "external" ? (
          <MKButton
            component={MuiLink}
            href={action.route}
            target="_blank"
            rel="noreferrer"
            variant="outlined"
            size="small"
            color={action.color ? action.color : "dark"}
          >
            {action.label}
          </MKButton>
        ) : (
          <MKButton
            component={Link}
            to={action.route}
            variant="outlined"
            size="small"
            color={action.color ? action.color : "dark"}
          >
            {action.label}
          </MKButton>
        )}
      </MKBox>
    </Card>
  );
}

// Setting default props for the SimpleBookingCard
SimpleBookingCard.defaultProps = {
  categories: [],
};

// Typechecking props for the SimpleBookingCard
SimpleBookingCard.propTypes = {
  image: PropTypes.string.isRequired,
  title: PropTypes.string.isRequired,
  description: PropTypes.string.isRequired,
  categories: PropTypes.arrayOf(PropTypes.string),
  action: PropTypes.shape({
    type: PropTypes.oneOf(["external", "internal"]).isRequired,
    route: PropTypes.string.isRequired,
    color: PropTypes.oneOf([
      "primary",
      "secondary",
      "info",
      "success",
      "warning",
      "error",
      "dark",
      "light",
    ]),
    label: PropTypes.string.isRequired,
  }).isRequired,
};

export default SimpleBookingCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/CounterCards/DefaultCounterCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/CounterCards/DefaultCounterCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// prop-types is a library for typechecking of props.
import PropTypes from "prop-types";

// react-countup component
import CountUp from "react-countup";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

function DefaultCounterCard({ color, count, title, description, ...rest }) {
  return (
    <MKBox p={2} textAlign="center" lineHeight={1}>
      <MKTypography variant="h1" color={color} textGradient>
        <CountUp end={count} duration={1} {...rest} />
      </MKTypography>
      {title && (
        <MKTypography variant="h5" color="pros" mt={2} mb={1}>
          {title}
        </MKTypography>
      )}
      {description && (
        <MKTypography variant="body2" color="white">
          {description}
        </MKTypography>
      )}
    </MKBox>
  );
}

// Setting default props for the DefaultCounterCard
DefaultCounterCard.defaultProps = {
  color: "pros",
  description: "",
  title: "",
};

// Typechecking props for the DefaultCounterCard
DefaultCounterCard.propTypes = {
  color: PropTypes.oneOf([
    "primary",
    "secondary",
    "info",
    "success",
    "warning",
    "pros",
    "error",
    "light",
    "dark",
  ]),
  count: PropTypes.number.isRequired,
  title: PropTypes.string,
  description: PropTypes.string,
};

export default DefaultCounterCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/InfoCards/DefaultInfoCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/InfoCards/DefaultInfoCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Icon from "@mui/material/Icon";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

function DefaultInfoCard({ color, icon, title, description, direction, small }) {
  return (
    <MKBox lineHeight={1} p={direction === "center" ? 2 : 0} textAlign={direction}>
      {typeof icon === "string" ? (
        <MKTypography
          display="block"
          variant={direction === "center" ? "h2" : "h3"}
          color={color}
          textGradient
        >
          {" "}
          <Icon>{icon}</Icon>{" "}
        </MKTypography>
      ) : (
        icon
      )}
      <MKTypography
        display="block"
        variant="5"
        fontWeight="bold"
        mt={direction === "center" ? 1 : 2}
        mb={1.5}
      >
        {title}
      </MKTypography>
      <MKTypography
        display="block"
        variant={small ? "button" : "body2"}
        color="text"
        pr={direction === "left" ? 6 : 0}
        pl={direction === "right" ? 6 : 0}
      >
        {description}
      </MKTypography>
    </MKBox>
  );
}

// Setting default props for the DefaultInfoCard
DefaultInfoCard.defaultProps = {
  color: "info",
  direction: "left",
  small: false,
};

// Typechecking props for the DefaultInfoCard
DefaultInfoCard.propTypes = {
  color: PropTypes.oneOf([
    "primary",
    "secondary",
    "info",
    "success",
    "pros",
    "black",
    "warning",
    "error",
    "light",
    "dark",
  ]),
  icon: PropTypes.node.isRequired,
  title: PropTypes.string.isRequired,
  description: PropTypes.string.isRequired,
  direction: PropTypes.oneOf(["left", "right", "center"]),
  small: PropTypes.bool,
};

export default DefaultInfoCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/InfoCards/FilledInfoCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/InfoCards/FilledInfoCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// react-router-dom components
import { Link } from "react-router-dom";

// @mui material components
import Icon from "@mui/material/Icon";
import MuiLink from "@mui/material/Link";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

function FilledInfoCard({ variant, color, icon, title, description, action }) {
  const buttonStyles = {
    width: "max-content",
    display: "flex",
    alignItems: "center",

    "& .material-icons-round": {
      fontSize: "1.125rem",
      transform: `translateX(3px)`,
      transition: "transform 0.2s cubic-bezier(0.34, 1.61, 0.7, 1.3)",
    },

    "&:hover .material-icons-round, &:focus .material-icons-round": {
      transform: `translateX(6px)`,
    },
  };

  let iconColor = color;

  if (variant === "gradient" && color !== "light") {
    iconColor = "white";
  } else if (variant === "gradient" && color === "light") {
    iconColor = "dark";
  }

  return (
    <MKBox
      display={{ xs: "block", md: "flex" }}
      variant={variant}
      bgColor={variant === "contained" ? "grey-100" : color}
      borderRadius="xl"
      pt={3.5}
      pb={3}
      px={3}
    >
      <MKTypography
        display="block"
        variant="h3"
        color={iconColor}
        textGradient={variant === "contained"}
        mt={-0.625}
      >
        {typeof icon === "string" ? <Icon>{icon}</Icon> : icon}
      </MKTypography>
      <MKBox pt={{ xs: 3, md: 0 }} pl={{ xs: 0, md: 2 }} lineHeight={1}>
        <MKTypography
          display="block"
          variant="5"
          color={variant === "contained" || color === "light" ? "dark" : "white"}
          fontWeight="bold"
          mb={1}
        >
          {title}
        </MKTypography>
        <MKTypography
          display="block"
          variant="body2"
          color={variant === "contained" || color === "light" ? "text" : "white"}
          mb={2}
        >
          {description}
        </MKTypography>
        {action && action.type === "external" ? (
          <MKTypography
            component={MuiLink}
            href={action.route}
            target="_blank"
            rel="noreferrer"
            variant="body2"
            fontWeight="regular"
            color={variant === "contained" ? color : "white"}
            sx={buttonStyles}
          >
            {action.label} <Icon sx={{ fontWeight: "bold" }}>arrow_forward</Icon>
          </MKTypography>
        ) : null}
        {action && action.type === "internal" ? (
          <MKTypography
            component={Link}
            to={action.route}
            variant="body2"
            fontWeight="regular"
            color={variant === "contained" ? color : "white"}
            sx={buttonStyles}
          >
            {action.label} <Icon sx={{ fontWeight: "bold" }}>arrow_forward</Icon>
          </MKTypography>
        ) : null}
      </MKBox>
    </MKBox>
  );
}

// Setting default props for the FilledInfoCard
FilledInfoCard.defaultProps = {
  variant: "contained",
  color: "info",
  action: false,
};

// Typechecking props for the FilledInfoCard
FilledInfoCard.propTypes = {
  variant: PropTypes.oneOf(["contained", "gradient"]),
  color: PropTypes.oneOf([
    "primary",
    "secondary",
    "info",
    "success",
    "warning",
    "error",
    "light",
    "dark",
  ]),
  icon: PropTypes.node.isRequired,
  title: PropTypes.string.isRequired,
  description: PropTypes.string.isRequired,
  action: PropTypes.oneOfType([
    PropTypes.bool,
    PropTypes.shape({
      type: PropTypes.oneOf(["external", "internal"]).isRequired,
      route: PropTypes.string.isRequired,
      label: PropTypes.string.isRequired,
    }),
  ]),
};

export default FilledInfoCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/InfoCards/SimpleInfoCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/InfoCards/SimpleInfoCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Icon from "@mui/material/Icon";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

function SimpleInfoCard({ color, icon, title, description, direction }) {
  let alignment = "flex-start";

  if (direction === "center") {
    alignment = "center";
  } else if (direction === "right") {
    alignment = "flex-end";
  }

  return (
    <MKBox
      display="flex"
      flexDirection="column"
      alignItems={alignment}
      textAlign={direction}
      p={direction === "center" ? 2 : 0}
      lineHeight={1}
    >
      <MKBox
        display="flex"
        justifyContent="center"
        alignItems="center"
        width="3rem"
        height="3rem"
        borderRadius="xl"
        variant="gradient"
        color="white"
        bgColor={color}
        coloredShadow={color}
      >
        {typeof icon === "string" ? <Icon fontSize="small">{icon}</Icon> : icon}
      </MKBox>
      <MKTypography display="block" variant="5" fontWeight="bold" mt={2.5} mb={1.5}>
        {title}
      </MKTypography>
      <MKTypography display="block" variant="body2" color="text">
        {description}
      </MKTypography>
    </MKBox>
  );
}

// Setting default props for the SimpleInfoCard
SimpleInfoCard.defaultProps = {
  color: "pros",
  direction: "left",
};

// Typechecking props for the SimpleInfoCard
SimpleInfoCard.propTypes = {
  color: PropTypes.oneOf([
    "primary",
    "secondary",
    "black",
    "pros",
    "info",
    "success",
    "warning",
    "error",
    "light",
    "dark",
  ]),
  icon: PropTypes.node.isRequired,
  title: PropTypes.string.isRequired,
  description: PropTypes.string.isRequired,
  direction: PropTypes.oneOf(["left", "right", "center"]),
};

export default SimpleInfoCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/PricingCards/DefaultPricingCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/PricingCards/DefaultPricingCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// react-router-dom components
import { Link } from "react-router-dom";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Card from "@mui/material/Card";
import Icon from "@mui/material/Icon";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import MKButton from "components/MKButton";

function DefaultPricingCard({ color, badge, price, specifications, action, shadow }) {
  const renderSpecifications = specifications.map(({ label, includes }) => (
    <MKBox key={label} display="flex" alignItems="center" p={1}>
      <MKBox
        display="flex"
        justifyContent="center"
        alignItems="center"
        width="1.5rem"
        height="1.5rem"
        mr={2}
        mt={-0.125}
      >
        <MKTypography
          variant="body1"
          color={color === "white" ? "text" : "white"}
          sx={{ lineHeight: 0 }}
        >
          <Icon>{includes ? "done" : "remove"}</Icon>
        </MKTypography>
      </MKBox>
      <MKTypography
        variant="body2"
        color={color === "white" ? "text" : "white"}
        fontWeight="regular"
      >
        {label}
      </MKTypography>
    </MKBox>
  ));

  return (
    <Card sx={{ boxShadow: ({ boxShadows: { lg } }) => (shadow ? lg : "none") }}>
      <MKBox
        bgColor={color}
        variant={color === "white" ? "contained" : "gradient"}
        borderRadius="xl"
      >
        <MKBox
          bgColor={badge.color}
          width="max-content"
          px={4}
          pt={0}
          pb={0.5}
          mx="auto"
          mt={-1.375}
          borderRadius="section"
          lineHeight={1}
        >
          <MKTypography
            variant="caption"
            textTransform="uppercase"
            fontWeight="medium"
            color={badge.color === "light" ? "dark" : "white"}
          >
            {badge.label}
          </MKTypography>
        </MKBox>
        <MKBox pt={3} pb={2} px={2} textAlign="center">
          <MKBox my={1}>
            <MKTypography variant="h1" color={color === "white" ? "dark" : "white"}>
              <MKTypography
                display="inline"
                component="small"
                variant="h5"
                color="inherit"
                verticalAlign="top"
              >
                {price.currency}
              </MKTypography>
              {price.value}
              <MKTypography display="inline" component="small" variant="h5" color="inherit">
                /{price.type}
              </MKTypography>
            </MKTypography>
          </MKBox>
        </MKBox>
        <MKBox pb={3} px={3}>
          {renderSpecifications}
          {action.type === "internal" ? (
            <MKBox mt={3}>
              <MKButton
                component={Link}
                to={action.route}
                variant="gradient"
                color={action.color}
                fullWidth
              >
                {action.label}&nbsp;
                <Icon sx={{ fontWeight: "bold" }}>arrow_forward</Icon>
              </MKButton>
            </MKBox>
          ) : (
            <MKBox mt={3}>
              <MKButton
                component="a"
                href={action.route}
                target="_blank"
                rel="noreferrer"
                variant="gradient"
                color={action.color}
                fullWidth
              >
                {action.label}&nbsp;
                <Icon sx={{ fontWeight: "bold" }}>arrow_forward</Icon>
              </MKButton>
            </MKBox>
          )}
        </MKBox>
      </MKBox>
    </Card>
  );
}

// Setting default props for the DefaultPricingCard
DefaultPricingCard.defaultProps = {
  color: "white",
  shadow: true,
};

// Typechecking props for the DefaultPricingCard
DefaultPricingCard.propTypes = {
  color: PropTypes.oneOf([
    "primary",
    "secondary",
    "info",
    "success",
    "warning",
    "error",
    "light",
    "dark",
    "white",
  ]),
  badge: PropTypes.shape({
    color: PropTypes.oneOf([
      "primary",
      "secondary",
      "info",
      "success",
      "warning",
      "error",
      "light",
      "dark",
    ]).isRequired,
    label: PropTypes.string.isRequired,
  }).isRequired,
  price: PropTypes.shape({
    currency: PropTypes.string.isRequired,
    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
    type: PropTypes.string.isRequired,
  }).isRequired,
  specifications: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object])).isRequired,
  action: PropTypes.shape({
    type: PropTypes.oneOf(["external", "internal"]).isRequired,
    route: PropTypes.string.isRequired,
    label: PropTypes.string.isRequired,
    color: PropTypes.oneOf([
      "primary",
      "secondary",
      "info",
      "success",
      "warning",
      "error",
      "light",
      "dark",
    ]).isRequired,
  }).isRequired,
  shadow: PropTypes.bool,
};

export default DefaultPricingCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/PricingCards/SimplePricingCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/PricingCards/SimplePricingCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// react-router-dom components
import { Link } from "react-router-dom";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Card from "@mui/material/Card";
import Icon from "@mui/material/Icon";
import Divider from "@mui/material/Divider";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import MKButton from "components/MKButton";

function SimplePricingCard({ variant, color, title, description, price, specifications, action }) {
  let titleColor = "white";
  let priceColor = "white";
  let buttonColor = "white";

  if (variant === "contained") {
    titleColor = color;
    priceColor = color;
    buttonColor = color;
  } else if (variant === "gradient" && color === "light") {
    titleColor = "dark";
    priceColor = "dark";
    buttonColor = "dark";
  }

  const renderSpecifications = specifications.map((specification) => (
    <MKBox key={specification} display="flex" alignItems="center" pb={2}>
      <MKBox
        display="flex"
        justifyContent="center"
        alignItems="center"
        width="1.5rem"
        height="1.5rem"
        mr={2}
        mt={-0.125}
        lineHeight={0}
      >
        <MKTypography variant="body1" color={titleColor} sx={{ lineHeight: 0 }}>
          <Icon>done</Icon>
        </MKTypography>
      </MKBox>
      <MKTypography
        variant="button"
        color={
          variant === "contained" || (variant === "gradient" && color === "light")
            ? "text"
            : "white"
        }
        fontWeight="regular"
      >
        {specification}
      </MKTypography>
    </MKBox>
  ));

  return (
    <Card sx={{ width: "100%", height: "100%", overflow: "hidden" }}>
      <MKBox variant={variant} bgColor={variant === "gradient" ? color : "white"} height="100%">
        <MKBox p={3} lineHeight={1}>
          <MKTypography variant="h5" fontWeight="bold" color={titleColor} mb={0.5}>
            {title}
          </MKTypography>
          <MKTypography
            variant="button"
            color={
              variant === "contained" || (variant === "gradient" && color === "light")
                ? "text"
                : "white"
            }
            mb={2}
          >
            {description}
          </MKTypography>
          <MKTypography variant="h3" color={priceColor} mt={2} mb={1}>
            {price.value}&nbsp;
            {price.type && (
              <MKTypography
                display="inline"
                component="small"
                variant="h6"
                color={
                  variant === "contained" || (variant === "gradient" && color === "light")
                    ? "secondary"
                    : "white"
                }
                sx={{
                  fontFamily: ({ typography: { h1 } }) => h1.fontFamily,
                }}
              >
                / {price.type}
              </MKTypography>
            )}
          </MKTypography>
          {action.type === "internal" ? (
            <MKBox mt={3}>
              <MKButton
                component={Link}
                to={action.route}
                variant={variant === "gradient" ? "contained" : "gradient"}
                size="small"
                color={buttonColor}
                fullWidth
              >
                {action.label}
              </MKButton>
            </MKBox>
          ) : (
            <MKBox mt={3}>
              <MKButton
                component="a"
                href={action.route}
                target="_blank"
                rel="noreferrer"
                variant={variant === "gradient" ? "contained" : "gradient"}
                size="small"
                color={buttonColor}
                fullWidth
              >
                {action.label}
              </MKButton>
            </MKBox>
          )}
        </MKBox>
        <Divider
          light={variant === "gradient" || (variant === "gradient" && color === "light")}
          sx={{ my: 0, opacity: variant === "gradient" ? 0.5 : 0.25 }}
        />
        <MKBox p={3}>{renderSpecifications}</MKBox>
      </MKBox>
    </Card>
  );
}

// Setting default props for the SimplePricingCard
SimplePricingCard.defaultProps = {
  color: "dark",
  variant: "contained",
};

// Typechecking props for the SimplePricingCard
SimplePricingCard.propTypes = {
  variant: PropTypes.oneOf(["contained", "gradient"]),
  color: PropTypes.oneOf([
    "primary",
    "secondary",
    "info",
    "success",
    "warning",
    "error",
    "light",
    "dark",
  ]),
  title: PropTypes.string.isRequired,
  description: PropTypes.string.isRequired,
  price: PropTypes.shape({
    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
    type: PropTypes.string,
  }).isRequired,
  specifications: PropTypes.arrayOf(PropTypes.string).isRequired,
  action: PropTypes.shape({
    type: PropTypes.oneOf(["external", "internal"]).isRequired,
    route: PropTypes.string.isRequired,
    label: PropTypes.string.isRequired,
  }).isRequired,
};

export default SimplePricingCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/ReviewCards/ComplexReviewCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/ReviewCards/ComplexReviewCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// prop-types is library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Grid from "@mui/material/Grid";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKAvatar from "components/MKAvatar";
import MKTypography from "components/MKTypography";

function ComplexReviewCard({ image, color, title, review, author }) {
  return (
    <Grid container alignItems="center" spacing={3}>
      <Grid item xs={12} md={5} sx={{ ml: { xs: 0, lg: "auto" } }}>
        <MKBox p={{ xs: 0, lg: 6 }}>
          <MKBox
            component="img"
            src={image}
            alt={title}
            width="100%"
            borderRadius="md"
            shadow="md"
          />
        </MKBox>
      </Grid>
      <Grid item xs={12} md={7} lg={5} sx={{ mr: { xs: 0, lg: "auto" } }}>
        <MKTypography variant="button" color="text" fontWeight="bold" mb={0.5}>
          - Customer Story
        </MKTypography>
        <MKTypography variant="h3" color={color}>
          {title}
        </MKTypography>
        <MKTypography variant="body2" color="text" my={3}>
          <em>&quot;{review}&quot;</em>
        </MKTypography>
        <MKBox display="flex" alignItems="center">
          <MKAvatar
            src={author.logo}
            alt="Logo"
            size="md"
            shadow="md"
            bgColor={color}
            sx={{ p: 0.5 }}
          />
          <MKBox pl={1.5}>
            <MKTypography display="block" variant="button" color={color} fontWeight="bold">
              {author.name}
            </MKTypography>
            <MKTypography display="block" variant="button" color="text" fontWeight="regular">
              {author.role}
            </MKTypography>
          </MKBox>
        </MKBox>
        <MKBox width="25%" mt={-16} ml="auto" opacity={0.2}>
          <svg
            width="110px"
            height="110px"
            viewBox="0 0 270 270"
            version="1.1"
            xmlns="http://www.w3.org/2000/svg"
            xmlnsXlink="http://www.w3.org/1999/xlink"
          >
            <title>quote-down</title>
            <g stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
              <path
                d="M107.000381,49.033238 C111.792099,48.01429 115.761022,48.6892564 116.625294,50.9407629 C117.72393,53.8028077 113.174473,58.3219079 107.017635,60.982801 C107.011653,60.9853863 107.00567,60.9879683 106.999688,60.990547 C106.939902,61.0219589 106.879913,61.0439426 106.820031,61.0659514 C106.355389,61.2618887 105.888177,61.4371549 105.421944,61.5929594 C88.3985192,68.1467602 80.3242628,76.9161885 70.3525495,90.6906738 C60.0774843,104.884196 54.9399518,119.643717 54.9399518,134.969238 C54.9399518,138.278158 55.4624127,140.716309 56.5073346,142.283691 C57.2039492,143.328613 57.9876406,143.851074 58.8584088,143.851074 C59.7291771,143.851074 61.0353294,143.241536 62.7768659,142.022461 C68.3497825,138.016927 75.4030052,136.01416 83.9365338,136.01416 C93.8632916,136.01416 102.658051,140.063232 110.320811,148.161377 C117.983572,156.259521 121.814952,165.88151 121.814952,177.027344 C121.814952,188.695638 117.417572,198.970703 108.622813,207.852539 C99.828054,216.734375 89.1611432,221.175293 76.6220807,221.175293 C61.9931745,221.175293 49.3670351,215.166992 38.7436627,203.150391 C28.1202903,191.133789 22.8086041,175.024577 22.8086041,154.822754 C22.8086041,131.312012 30.0359804,110.239421 44.490733,91.6049805 C58.2196377,73.906272 74.3541002,59.8074126 102.443135,50.4450748 C102.615406,50.3748509 102.790055,50.3058192 102.966282,50.2381719 C104.199241,49.7648833 105.420135,49.3936487 106.596148,49.1227802 L107,49 Z M233.000381,49.033238 C237.792099,48.01429 241.761022,48.6892564 242.625294,50.9407629 C243.72393,53.8028077 239.174473,58.3219079 233.017635,60.982801 C233.011653,60.9853863 233.00567,60.9879683 232.999688,60.990547 C232.939902,61.0219589 232.879913,61.0439426 232.820031,61.0659514 C232.355389,61.2618887 231.888177,61.4371549 231.421944,61.5929594 C214.398519,68.1467602 206.324263,76.9161885 196.352549,90.6906738 C186.077484,104.884196 180.939952,119.643717 180.939952,134.969238 C180.939952,138.278158 181.462413,140.716309 182.507335,142.283691 C183.203949,143.328613 183.987641,143.851074 184.858409,143.851074 C185.729177,143.851074 187.035329,143.241536 188.776866,142.022461 C194.349783,138.016927 201.403005,136.01416 209.936534,136.01416 C219.863292,136.01416 228.658051,140.063232 236.320811,148.161377 C243.983572,156.259521 247.814952,165.88151 247.814952,177.027344 C247.814952,188.695638 243.417572,198.970703 234.622813,207.852539 C225.828054,216.734375 215.161143,221.175293 202.622081,221.175293 C187.993174,221.175293 175.367035,215.166992 164.743663,203.150391 C154.12029,191.133789 148.808604,175.024577 148.808604,154.822754 C148.808604,131.312012 156.03598,110.239421 170.490733,91.6049805 C184.219638,73.906272 200.3541,59.8074126 228.443135,50.4450748 C228.615406,50.3748509 228.790055,50.3058192 228.966282,50.2381719 C230.199241,49.7648833 231.420135,49.3936487 232.596148,49.1227802 L233,49 Z"
                fill="#48484A"
                fillRule="nonzero"
                transform="translate(135.311778, 134.872794) scale(-1, -1) translate(-135.311778, -134.872794) "
              />
            </g>
          </svg>
        </MKBox>
      </Grid>
    </Grid>
  );
}

// Setting default props for the ComplexReviewCard
ComplexReviewCard.defaultProps = {
  color: "dark",
};

// Typechecking props for the ComplexReviewCard
ComplexReviewCard.propTypes = {
  image: PropTypes.string.isRequired,
  color: PropTypes.oneOf([
    "primary",
    "secondary",
    "info",
    "success",
    "error",
    "warning",
    "dark",
    "light",
  ]),
  title: PropTypes.string.isRequired,
  review: PropTypes.string.isRequired,
  author: PropTypes.shape({
    logo: PropTypes.string.isRequired,
    name: PropTypes.string.isRequired,
    role: PropTypes.string.isRequired,
  }).isRequired,
};

export default ComplexReviewCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/ReviewCards/DefaultReviewCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/ReviewCards/DefaultReviewCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// prop-types is library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Icon from "@mui/material/Icon";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKAvatar from "components/MKAvatar";
import MKTypography from "components/MKTypography";

function DefaultReviewCard({ color, image, name, date, review, rating }) {
  const ratings = {
    0.5: [
      <Icon key={1}>star_outline</Icon>,
      <Icon key={2}>star_outline</Icon>,
      <Icon key={3}>star_outline</Icon>,
      <Icon key={4}>star_outline</Icon>,
      <Icon key={5}>star_outline</Icon>,
    ],
    1: [
      <Icon key={1}>star</Icon>,
      <Icon key={2}>star_outline</Icon>,
      <Icon key={3}>star_outline</Icon>,
      <Icon key={4}>star_outline</Icon>,
      <Icon key={5}>star_outline</Icon>,
    ],
    1.5: [
      <Icon key={1}>star</Icon>,
      <Icon key={2}>star_half</Icon>,
      <Icon key={3}>star_outline</Icon>,
      <Icon key={4}>star_outline</Icon>,
      <Icon key={5}>star_outline</Icon>,
    ],
    2: [
      <Icon key={1}>star</Icon>,
      <Icon key={2}>star</Icon>,
      <Icon key={3}>star_outline</Icon>,
      <Icon key={4}>star_outline</Icon>,
      <Icon key={5}>star_outline</Icon>,
    ],
    2.5: [
      <Icon key={1}>star</Icon>,
      <Icon key={2}>star</Icon>,
      <Icon key={3}>star_half</Icon>,
      <Icon key={4}>star_outline</Icon>,
      <Icon key={5}>star_outline</Icon>,
    ],
    3: [
      <Icon key={1}>star</Icon>,
      <Icon key={2}>star</Icon>,
      <Icon key={3}>star</Icon>,
      <Icon key={4}>star_outline</Icon>,
      <Icon key={5}>star_outline</Icon>,
    ],
    3.5: [
      <Icon key={1}>star</Icon>,
      <Icon key={2}>star</Icon>,
      <Icon key={3}>star</Icon>,
      <Icon key={4}>star_half</Icon>,
      <Icon key={5}>star_outline</Icon>,
    ],
    4: [
      <Icon key={1}>star</Icon>,
      <Icon key={2}>star</Icon>,
      <Icon key={3}>star</Icon>,
      <Icon key={4}>star</Icon>,
      <Icon key={5}>star_outline</Icon>,
    ],
    4.5: [
      <Icon key={1}>star</Icon>,
      <Icon key={2}>star</Icon>,
      <Icon key={3}>star</Icon>,
      <Icon key={4}>star</Icon>,
      <Icon key={5}>star_half</Icon>,
    ],
    5: [
      <Icon key={1}>star</Icon>,
      <Icon key={2}>star</Icon>,
      <Icon key={3}>star</Icon>,
      <Icon key={4}>star</Icon>,
      <Icon key={5}>star</Icon>,
    ],
  };

  return (
    <MKBox
      variant={color === "transparent" ? "contained" : "gradient"}
      bgColor={color}
      borderRadius="xl"
      shadow={color === "transparent" ? "none" : "md"}
      p={3}
    >
      {image && (
        <MKAvatar
          src={image}
          alt={name}
          variant="rounded"
          size="lg"
          shadow="md"
          sx={{ mt: -5, mb: 1 }}
        />
      )}
      <MKBox lineHeight={1}>
        <MKTypography
          display="block"
          variant={image ? "button" : "h6"}
          fontWeight="bold"
          color={color === "transparent" || color === "light" ? "dark" : "white"}
          mb={0.5}
        >
          {name}
        </MKTypography>
        <MKTypography
          variant={image ? "caption" : "button"}
          fontWeight="regular"
          lineHeight={1}
          color={color === "transparent" || color === "light" ? "text" : "white"}
          sx={{ display: "flex", alignItems: "center" }}
        >
          <Icon>schedule</Icon>&nbsp;
          {date}
        </MKTypography>
      </MKBox>
      <MKTypography
        variant="body2"
        color={color === "transparent" || color === "light" ? "text" : "white"}
        my={4}
      >
        &quot;{review}&quot;
      </MKTypography>
      <MKTypography
        variant="h4"
        color={color === "transparent" || color === "light" ? "text" : "white"}
        sx={{
          display: "flex",
          alignItems: "center",
          ml: 0.375,

          "& .material-icons-round": {
            ml: -0.375,
          },
        }}
      >
        {ratings[rating]}
      </MKTypography>
    </MKBox>
  );
}

// Setting default values for the props of DefaultReviewCard
DefaultReviewCard.defaultProps = {
  color: "transparent",
  image: "",
};

// Typechecking props for the DefaultReviewCard
DefaultReviewCard.propTypes = {
  color: PropTypes.oneOf([
    "transparent",
    "primary",
    "secondary",
    "info",
    "success",
    "warning",
    "error",
    "dark",
    "light",
  ]),
  image: PropTypes.string,
  name: PropTypes.string.isRequired,
  date: PropTypes.string.isRequired,
  review: PropTypes.string.isRequired,
  rating: PropTypes.oneOf([1, 2, 3, 4, 5]).isRequired,
};

export default DefaultReviewCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/ReviewCards/MiniReviewCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/ReviewCards/MiniReviewCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// prop-types is library for typechecking of props
import PropTypes from "prop-types";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKAvatar from "components/MKAvatar";
import MKTypography from "components/MKTypography";

function MiniReviewCard({ color, review, author }) {
  return (
    <MKBox
      variant={color === "transparent" ? "contained" : "gradient"}
      bgColor={color}
      borderRadius="xl"
      coloredShadow={color === "transparent" ? "none" : color}
      p={3}
    >
      <MKTypography
        variant="body2"
        color={color === "transparent" || color === "light" ? "text" : "white"}
        my={2}
      >
        &quot;{review}&quot;
      </MKTypography>
      <MKBox display="flex" alignItems="center" mt={3}>
        <MKAvatar src={author.image} alt={author.name} shadow="md" />
        <MKBox pl={1.5} lineHeight={1}>
          <MKTypography
            display="block"
            variant="button"
            fontWeight="bold"
            color={color === "transparent" || color === "light" ? "dark" : "white"}
          >
            {author.name}
          </MKTypography>
          <MKTypography
            variant="caption"
            fontWeight="regular"
            color={color === "transparent" || color === "light" ? "text" : "white"}
          >
            {author.date}
          </MKTypography>
        </MKBox>
      </MKBox>
    </MKBox>
  );
}

// Setting default values for the props of MiniReviewCard
MiniReviewCard.defaultProps = {
  color: "transparent",
};

// Typechecking props for the MiniReviewCard
MiniReviewCard.propTypes = {
  color: PropTypes.oneOf([
    "transparent",
    "primary",
    "secondary",
    "info",
    "success",
    "warning",
    "error",
    "dark",
    "light",
  ]),
  review: PropTypes.string.isRequired,
  author: PropTypes.shape({
    image: PropTypes.string.isRequired,
    name: PropTypes.string.isRequired,
    date: PropTypes.string.isRequired,
  }).isRequired,
};

export default MiniReviewCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/ReviewCards/SimpleReviewCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/ReviewCards/SimpleReviewCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// prop-types is library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Card from "@mui/material/Card";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import MKAvatar from "components/MKAvatar";

function SimpleReviewCard({ image, name, username, review }) {
  return (
    <Card>
      <MKBox display="grid" justifyContent="center" position="relative" mt={-7}>
        <MKAvatar
          src={image}
          alt={name}
          size="xxl"
          shadow="lg"
          sx={{ position: "relative", zIndex: 2 }}
        />
        <MKBox
          width="6.875rem"
          height="6.875rem"
          borderRadius="50%"
          position="absolute"
          top="3.5%"
          left="50%"
          zIndex={1}
          sx={{
            backgroundImage: `url(${image})`,
            backgroundSize: "cover",
            transform: "translateX(-50%) scale(0.87)",
            filter: "blur(12px)",
          }}
        />
      </MKBox>
      <MKBox pt={3} px={3} textAlign="center">
        <MKTypography variant="h4" fontWeight="bold">
          {name}
        </MKTypography>
        {username && (
          <MKTypography variant="body2" color="text" mb={2}>
            @{username}
          </MKTypography>
        )}
        <MKTypography variant="body2" color="text" mt={1} mb={2}>
          {review}
        </MKTypography>
      </MKBox>
      <MKBox textAlign="center" pt={1} pb={3} px={3}>
        <MKBox
          component="svg"
          width="60px"
          height="60px"
          opacity={0.2}
          viewBox="0 0 270 270"
          version="1.1"
          xmlns="http://www.w3.org/2000/svg"
          xmlnsXlink="http://www.w3.org/1999/xlink"
        >
          <title>quote-down</title>
          <g stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
            <path
              d="M107.000381,49.033238 C111.792099,48.01429 115.761022,48.6892564 116.625294,50.9407629 C117.72393,53.8028077 113.174473,58.3219079 107.017635,60.982801 C107.011653,60.9853863 107.00567,60.9879683 106.999688,60.990547 C106.939902,61.0219589 106.879913,61.0439426 106.820031,61.0659514 C106.355389,61.2618887 105.888177,61.4371549 105.421944,61.5929594 C88.3985192,68.1467602 80.3242628,76.9161885 70.3525495,90.6906738 C60.0774843,104.884196 54.9399518,119.643717 54.9399518,134.969238 C54.9399518,138.278158 55.4624127,140.716309 56.5073346,142.283691 C57.2039492,143.328613 57.9876406,143.851074 58.8584088,143.851074 C59.7291771,143.851074 61.0353294,143.241536 62.7768659,142.022461 C68.3497825,138.016927 75.4030052,136.01416 83.9365338,136.01416 C93.8632916,136.01416 102.658051,140.063232 110.320811,148.161377 C117.983572,156.259521 121.814952,165.88151 121.814952,177.027344 C121.814952,188.695638 117.417572,198.970703 108.622813,207.852539 C99.828054,216.734375 89.1611432,221.175293 76.6220807,221.175293 C61.9931745,221.175293 49.3670351,215.166992 38.7436627,203.150391 C28.1202903,191.133789 22.8086041,175.024577 22.8086041,154.822754 C22.8086041,131.312012 30.0359804,110.239421 44.490733,91.6049805 C58.2196377,73.906272 74.3541002,59.8074126 102.443135,50.4450748 C102.615406,50.3748509 102.790055,50.3058192 102.966282,50.2381719 C104.199241,49.7648833 105.420135,49.3936487 106.596148,49.1227802 L107,49 Z M233.000381,49.033238 C237.792099,48.01429 241.761022,48.6892564 242.625294,50.9407629 C243.72393,53.8028077 239.174473,58.3219079 233.017635,60.982801 C233.011653,60.9853863 233.00567,60.9879683 232.999688,60.990547 C232.939902,61.0219589 232.879913,61.0439426 232.820031,61.0659514 C232.355389,61.2618887 231.888177,61.4371549 231.421944,61.5929594 C214.398519,68.1467602 206.324263,76.9161885 196.352549,90.6906738 C186.077484,104.884196 180.939952,119.643717 180.939952,134.969238 C180.939952,138.278158 181.462413,140.716309 182.507335,142.283691 C183.203949,143.328613 183.987641,143.851074 184.858409,143.851074 C185.729177,143.851074 187.035329,143.241536 188.776866,142.022461 C194.349783,138.016927 201.403005,136.01416 209.936534,136.01416 C219.863292,136.01416 228.658051,140.063232 236.320811,148.161377 C243.983572,156.259521 247.814952,165.88151 247.814952,177.027344 C247.814952,188.695638 243.417572,198.970703 234.622813,207.852539 C225.828054,216.734375 215.161143,221.175293 202.622081,221.175293 C187.993174,221.175293 175.367035,215.166992 164.743663,203.150391 C154.12029,191.133789 148.808604,175.024577 148.808604,154.822754 C148.808604,131.312012 156.03598,110.239421 170.490733,91.6049805 C184.219638,73.906272 200.3541,59.8074126 228.443135,50.4450748 C228.615406,50.3748509 228.790055,50.3058192 228.966282,50.2381719 C230.199241,49.7648833 231.420135,49.3936487 232.596148,49.1227802 L233,49 Z"
              fill="#48484A"
              fillRule="nonzero"
              transform="translate(135.311778, 134.872794) scale(-1, -1) translate(-135.311778, -134.872794) "
            />
          </g>
        </MKBox>
      </MKBox>
    </Card>
  );
}

// Setting default values for the props of SimpleReviewCard
SimpleReviewCard.defaultProps = {
  username: "",
};

// Typechecking props for the SimpleReviewCard
SimpleReviewCard.propTypes = {
  image: PropTypes.string.isRequired,
  name: PropTypes.string.isRequired,
  username: PropTypes.string,
  review: PropTypes.string.isRequired,
};

export default SimpleReviewCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/RotatingCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/RotatingCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import { useState } from "react";

// prop-types is a library for typechecking of props.
import PropTypes from "prop-types";

// @mui material components
import Card from "@mui/material/Card";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";

function RotatingCard({ children }) {
  const [rotate, setRotate] = useState(false);

  const rotate0 = () => setRotate(false);
  const rotate180 = () => setRotate(true);

  return (
    <MKBox sx={{ perspective: "50rem" }} onMouseEnter={rotate180} onMouseLeave={rotate0}>
      <Card
        sx={{
          backgroundColor: "transparent",
          boxShadow: "none",
          position: "relative",
          transform: rotate ? "rotateY(180deg)" : "rotateY(0)",
          transformStyle: "preserve-3d",
          transition: "all 0.8s cubic-bezier(0.34, 1.45, 0.7, 1)",
        }}
      >
        {children}
      </Card>
    </MKBox>
  );
}

// Typechecking props for the RotatingCard
RotatingCard.propTypes = {
  children: PropTypes.node.isRequired,
};

export default RotatingCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/RotatingCard/RotatingCardBack.js

Code for file: /prospera-home/homepage/src/components/Cards/RotatingCard/RotatingCardBack.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// prop-types is a library for typechecking of props.
import PropTypes from "prop-types";

// react-router-dom components
import { Link } from "react-router-dom";

// @mui material components
import MuiLink from "@mui/material/Link";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import MKButton from "components/MKButton";

function RotatingCard({ color, image, title, description, action }) {
  return (
    <MKBox
      display="flex"
      justifyContent="center"
      alignItems="center"
      borderRadius="lg"
      coloredShadow={color}
      position="absolute"
      width="100%"
      height="100%"
      top={0}
      left={0}
      zIndex={5}
      sx={{
        backgroundImage: ({ palette: { gradients }, functions: { linearGradient, rgba } }) =>
          `${linearGradient(
            rgba(gradients[color] ? gradients[color].main : gradients.info.main, 0.85),
            rgba(gradients[color] ? gradients[color].main : gradients.info.main, 0.85)
          )}, url(${image})`,
        backgroundSize: "cover",
        backfaceVisibility: "hidden",
        transform: "rotateY(180deg)",
      }}
    >
      <MKBox pt={12} pb={2} px={2} textAlign="center" lineHeight={1}>
        <MKTypography variant="h3" color="white" gutterBottom>
          {title}
        </MKTypography>
        <MKTypography variant="body2" color="white" opacity={0.8}>
          {description}
        </MKTypography>
        {action && (
          <MKBox width="50%" mt={4} mb={2} mx="auto">
            {action.type === "external" ? (
              <MKButton
                component={MuiLink}
                href={action.route}
                target="_blank"
                rel="noreferrer"
                color="white"
                size="small"
                fullWidth
              >
                {action.label}
              </MKButton>
            ) : (
              <MKButton component={Link} to={action.route} color="white" size="small" fullWidth>
                {action.label}
              </MKButton>
            )}
          </MKBox>
        )}
      </MKBox>
    </MKBox>
  );
}

// Setting default props for the RotatingCard
RotatingCard.defaultProps = {
  color: "info",
};

// Typechecking props for the RotatingCard
RotatingCard.propTypes = {
  color: PropTypes.oneOf([
    "primary",
    "secondary",
    "info",
    "success",
    "warning",
    "error",
    "dark",
    "light",
  ]),
  image: PropTypes.string.isRequired,
  title: PropTypes.node.isRequired,
  description: PropTypes.node.isRequired,
  action: PropTypes.oneOfType([
    PropTypes.bool,
    PropTypes.shape({
      type: PropTypes.oneOf(["external", "internal"]).isRequired,
      route: PropTypes.string.isRequired,
      label: PropTypes.string.isRequired,
    }),
  ]).isRequired,
};

export default RotatingCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/RotatingCard/RotatingCardFront.js

Code for file: /prospera-home/homepage/src/components/Cards/RotatingCard/RotatingCardFront.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// prop-types is a library for typechecking of props.
import PropTypes from "prop-types";

// @mui material components
import Icon from "@mui/material/Icon";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

function RotatingCardFront({ color, image, icon, title, description }) {
  return (
    <MKBox
      display="flex"
      justifyContent="center"
      alignContent="center"
      borderRadius="lg"
      coloredShadow={color}
      width="100%"
      position="relative"
      zIndex={2}
      sx={{
        backgroundImage: ({ palette: { gradients }, functions: { linearGradient, rgba } }) =>
          `${linearGradient(
            rgba(gradients[color] ? gradients[color].main : gradients.info.main, 0.85),
            rgba(gradients[color] ? gradients[color].main : gradients.info.main, 0.85)
          )}, url(${image})`,
        backgroundSize: "cover",
        backfaceVisibility: "hidden",
      }}
    >
      <MKBox py={12} px={3} textAlign="center" lineHeight={1}>
        {icon && (
          <MKTypography variant="h2" color="white" my={2}>
            {typeof icon === "string" ? <Icon>{icon}</Icon> : icon}
          </MKTypography>
        )}
        <MKTypography variant="h3" color="white" gutterBottom>
          {title}
        </MKTypography>
        <MKTypography variant="body2" color="white" opacity={0.8}>
          {description}
        </MKTypography>
      </MKBox>
    </MKBox>
  );
}

// Setting default props for the RotatingCardFront
RotatingCardFront.defaultProps = {
  color: "info",
  icon: "",
};

// Typechecking props for the RotatingCardFront
RotatingCardFront.propTypes = {
  color: PropTypes.oneOf([
    "primary",
    "secondary",
    "info",
    "success",
    "warning",
    "error",
    "dark",
    "light",
  ]),
  image: PropTypes.string.isRequired,
  icon: PropTypes.node,
  title: PropTypes.node.isRequired,
  description: PropTypes.node.isRequired,
};

export default RotatingCardFront;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/TeamCards/HorizontalTeamCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/TeamCards/HorizontalTeamCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Card from "@mui/material/Card";
import Grid from "@mui/material/Grid";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

function HorizontalTeamCard({ image, name, position, description }) {
  return (
    <Card sx={{ mt: 3 }}>
      <Grid container>
        <Grid item xs={12} md={6} lg={4} sx={{ mt: -6 }}>
          <MKBox width="100%" pt={2} pb={1} px={2}>
            <MKBox
              component="img"
              src={image}
              alt={name}
              width="100%"
              borderRadius="md"
              shadow="lg"
            />
          </MKBox>
        </Grid>
        <Grid item xs={12} md={6} lg={8} sx={{ my: "auto" }}>
          <MKBox pt={{ xs: 1, lg: 2.5 }} pb={2.5} pr={4} pl={{ xs: 4, lg: 1 }} lineHeight={1}>
            <MKTypography variant="h5">{name}</MKTypography>
            <MKTypography variant="h6" color={position.color} mb={1}>
              {position.label}
            </MKTypography>
            <MKTypography variant="body2" color="text">
              {description}
            </MKTypography>
          </MKBox>
        </Grid>
      </Grid>
    </Card>
  );
}

// Typechecking props for the HorizontalTeamCard
HorizontalTeamCard.propTypes = {
  image: PropTypes.string.isRequired,
  name: PropTypes.string.isRequired,
  position: PropTypes.shape({
    color: PropTypes.oneOf([
      "primary",
      "secondary",
      "info",
      "success",
      "warning",
      "error",
      "dark",
      "light",
    ]),
    label: PropTypes.string.isRequired,
  }).isRequired,
  description: PropTypes.string.isRequired,
};

export default HorizontalTeamCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Cards/TeamCards/TransparentTeamCard/index.js

Code for file: /prospera-home/homepage/src/components/Cards/TeamCards/TransparentTeamCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Stack from "@mui/material/Stack";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKAvatar from "components/MKAvatar";
import MKTypography from "components/MKTypography";

function TransparentTeamCard({ image, name, position, description, socials }) {
  return (
    <MKBox display="flex" flexDirection="column">
      <MKBox position="relative" width="max-content">
        <MKAvatar
          variant="rounded"
          size="xxl"
          src={image}
          alt={name}
          sx={{
            borderRadius: ({ borders: { borderRadius } }) => borderRadius.xl,
            position: "relative",
            zIndex: 2,
          }}
        />
        <MKBox
          borderRadius="lg"
          shadow="md"
          width="100%"
          height="100%"
          position="absolute"
          left={0}
          top="3%"
          zIndex={1}
          sx={{
            backgroundImage: `url(${image})`,
            transform: "scale(0.87)",
            filter: "blur(12px)",
            backgroundSize: "cover",
          }}
        />
      </MKBox>
      <MKBox py={2}>
        <MKTypography variant="h5">{name}</MKTypography>
        <MKTypography variant="body2" color="text" mb={2}>
          {position}
        </MKTypography>
        <MKTypography variant="body2" color="text" mb={2}>
          {description}
        </MKTypography>
        <Stack direction="row" spacing={4} mt={3}>
          {socials}
        </Stack>
      </MKBox>
    </MKBox>
  );
}

// Setting default props for the TransparentTeamCard
TransparentTeamCard.defaultProps = {
  description: "",
  socials: "",
};

// Typechecking props for the TransparentTeamCard
TransparentTeamCard.propTypes = {
  image: PropTypes.string.isRequired,
  name: PropTypes.string.isRequired,
  position: PropTypes.string.isRequired,
  description: PropTypes.string,
  socials: PropTypes.node,
};

export default TransparentTeamCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/components/Tables/Table/index.js

Code for file: /prospera-home/homepage/src/components/Tables/Table/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import { useMemo } from "react";

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// uuid is a library for generating unique id
import { v4 as uuidv4 } from "uuid";

// @mui material components
import MuiTable from "@mui/material/Table";
import TableBody from "@mui/material/TableBody";
import TableContainer from "@mui/material/TableContainer";
import TableRow from "@mui/material/TableRow";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKAvatar from "components/MKAvatar";
import MKTypography from "components/MKTypography";

function Table({ columns, rows }) {
  const renderColumns = columns.map(({ name, align, width }, key) => {
    let pl;
    let pr;

    if (key === 0) {
      pl = 3;
      pr = 3;
    } else if (key === columns.length - 1) {
      pl = 3;
      pr = 3;
    } else {
      pl = 1;
      pr = 1;
    }

    return (
      <MKBox
        key={name}
        component="th"
        width={width || "auto"}
        pt={1.5}
        pb={1.25}
        pl={align === "left" ? pl : 3}
        pr={align === "right" ? pr : 3}
        textAlign={align}
        color="secondary"
        opacity={0.7}
        sx={({ typography: { size, fontWeightBold }, borders: { borderWidth, borderColor } }) => ({
          fontSize: size.xxs,
          fontWeight: fontWeightBold,
          borderBottom: `${borderWidth[1]} solid ${borderColor}`,
        })}
      >
        {name.toUpperCase()}
      </MKBox>
    );
  });

  const renderRows = rows.map((row, key) => {
    const rowKey = `row-${key}`;

    const tableRow = columns.map(({ name, align }) => {
      let template;

      if (Array.isArray(row[name])) {
        template = (
          <MKBox
            key={uuidv4()}
            component="td"
            p={1}
            sx={({ borders: { borderWidth, borderColor } }) => ({
              borderBottom: row.hasBorder ? `${borderWidth[1]} solid ${borderColor}` : 0,
            })}
          >
            <MKBox display="flex" alignItems="center" py={0.5} px={1}>
              <MKBox mr={2}>
                <MKAvatar src={row[name][0]} name={row[name][1]} variant="rounded" size="sm" />
              </MKBox>
              <MKTypography variant="button" fontWeight="medium" sx={{ width: "max-content" }}>
                {row[name][1]}
              </MKTypography>
            </MKBox>
          </MKBox>
        );
      } else {
        template = (
          <MKBox
            key={uuidv4()}
            component="td"
            p={1}
            textAlign={align}
            sx={({ borders: { borderWidth, borderColor } }) => ({
              borderBottom: row.hasBorder ? `${borderWidth[1]} solid ${borderColor}` : 0,
            })}
          >
            <MKTypography
              variant="button"
              fontWeight="regular"
              color="secondary"
              sx={{ display: "inline-block", width: "max-content" }}
            >
              {row[name]}
            </MKTypography>
          </MKBox>
        );
      }

      return template;
    });

    return <TableRow key={rowKey}>{tableRow}</TableRow>;
  });

  return useMemo(
    () => (
      <TableContainer>
        <MuiTable>
          <MKBox component="thead">
            <TableRow>{renderColumns}</TableRow>
          </MKBox>
          <TableBody>{renderRows}</TableBody>
        </MuiTable>
      </TableContainer>
    ),
    [columns, rows]
  );
}

// Setting default values for the props of Table
Table.defaultProps = {
  columns: [],
  rows: [{}],
};

// Typechecking props for the Table
Table.propTypes = {
  columns: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object])),
  rows: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object])),
};

export default Table;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/contexts/AuthContext/index.js

Code for File:

```
import React, { createContext, useState, useEffect, useCallback } from "react";
import axios from "axios";
import PropTypes from "prop-types";
import config from "../../config";

export const AuthContext = createContext();

const API_URL = config.apiUrl;

export const AuthProvider = ({ children }) => {
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [isInitialized, setIsInitialized] = useState(false);
  const [isLoading, setIsLoading] = useState(true);

  const setAuthToken = useCallback((token) => {
    if (token) {
      axios.defaults.headers.common["Authorization"] = `Bearer ${token}`;
      document.cookie = `token=${token}; domain=.prosperadefi.com; path=/; max-age=${
        60 * 60 * 24 * 7
      }; secure; samesite=strict`;
      localStorage.setItem("token", token);
    } else {
      delete axios.defaults.headers.common["Authorization"];
      document.cookie =
        "token=; domain=.prosperadefi.com; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT";
      localStorage.removeItem("token");
    }
  }, []);

  const checkAuth = useCallback(async () => {
    setLoading(true);
    const token = localStorage.getItem("token");
    if (token) {
      setAuthToken(token);
      try {
        const response = await axios.get(`${API_URL}/api/auth/check`, {
          withCredentials: true,
        });
        const userData = response.data.user;
        setUser(userData);
        localStorage.setItem("user", JSON.stringify(userData));
        console.log("User authenticated:", userData);
      } catch (error) {
        console.error("Authentication check failed:", error);
        setError(error);
        setAuthToken(null);
        setUser(null);
        localStorage.removeItem("user");
        localStorage.removeItem("token");
      }
    } else {
      setUser(null);
      localStorage.removeItem("user");
    }
    setLoading(false);
    setIsInitialized(true);
  }, [setAuthToken]);

  useEffect(() => {
    const initAuth = async () => {
      setIsLoading(true);
      await checkAuth();
      setIsLoading(false);
    };
    initAuth();
  }, [checkAuth]);

  const login = async (emailOrUsername, password) => {
    try {
      console.log("Login attempt. Payload:", { emailOrUsername, password: "REDACTED" });
      const response = await axios.post(
        `${API_URL}/api/auth/login`,
        {
          data: {
            attributes: {
              emailOrUsername,
              password,
            },
          },
        },
        { withCredentials: true }
      );
      console.log("Login response:", JSON.stringify(response.data, null, 2));
      const { user: userData, token } = response.data;
      setAuthToken(token);
      setUser(userData);
      localStorage.setItem("user", JSON.stringify(userData));
      localStorage.setItem("token", token);
      console.log("User logged in:", userData);
      return response.data;
    } catch (error) {
      console.error("Login failed:", error);
      if (error.response) {
        console.error("Error response:", JSON.stringify(error.response.data, null, 2));
      }
      throw error;
    }
  };

  const register = async (userData) => {
    try {
      const response = await axios.post(
        `${API_URL}/api/auth/register`,
        {
          data: {
            attributes: userData,
          },
        },
        { withCredentials: true }
      );
      const { user: registeredUser, token } = response.data;
      setAuthToken(token);
      setUser(registeredUser);
      localStorage.setItem("user", JSON.stringify(registeredUser));
      localStorage.setItem("token", token);
      console.log("User registered:", registeredUser);
      return response.data;
    } catch (error) {
      console.error("Registration failed:", error);
      if (error.response) {
        console.error("Error response:", error.response.data);
        console.error("Error status:", error.response.status);
        console.error("Error headers:", error.response.headers);
      } else if (error.request) {
        console.error("No response received:", error.request);
      } else {
        console.error("Error setting up request:", error.message);
      }
      throw error;
    }
  };

  const logout = async () => {
    try {
      await axios.post(`${API_URL}/api/auth/logout`, {}, { withCredentials: true });
      setUser(null);
      setAuthToken(null);
      localStorage.removeItem("user");
      localStorage.removeItem("token");
      console.log("User logged out");
    } catch (error) {
      console.error("Logout failed:", error);
      throw error;
    }
  };

  const value = {
    user,
    loading,
    error,
    isInitialized,
    isLoading,
    login,
    logout,
    register,
    checkAuth,
  };

  if (!isInitialized) {
    return null; // or a loading spinner
  }

  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;
};

AuthProvider.propTypes = {
  children: PropTypes.node.isRequired,
};

export default AuthProvider;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/contexts/BetaContext/index.js

Code for file:

```
import React, { createContext, useState, useEffect, useContext } from "react";
import PropTypes from "prop-types";
import { checkTokenHolding, getTokenBalance } from "../../services/tokenService";
import { AuthContext } from "../AuthContext";
import axios from "axios";

export const BetaContext = createContext();

export const BetaProvider = ({ children }) => {
  const [isBetaMode, setIsBetaMode] = useState(true);
  const [isWhitelisted, setIsWhitelisted] = useState(false);
  const [hasRequestedWhitelist, setHasRequestedWhitelist] = useState(false);
  const [hasFullAccess, setHasFullAccess] = useState(false);
  const { user } = useContext(AuthContext);

  useEffect(() => {
    if (user) {
      checkWhitelistStatus();
      checkFullAccess();
    }
  }, [user]);

  const checkWhitelistStatus = async () => {
    try {
      const response = await axios.get(`/api/users/${user.id}/whitelist-status`);
      setIsWhitelisted(response.data.isWhitelisted);
      setHasRequestedWhitelist(response.data.hasRequestedWhitelist);
    } catch (error) {
      console.error("Error checking whitelist status:", error);
    }
  };

  const checkFullAccess = () => {
    const fullAccessRoles = ["admin", "co-admin", "prosperaTeam", "kol"];
    setHasFullAccess(fullAccessRoles.includes(user.role) || isWhitelisted);
  };

  const requestWhitelist = async (arbitrumWallet) => {
    try {
      const holdsSufficientPROS = await checkTokenHolding(arbitrumWallet);
      if (holdsSufficientPROS) {
        const response = await axios.post(`/api/users/${user.id}/request-whitelist`, {
          arbitrumWallet,
        });
        setHasRequestedWhitelist(true);
        alert(response.data.message);
      } else {
        const balance = await getTokenBalance(arbitrumWallet);
        alert(
          `To be considered for whitelisting, you must hold at least 5000 $PROS tokens. Your current balance is ${balance} $PROS. Please visit https://www.prosperaico.com to purchase more $PROS tokens and then come back to re-submit for whitelisting.`
        );
      }
    } catch (error) {
      console.error("Error requesting whitelist:", error);
      alert("An error occurred while processing your request. Please try again later.");
    }
  };

  const toggleBetaMode = async (value) => {
    try {
      await axios.post("/api/admin/toggle-beta-mode", { isBetaMode: value });
      setIsBetaMode(value);
    } catch (error) {
      console.error("Error toggling beta mode:", error);
      alert("An error occurred while toggling beta mode. Please try again later.");
    }
  };

  return (
    <BetaContext.Provider
      value={{
        isBetaMode,
        isWhitelisted,
        hasRequestedWhitelist,
        hasFullAccess,
        requestWhitelist,
        toggleBetaMode,
      }}
    >
      {children}
    </BetaContext.Provider>
  );
};

BetaProvider.propTypes = {
  children: PropTypes.node.isRequired,
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/contexts/WalletContext/index.js

Code for file:

```
import React, { createContext, useState } from "react";
import PropTypes from "prop-types";
import Web3 from "web3";

export const WalletContext = createContext();

export const WalletProvider = ({ children }) => {
  const [wallet, setWallet] = useState(null);

  const connectWallet = async () => {
    if (window.ethereum) {
      try {
        await window.ethereum.request({ method: "eth_requestAccounts" });
        const web3 = new Web3(window.ethereum);
        const accounts = await web3.eth.getAccounts();
        setWallet({ address: accounts[0], web3 });
      } catch (error) {
        console.error("Failed to connect wallet:", error);
      }
    } else {
      console.error("Ethereum object not found, install MetaMask.");
    }
  };

  const disconnectWallet = () => {
    setWallet(null);
  };

  return (
    <WalletContext.Provider value={{ wallet, connectWallet, disconnectWallet }}>
      {children}
    </WalletContext.Provider>
  );
};

WalletProvider.propTypes = {
  children: PropTypes.node.isRequired,
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/AugmentedReality/components/DashboardBar/index.js

Code for file: /prospera-home/homepage/src/pages/AugmentedReality/components/DashboardBar/index.js

```
import React, { useEffect, useState } from "react";
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import { styled } from "@mui/material/styles";
import WeatherForecast from "../WeatherForecast"; // Correct path to WeatherForecast

// Apply the frosted glass color settings from WelcomeMessage
const FrostedGlassBar = styled(MKBox)({
  display: "flex",
  justifyContent: "space-between",
  alignItems: "center",
  padding: "12px 24px",
  boxShadow:
    "0 0.3px 0.7px rgba(0, 0, 0, 0.126), 0 0.9px 1.7px rgba(0, 0, 0, 0.179), 0 1.8px 3.5px rgba(0, 0, 0, 0.224), 0 3.7px 7.3px rgba(0, 0, 0, 0.277), 0 10px 20px rgba(0, 0, 0, 0.4)",
  backdropFilter: "blur(20px)",
  borderRadius: "10px",
  transition: "0.3s ease",
  position: "absolute",
  top: "50%",
  left: "50%",
  transform: "translate(-50%, -50%)", // Center horizontally and vertically
  zIndex: 1000,
  width: "100vw",
  maxWidth: "100%",
  background: "rgba(255, 255, 255, 0.1)", // Adjusted to match the WelcomeMessage
  color: "white",
  "&:hover": {
    boxShadow:
      "0 0.7px 1px rgba(0, 0, 0, 0.157), 0 1.7px 2.6px rgba(0, 0, 0, 0.224), 0 3.5px 5.3px rgba(0, 0, 0, 0.28), 0 7.3px 11px rgba(0, 0, 0, 0.346), 0 20px 30px rgba(0, 0, 0, 0.5)",
    transform: "translate(-50%, -50%)",
  },
});

// Larger Clock Circle with matching frosted glass color settings
const ClockCircle = styled(MKBox)({
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  width: "300px", // Size for a clean look
  height: "300px", // Match the width for a perfect circle
  borderRadius: "50%",
  background: "rgba(255, 255, 255, 0.1)", // Matching the WelcomeMessage background
  backdropFilter: "blur(20px)",
  boxShadow:
    "0 0.3px 0.7px rgba(0, 0, 0, 0.126), 0 0.9px 1.7px rgba(0, 0, 0, 0.179), 0 1.8px 3.5px rgba(0, 0, 0, 0.224), 0 3.7px 7.3px rgba(0, 0, 0, 0.277), 0 10px 20px rgba(0, 0, 0, 0.4)",
  position: "absolute",
  top: "50%", // Center vertically within the bar
  left: "50%",
  transform: "translate(-50%, -50%)",
  zIndex: 1100,
});

const GlassmorphicClock = styled(MKBox)({
  display: "flex",
  flexDirection: "column",
  justifyContent: "center",
  alignItems: "center",
  width: "100%",
  height: "100%",
  color: "rgba(255, 255, 255, 0.9)",
  fontFamily: "Helvetica Monospaced, sans-serif",
  fontWeight: 200,
  fontSize: "2em",
  textAlign: "center",
  textShadow: "0px 0px 10px rgba(255, 255, 255, 0.5)",
});

const DashboardBar = () => {
  const [time, setTime] = useState(new Date());

  useEffect(() => {
    const intervalId = setInterval(() => {
      setTime(new Date());
    }, 1000); // Update every second

    return () => clearInterval(intervalId);
  }, []);

  const formattedTime = time.toLocaleTimeString([], {
    hour: "2-digit",
    minute: "2-digit",
    second: "2-digit",
  });
  const formattedDate = time.toLocaleDateString([], {
    weekday: "long",
    day: "numeric",
    month: "long",
  });

  return (
    <FrostedGlassBar>
      {/* Left Side: System Usage */}
      <MKBox display="flex" flexDirection="column" alignItems="flex-start">
        <MKTypography
          variant="body2"
          sx={{ color: "white", fontFamily: "Helvetica Monospaced, sans-serif" }}
        >
          CPU Usage: 4%
        </MKTypography>
        <MKTypography
          variant="body2"
          sx={{ color: "white", fontFamily: "Helvetica Monospaced, sans-serif" }}
        >
          RAM Usage: 43%
        </MKTypography>
        <MKTypography
          variant="body2"
          sx={{ color: "white", fontFamily: "Helvetica Monospaced, sans-serif" }}
        >
          Virtual Memory Usage: 24%
        </MKTypography>
      </MKBox>

      {/* Center: Glassmorphic Clock */}
      <ClockCircle>
        <GlassmorphicClock>
          <MKTypography variant="h5" sx={{ marginBottom: "8px" }}>
            {formattedDate}
          </MKTypography>
          <MKTypography variant="h3">{formattedTime}</MKTypography>
        </GlassmorphicClock>
      </ClockCircle>

      {/* Right Side: Current Weather */}
      <WeatherForecast />
    </FrostedGlassBar>
  );
};

export default DashboardBar;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/AugmentedReality/components/Desktop/index.js

Code for file: /prospera-home/homepage/src/pages/AugmentedReality/components/Desktop/index.js

```
import React from "react";
import { Box } from "@mui/material";
import { styled } from "@mui/material/styles";
import PropTypes from "prop-types";
import bgImage from "assets/images/backgrounds/Games/Firewatch/Firewatch1.jpeg";

const DesktopContainer = styled(Box)({
  height: "100vh",
  width: "100vw",
  backgroundImage: `url(${bgImage})`,
  backgroundSize: "cover",
  backgroundPosition: "center",
  backgroundRepeat: "no-repeat",
  overflow: "hidden",
  position: "relative",
});

const Desktop = ({ children }) => {
  return <DesktopContainer>{children}</DesktopContainer>;
};

export default Desktop;

Desktop.propTypes = {
  children: PropTypes.node.isRequired,
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/AugmentedReality/components/Emails/index.js

Code for file: /prospera-home/homepage/src/pages/AugmentedReality/components/Emails/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// @mui material components
import Card from "@mui/material/Card";
import Tooltip from "@mui/material/Tooltip";

// PROSPERA DEFI PLATFORM React components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

function Emails() {
  return (
    <Card>
      <MKBox display="flex" justifyContent="space-between" p={3} lineHeight={1}>
        <MKTypography variant="body2" color="text">
          Emails (21)
        </MKTypography>
        <Tooltip title="Check your emails" placement="top">
          <MKBox component="a" href="#">
            <MKTypography variant="body2" fontWeight="regular">
              Check
            </MKTypography>
          </MKBox>
        </Tooltip>
      </MKBox>
    </Card>
  );
}

export default Emails;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/AugmentedReality/components/MediaPlayer/index.js

Code for file: /prospera-home/homepage/src/pages/AugmentedReality/components/MediaPlayer/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// @mui material components
import Card from "@mui/material/Card";
import Icon from "@mui/material/Icon";
import Tooltip from "@mui/material/Tooltip";

// PROSPERA DEFI PLATFORM React components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import MKButton from "components/MKButton";

function MediaPlayer() {
  const bgImage =
    "https://images.unsplash.com/photo-1470813740244-df37b8c1edcb?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&q=80";

  const mediaPlayerButtonStyles = ({ functions: { pxToRem } }) => ({
    width: pxToRem(46),
    height: pxToRem(46),
    minWidth: pxToRem(46),
    minHeight: pxToRem(46),
    mr: 1,
  });

  return (
    <Card
      sx={({ functions: { linearGradient, rgba }, palette: { gradients } }) => ({
        backgroundImage: `${linearGradient(
          rgba(gradients.dark.main, 0.85),
          rgba(gradients.dark.state, 0.85)
        )}, url(${bgImage})`,
        backgroundSize: "cover",
        backgroundPosition: "center",
      })}
    >
      <MKBox p={3} position="relative" lineHeight={0}>
        <MKTypography variant="h5" color="white" fontWeight="medium">
          Some Kind Of Blues
        </MKTypography>
        <MKTypography variant="button" color="white" fontWeight="regular">
          Deftones
        </MKTypography>
        <MKBox display="flex" mt={6} pt={1}>
          <MKBox display="flex" alignItems="center" justifyContent="center">
            <Tooltip title="Prev" placement="top">
              <MKButton
                variant="outlined"
                size="large"
                circular
                iconOnly
                sx={mediaPlayerButtonStyles}
              >
                <Icon>skip_previous</Icon>
              </MKButton>
            </Tooltip>
            <Tooltip title="Pause" placement="top">
              <MKButton
                variant="outlined"
                size="large"
                circular
                iconOnly
                sx={mediaPlayerButtonStyles}
              >
                <Icon>play_arrow</Icon>
              </MKButton>
            </Tooltip>
            <Tooltip title="Next" placement="top">
              <MKButton
                variant="outlined"
                size="large"
                circular
                iconOnly
                sx={mediaPlayerButtonStyles}
              >
                <Icon>skip_next</Icon>
              </MKButton>
            </Tooltip>
          </MKBox>
        </MKBox>
      </MKBox>
    </Card>
  );
}

export default MediaPlayer;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/AugmentedReality/components/Messages/ChatInterface.js

Code for file: /prospera-home/homepage/src/pages/AugmentedReality/components/Messages/ChatInterface.js

```
import React, { useState, useEffect, useRef } from "react";
import { Box, TextField, Button } from "@mui/material";
import { styled } from "@mui/material/styles";
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import SendIcon from "@mui/icons-material/Send";
import PropTypes from "prop-types";

const ChatContainer = styled(Box)(({ theme }) => ({
  display: "flex",
  flexDirection: "column",
  height: "100%",
  background: "rgba(0, 0, 0, 0.7)",
  borderRadius: theme.shape.borderRadius,
  overflow: "hidden",
}));

const MessageList = styled(Box)({
  flexGrow: 1,
  overflowY: "auto",
  padding: "16px",
});

const MessageBubble = styled(Box)(({ theme, isOwnMessage }) => ({
  maxWidth: "70%",
  padding: "8px 12px",
  borderRadius: "12px",
  marginBottom: "8px",
  wordWrap: "break-word",
  color: theme.palette.text.primary,
  backgroundColor: isOwnMessage ? "#01ff02" : theme.palette.background.paper,
  alignSelf: isOwnMessage ? "flex-end" : "flex-start",
}));

const InputArea = styled(Box)(({ theme }) => ({
  display: "flex",
  padding: "16px",
  borderTop: `1px solid ${theme.palette.divider}`,
}));

const StyledTextField = styled(TextField)(({ theme }) => ({
  flexGrow: 1,
  marginRight: "16px",
  "& .MuiInputBase-input": {
    color: theme.palette.text.primary,
  },
  "& .MuiOutlinedInput-root": {
    "& fieldset": {
      borderColor: "#01ff02",
    },
    "&:hover fieldset": {
      borderColor: "#01ff02",
    },
    "&.Mui-focused fieldset": {
      borderColor: "#01ff02",
    },
  },
}));

const SendButton = styled(Button)(({ theme }) => ({
  background: "#01ff02",
  color: theme.palette.text.primary,
  "&:hover": {
    background: "#00cc00",
  },
}));

function ChatInterface({ socket }) {
  const [messages, setMessages] = useState([]);
  const [inputMessage, setInputMessage] = useState("");
  const messageListRef = useRef(null);

  useEffect(() => {
    if (socket) {
      socket.on("message", (message) => {
        setMessages((prevMessages) => [...prevMessages, message]);
      });
    }
  }, [socket]);

  useEffect(() => {
    if (messageListRef.current) {
      messageListRef.current.scrollTop = messageListRef.current.scrollHeight;
    }
  }, [messages]);

  const handleSendMessage = () => {
    if (inputMessage.trim() !== "" && socket) {
      const newMessage = {
        text: inputMessage,
        sender: socket.id,
        timestamp: new Date().toISOString(),
      };
      socket.emit("sendMessage", newMessage);
      setInputMessage("");
    }
  };

  return (
    <ChatContainer>
      <MessageList ref={messageListRef}>
        {messages.map((message, index) => (
          <MKBox
            key={index}
            display="flex"
            flexDirection="column"
            alignItems={message.sender === socket?.id ? "flex-end" : "flex-start"}
          >
            <MessageBubble isOwnMessage={message.sender === socket?.id}>
              <MKTypography variant="body2">{message.text}</MKTypography>
            </MessageBubble>
            <MKTypography variant="caption" color="text.secondary">
              {new Date(message.timestamp).toLocaleTimeString()}
            </MKTypography>
          </MKBox>
        ))}
      </MessageList>
      <InputArea>
        <StyledTextField
          fullWidth
          variant="outlined"
          placeholder="Type a message..."
          value={inputMessage}
          onChange={(e) => setInputMessage(e.target.value)}
          onKeyPress={(e) => e.key === "Enter" && handleSendMessage()}
        />
        <SendButton variant="contained" onClick={handleSendMessage}>
          <SendIcon />
        </SendButton>
      </InputArea>
    </ChatContainer>
  );
}

ChatInterface.propTypes = {
  socket: PropTypes.shape({
    on: PropTypes.func,
    emit: PropTypes.func,
    id: PropTypes.string,
  }),
};

export default ChatInterface;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/AugmentedReality/components/Messages/index.js
 
Code for file: /prospera-home/homepage/src/pages/AugmentedReality/components/Messages/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import React, { useState, useEffect } from "react";
import { Box } from "@mui/material";
import { styled } from "@mui/material/styles";
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import ChatInterface from "./ChatInterface";
import Window from "pages/AugmentedReality/components/Window";
import io from "socket.io-client";
import PropTypes from "prop-types";

const MessagesHeader = styled(Box)(({ theme }) => ({
  display: "flex",
  justifyContent: "space-between",
  alignItems: "center",
  padding: theme.spacing(2),
  borderBottom: `1px solid ${theme.palette.divider}`,
}));

function Messages({ onClose, initialPosition }) {
  const [socket, setSocket] = useState(null);
  const [error, setError] = useState(null);

  useEffect(() => {
    const socketUrl = process.env.REACT_APP_API_URL || "http://localhost:8080";
    console.log("Attempting to connect to socket at:", socketUrl);

    const newSocket = io(socketUrl, {
      transports: ["websocket"],
      reconnection: true,
      reconnectionAttempts: 5,
      reconnectionDelay: 1000,
    });

    newSocket.on("connect", () => {
      console.log("Socket connected successfully");
      setSocket(newSocket);
      setError(null);
    });

    newSocket.on("connect_error", (err) => {
      console.error("Socket connection error:", err);
      setError("Failed to connect to chat server");
    });

    return () => {
      console.log("Cleaning up socket connection");
      newSocket.close();
    };
  }, []);

  return (
    <Window title="PROSPERA Chat" onClose={onClose} initialPosition={initialPosition}>
      <MKBox sx={{ width: "100%", height: "100%", display: "flex", flexDirection: "column" }}>
        <MessagesHeader>
          <MKTypography variant="h6" color="text">
            PROSPERA Chat
          </MKTypography>
        </MessagesHeader>
        <MKBox flexGrow={1} overflow="auto" p={3}>
          {error ? (
            <MKTypography color="error">{error}</MKTypography>
          ) : socket ? (
            <ChatInterface socket={socket} />
          ) : (
            <MKTypography>Connecting to chat server...</MKTypography>
          )}
        </MKBox>
      </MKBox>
    </Window>
  );
}

Messages.propTypes = {
  onClose: PropTypes.func.isRequired,
  initialPosition: PropTypes.shape({
    x: PropTypes.number,
    y: PropTypes.number,
  }),
};

export default Messages;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/AugmentedReality/components/Navbar/index.js

Code for file: /prospera-home/homepage/src/pages/AugmentedReality/components/Navbar/index.js

```
import React from "react";
import { Box, IconButton, Tooltip } from "@mui/material";
import { styled } from "@mui/material/styles";
import FormatListBulletedIcon from "@mui/icons-material/FormatListBulleted";
import AssignmentIcon from "@mui/icons-material/Assignment";
import SmartToyIcon from "@mui/icons-material/SmartToy";
import ChatIcon from "@mui/icons-material/Chat";
import MusicNoteIcon from "@mui/icons-material/MusicNote";
import EmailIcon from "@mui/icons-material/Email";
import DashboardIcon from "@mui/icons-material/Dashboard";
import PropTypes from "prop-types";

const NavbarContainer = styled(Box)(({ theme }) => ({
  position: "fixed",
  bottom: theme.spacing(2),
  left: "50%",
  transform: "translateX(-50%)",
  display: "flex",
  backgroundColor: "rgba(255, 255, 255, 0.1)",
  backdropFilter: "blur(10px)",
  borderRadius: theme.shape.borderRadius * 2,
  padding: theme.spacing(1),
  boxShadow: theme.shadows[10],
  zIndex: 1000,
}));

const NavItem = styled(IconButton)(({ theme }) => ({
  color: theme.palette.common.white,
  "&:hover": {
    backgroundColor: "rgba(255, 255, 255, 0.1)",
  },
}));

const Navbar = ({
  onItemClick,
  onDashboardClick,
  minimizedWindows,
  onRobotToggle,
  isRobotVisible,
}) => {
  return (
    <NavbarContainer>
      <Tooltip title="To-Do List">
        <NavItem onClick={() => onItemClick("todoList")}>
          <FormatListBulletedIcon
            color={minimizedWindows.includes("todoList") ? "primary" : "inherit"}
          />
        </NavItem>
      </Tooltip>
      <Tooltip title="To-Do Card">
        <NavItem onClick={() => onItemClick("todoCard")}>
          <AssignmentIcon color={minimizedWindows.includes("todoCard") ? "primary" : "inherit"} />
        </NavItem>
      </Tooltip>
      <Tooltip title={isRobotVisible ? "Hide OmniRobot" : "Show OmniRobot"}>
        <NavItem onClick={onRobotToggle}>
          <SmartToyIcon color={isRobotVisible ? "primary" : "inherit"} />
        </NavItem>
      </Tooltip>
      <Tooltip title="Chat">
        <NavItem onClick={() => onItemClick("chat")}>
          <ChatIcon color={minimizedWindows.includes("chat") ? "primary" : "inherit"} />
        </NavItem>
      </Tooltip>
      <Tooltip title="Media Player">
        <NavItem onClick={() => onItemClick("mediaPlayer")}>
          <MusicNoteIcon color={minimizedWindows.includes("mediaPlayer") ? "primary" : "inherit"} />
        </NavItem>
      </Tooltip>
      <Tooltip title="Emails">
        <NavItem onClick={() => onItemClick("emails")}>
          <EmailIcon color={minimizedWindows.includes("emails") ? "primary" : "inherit"} />
        </NavItem>
      </Tooltip>
      <Tooltip title="Dashboard">
        <NavItem onClick={onDashboardClick}>
          <DashboardIcon />
        </NavItem>
      </Tooltip>
    </NavbarContainer>
  );
};

Navbar.propTypes = {
  onItemClick: PropTypes.func.isRequired,
  onDashboardClick: PropTypes.func.isRequired,
  minimizedWindows: PropTypes.arrayOf(PropTypes.string).isRequired,
  onRobotToggle: PropTypes.func.isRequired,
  isRobotVisible: PropTypes.bool.isRequired,
};

export default Navbar;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/AugmentedReality/components/omnRobot/OmniRobot.js

Code for file: /prospera-home/homepage/src/pages/AugmentedReality/components/omnRobot/OmniRobot.js

```
import React, { createContext, useState } from "react";
import React, { useEffect, useRef, useCallback } from "react";
import * as THREE from "three";
import { gsap } from "gsap";
import { DragControls } from "three/examples/jsm/controls/DragControls";
import PropTypes from "prop-types";

const OmniRobot = ({ onPositionChange }) => {
  const mountRef = useRef(null);
  const sceneRef = useRef(null);
  const cameraRef = useRef(null);
  const rendererRef = useRef(null);
  const robotRef = useRef(null);
  const clockRef = useRef(new THREE.Clock());
  const mixerRef = useRef(null);
  const dragControlsRef = useRef(null);
  const animationFrameId = useRef(null);
  const isDragging = useRef(false);
  const particleSystemRef = useRef(null);

  const initializeScene = useCallback(() => {
    const containerWidth = window.innerWidth / 2;
    const containerHeight = window.innerHeight / 2;

    sceneRef.current = new THREE.Scene();
    cameraRef.current = new THREE.PerspectiveCamera(
      75,
      containerWidth / containerHeight,
      0.1,
      1000
    );
    rendererRef.current = new THREE.WebGLRenderer({ antialias: true, alpha: true });
    rendererRef.current.setSize(containerWidth, containerHeight);
    rendererRef.current.setPixelRatio(window.devicePixelRatio);
    mountRef.current.appendChild(rendererRef.current.domElement);

    const ambientLight = new THREE.AmbientLight(0x404040);
    sceneRef.current.add(ambientLight);

    const pointLight = new THREE.PointLight(0x00ffff, 1, 100);
    pointLight.position.set(0, 10, 10);
    sceneRef.current.add(pointLight);

    robotRef.current = new THREE.Group();
    sceneRef.current.add(robotRef.current);
    robotRef.current.scale.set(0.5, 0.5, 0.5);

    cameraRef.current.position.z = 2.5;

    mixerRef.current = new THREE.AnimationMixer(robotRef.current);

    dragControlsRef.current = new DragControls(
      [robotRef.current],
      cameraRef.current,
      rendererRef.current.domElement
    );
    dragControlsRef.current.addEventListener("dragstart", () => {
      isDragging.current = true;
      robotRef.current.position.z = 0;
    });
    dragControlsRef.current.addEventListener("drag", (event) => {
      updateParticleSystem(event.object.position);
    });
    dragControlsRef.current.addEventListener("dragend", () => {
      isDragging.current = false;
      onPositionChange(robotRef.current.position);
    });

    createRobotParts();
  }, [onPositionChange]);

  const createRobotParts = useCallback(() => {
    const quantumCore = createQuantumCore();
    robotRef.current.add(quantumCore);

    const nanoSurface = createNanoSurface();
    robotRef.current.add(nanoSurface);

    const dataField = createDataField();
    robotRef.current.add(dataField);

    const energyConduits = createEnergyConduits();
    robotRef.current.add(energyConduits);

    const temporalDistortion = createTemporalDistortion();
    sceneRef.current.add(temporalDistortion);

    const aiSynapses = createAISynapses();
    robotRef.current.add(aiSynapses);

    const dimensionalPhasing = createDimensionalPhasing();
    robotRef.current.add(dimensionalPhasing);

    const thoughtParticles = createThoughtParticles();
    robotRef.current.add(thoughtParticles);

    particleSystemRef.current = createParticleSystem();
    sceneRef.current.add(particleSystemRef.current);
  }, []);

  const createQuantumCore = () => {
    const geometry = new THREE.IcosahedronGeometry(0.5, 4);
    const material = new THREE.ShaderMaterial({
      uniforms: {
        time: { value: 0 },
      },
      vertexShader: `
        varying vec3 vNormal;
        varying vec3 vPosition;

        void main() {
          vNormal = normal;
          vPosition = position;
          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
        }
      `,
      fragmentShader: `
        uniform float time;
        varying vec3 vNormal;
        varying vec3 vPosition;

        void main() {
          vec3 color1 = vec3(0.0, 1.0, 1.0);
          vec3 color2 = vec3(1.0, 0.0, 1.0);
          vec3 color = mix(color1, color2, sin(vPosition.x * 10.0 + time) * 0.5 + 0.5);

          float intensity = sin(vPosition.x * 20.0 + time * 2.0) * 
                            sin(vPosition.y * 20.0 + time * 3.0) * 
                            sin(vPosition.z * 20.0 + time * 4.0);
          intensity = pow(0.5 + 0.5 * intensity, 2.0);

          gl_FragColor = vec4(color * intensity, 1.0);
        }
      `,
      wireframe: true,
    });
    return new THREE.Mesh(geometry, material);
  };

  const createNanoSurface = () => {
    const geometry = new THREE.SphereGeometry(0.7, 64, 64);
    const material = new THREE.ShaderMaterial({
      uniforms: {
        time: { value: 0 },
      },
      vertexShader: `
        varying vec3 vNormal;
        varying vec3 vPosition;

        void main() {
          vNormal = normal;
          vPosition = position;
          vec3 newPosition = position + normal * (sin(position.x * 20.0 + time) * 0.02);
          gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);
        }
      `,
      fragmentShader: `
        uniform float time;
        varying vec3 vNormal;
        varying vec3 vPosition;

        void main() {
          vec3 color = vec3(0.0, 0.5, 1.0);
          float intensity = pow(0.5 + 0.5 * sin(vPosition.x * 20.0 + vPosition.y * 20.0 + time * 2.0), 2.0);
          gl_FragColor = vec4(color * intensity, 0.7);
        }
      `,
      transparent: true,
    });
    return new THREE.Mesh(geometry, material);
  };

  const createDataField = () => {
    const geometry = new THREE.SphereGeometry(1, 64, 64);
    const material = new THREE.ShaderMaterial({
      uniforms: {
        time: { value: 0 },
      },
      vertexShader: `
        varying vec3 vNormal;
        varying vec3 vPosition;

        void main() {
          vNormal = normal;
          vPosition = position;
          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
        }
      `,
      fragmentShader: `
        uniform float time;
        varying vec3 vNormal;
        varying vec3 vPosition;

        void main() {
          vec3 color = vec3(0.0, 1.0, 1.0);
          float intensity = sin(vPosition.x * 20.0 + time * 2.0) * 
                            sin(vPosition.y * 20.0 + time * 3.0) * 
                            sin(vPosition.z * 20.0 + time * 4.0);
          intensity = pow(0.5 + 0.5 * intensity, 2.0);
          gl_FragColor = vec4(color, intensity * 0.2);
        }
      `,
      transparent: true,
      side: THREE.DoubleSide,
    });
    return new THREE.Mesh(geometry, material);
  };

  const createEnergyConduits = () => {
    const group = new THREE.Group();
    const conduitCount = 10;

    for (let i = 0; i < conduitCount; i++) {
      const curve = new THREE.CatmullRomCurve3([
        new THREE.Vector3(
          Math.random() - 0.5,
          Math.random() - 0.5,
          Math.random() - 0.5
        ).multiplyScalar(0.5),
        new THREE.Vector3(
          Math.random() - 0.5,
          Math.random() - 0.5,
          Math.random() - 0.5
        ).multiplyScalar(0.7),
        new THREE.Vector3(
          Math.random() - 0.5,
          Math.random() - 0.5,
          Math.random() - 0.5
        ).multiplyScalar(0.5),
      ]);
      const geometry = new THREE.TubeGeometry(curve, 64, 0.01, 8, false);
      const material = new THREE.ShaderMaterial({
        uniforms: {
          time: { value: 0 },
        },
        vertexShader: `
          varying vec2 vUv;
          void main() {
            vUv = uv;
            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
          }
        `,
        fragmentShader: `
          uniform float time;
          varying vec2 vUv;

          void main() {
            float energy = sin(vUv.x * 20.0 - time * 5.0) * 0.5 + 0.5;
            vec3 color = mix(vec3(0.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0), energy);
            gl_FragColor = vec4(color, energy);
          }
        `,
        transparent: true,
      });
      const conduit = new THREE.Mesh(geometry, material);
      group.add(conduit);
    }

    return group;
  };

  const createTemporalDistortion = () => {
    const geometry = new THREE.SphereGeometry(2, 64, 64);
    const material = new THREE.ShaderMaterial({
      uniforms: {
        time: { value: 0 },
      },
      vertexShader: `
        varying vec3 vNormal;
        varying vec3 vPosition;

        void main() {
          vNormal = normal;
          vPosition = position;
          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
        }
      `,
      fragmentShader: `
        uniform float time;
        varying vec3 vNormal;
        varying vec3 vPosition;

        void main() {
          vec3 color = vec3(0.5, 0.0, 1.0);
          float distortion = sin(vPosition.x * 10.0 + time) * 
                             sin(vPosition.y * 10.0 + time * 1.1) * 
                             sin(vPosition.z * 10.0 + time * 1.2);
          float intensity = pow(0.2 + 0.2 * distortion, 2.0);
          gl_FragColor = vec4(color, intensity * 0.1);
        }
      `,
      transparent: true,
      side: THREE.DoubleSide,
    });
    return new THREE.Mesh(geometry, material);
  };

  const createAISynapses = () => {
    const geometry = new THREE.BufferGeometry();
    const material = new THREE.PointsMaterial({
      color: 0x00ffff,
      size: 0.01,
      transparent: true,
      opacity: 0.5,
      blending: THREE.AdditiveBlending,
    });

    const particleCount = 500;
    const positions = new Float32Array(particleCount * 3);

    const innerRadius = 0.6;
    const outerRadius = 1.0;

    for (let i = 0; i < particleCount; i++) {
      const radius = innerRadius + Math.random() * (outerRadius - innerRadius);
      const theta = Math.random() * Math.PI * 2;
      const phi = Math.acos(Math.random() * 2 - 1);

      positions[i * 3] = radius * Math.sin(phi) * Math.cos(theta);
      positions[i * 3 + 1] = radius * Math.sin(phi) * Math.sin(theta);
      positions[i * 3 + 2] = radius * Math.cos(phi);
    }

    geometry.setAttribute("position", new THREE.BufferAttribute(positions, 3));
    return new THREE.Points(geometry, material);
  };

  const createDimensionalPhasing = () => {
    const geometry = new THREE.SphereGeometry(0.8, 32, 32);
    const material = new THREE.ShaderMaterial({
      uniforms: {
        time: { value: 0 },
      },
      vertexShader: `
        varying vec3 vNormal;
        varying vec3 vPosition;

        void main() {
          vNormal = normal;
          vPosition = position;
          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
        }
      `,
      fragmentShader: `
        uniform float time;
        varying vec3 vNormal;
        varying vec3 vPosition;

        void main() {
          vec3 color = vec3(1.0, 0.5, 1.0);
          float phase = sin(vPosition.x * 10.0 + time * 2.0) * 
                        sin(vPosition.y * 10.0 + time * 3.0) * 
                        sin(vPosition.z * 10.0 + time * 4.0);
          float intensity = pow(0.5 + 0.5 * phase, 2.0);
          gl_FragColor = vec4(color, intensity * 0.5);
        }
      `,
      transparent: true,
    });
    return new THREE.Mesh(geometry, material);
  };

  const createThoughtParticles = () => {
    const geometry = new THREE.BufferGeometry();
    const material = new THREE.ShaderMaterial({
      uniforms: {
        time: { value: 0 },
      },
      vertexShader: `
          attribute float size;
          uniform float time;
          varying vec3 vColor;

          void main() {
            vColor = color;
            vec3 pos = position;

            float angle = time * 0.1 + atan(pos.x, pos.z);
            float radius = length(vec2(pos.x, pos.z));
            pos.x = cos(angle) * radius;
            pos.z = sin(angle) * radius;

            vec4 mvPosition = modelViewMatrix * vec4(pos, 1.0);
            gl_PointSize = size * (300.0 / -mvPosition.z);
            gl_Position = projectionMatrix * mvPosition;
          }
        `,
      fragmentShader: `
          uniform float time;
          varying vec3 vColor;

          void main() {
            float d = distance(gl_PointCoord, vec2(0.5));
            if(d > 0.5) discard;
            gl_FragColor = vec4(vColor, 1.0 - (d * 2.0));
          }
        `,
      transparent: true,
      blending: THREE.AdditiveBlending,
    });

    const particleCount = 200;
    const positions = new Float32Array(particleCount * 3);
    const colors = new Float32Array(particleCount * 3);
    const sizes = new Float32Array(particleCount);

    const innerRadius = 0.8;
    const outerRadius = 1.2;

    for (let i = 0; i < particleCount; i++) {
      const radius = innerRadius + Math.random() * (outerRadius - innerRadius);
      const theta = Math.random() * Math.PI * 2;

      positions[i * 3] = radius * Math.cos(theta);
      positions[i * 3 + 1] = Math.random() * 0.02 - 0.01;
      positions[i * 3 + 2] = radius * Math.sin(theta);

      colors[i * 3] = 0;
      colors[i * 3 + 1] = 1;
      colors[i * 3 + 2] = 1;

      sizes[i] = Math.random() * 0.01 + 0.001;
    }

    geometry.setAttribute("position", new THREE.BufferAttribute(positions, 3));
    geometry.setAttribute("color", new THREE.BufferAttribute(colors, 3));
    geometry.setAttribute("size", new THREE.BufferAttribute(sizes, 1));

    return new THREE.Points(geometry, material);
  };

  const createParticleSystem = () => {
    const particleCount = 300;
    const geometry = new THREE.BufferGeometry();
    const positions = new Float32Array(particleCount * 3);
    const velocities = new Float32Array(particleCount * 3);

    for (let i = 0; i < particleCount; i++) {
      positions[i * 3] = positions[i * 3 + 1] = positions[i * 3 + 2] = 0;
      velocities[i * 3] = (Math.random() - 0.5) * 0.05;
      velocities[i * 3 + 1] = (Math.random() - 0.5) * 0.05;
      velocities[i * 3 + 2] = (Math.random() - 0.5) * 0.05;
    }

    geometry.setAttribute("position", new THREE.BufferAttribute(positions, 3));
    geometry.setAttribute("velocity", new THREE.BufferAttribute(velocities, 3));

    const material = new THREE.PointsMaterial({
      color: 0x00ffff,
      size: 0.02,
      transparent: true,
      opacity: 0.4,
      blending: THREE.AdditiveBlending,
    });

    return new THREE.Points(geometry, material);
  };

  const updateParticleSystem = (position) => {
    if (!particleSystemRef.current) return;

    const positions = particleSystemRef.current.geometry.attributes.position.array;
    const velocities = particleSystemRef.current.geometry.attributes.velocity.array;

    for (let i = 0; i < positions.length; i += 3) {
      positions[i] += velocities[i];
      positions[i + 1] += velocities[i + 1];
      positions[i + 2] += velocities[i + 2];

      if (Math.random() > 0.98) {
        positions[i] = position.x;
        positions[i + 1] = position.y;
        positions[i + 2] = position.z;
      }
    }

    particleSystemRef.current.geometry.attributes.position.needsUpdate = true;
  };

  const animate = useCallback(() => {
    animationFrameId.current = requestAnimationFrame(animate);

    const delta = clockRef.current.getDelta();
    const elapsedTime = clockRef.current.getElapsedTime();

    robotRef.current.traverse((child) => {
      if (child.material && child.material.uniforms) {
        child.material.uniforms.time.value = elapsedTime;
      }
    });

    robotRef.current.rotation.y += 0.001;

    if (isDragging.current) {
      updateParticleSystem(robotRef.current.position);
    }

    if (mixerRef.current) {
      mixerRef.current.update(delta);
    }

    rendererRef.current.render(sceneRef.current, cameraRef.current);
  }, []);

  const handleResize = useCallback(() => {
    const newWidth = window.innerWidth;
    const newHeight = window.innerHeight;
    cameraRef.current.aspect = newWidth / newHeight;
    cameraRef.current.updateProjectionMatrix();
    rendererRef.current.setSize(newWidth, newHeight);
  }, []);

  useEffect(() => {
    initializeScene();
    animate();

    gsap.from(robotRef.current.position, {
      y: -5,
      duration: 2,
      ease: "power2.out",
      onComplete: () => {
        gsap.to(robotRef.current.position, {
          y: "+=0.1",
          duration: 1.5,
          yoyo: true,
          repeat: -1,
          ease: "sine.inOut",
        });
      },
    });

    window.addEventListener("resize", handleResize);

    return () => {
      window.removeEventListener("resize", handleResize);
      cancelAnimationFrame(animationFrameId.current);
      if (mountRef.current && rendererRef.current.domElement) {
        mountRef.current.removeChild(rendererRef.current.domElement);
      }
      sceneRef.current.traverse((object) => {
        if (object.geometry) object.geometry.dispose();
        if (object.material) {
          if (Array.isArray(object.material)) {
            object.material.forEach((material) => material.dispose());
          } else {
            object.material.dispose();
          }
        }
      });
      rendererRef.current.dispose();
    };
  }, [initializeScene, animate, handleResize]);

  return (
    <div
      ref={mountRef}
      style={{
        position: "relative",
        width: "100%",
        height: "100%",
        pointerEvents: "auto",
        zIndex: 1000,
      }}
    />
  );
};

OmniRobot.propTypes = {
  onPositionChange: PropTypes.func.isRequired,
};

export default React.memo(OmniRobot);
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/AugmentedReality/components/TodoCard/index.js

Code for file: /prospera-home/homepage/src/pages/AugmentedReality/components/TodoCard/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import React, { useState, useContext } from "react";
import Card from "@mui/material/Card";
import Icon from "@mui/material/Icon";
import Tooltip from "@mui/material/Tooltip";
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import MKInput from "components/MKInput";
import MKButton from "components/MKButton";
import { AuthContext } from "contexts/AuthContext";

function TodoCard() {
  const { user } = useContext(AuthContext);
  const [todos, setTodos] = useState(["Review DeFi strategies", "Analyze market trends"]);
  const [newTodo, setNewTodo] = useState("");

  const handleAddTodo = () => {
    if (newTodo.trim() !== "") {
      setTodos([...todos, newTodo.trim()]);
      setNewTodo("");
    }
  };

  const handleDeleteTodo = (index) => {
    const newTodos = todos.filter((_, i) => i !== index);
    setTodos(newTodos);
  };

  return (
    <Card
      sx={{
        height: "100%",
        display: "flex",
        flexDirection: "column",
        background: "transparent",
        boxShadow: "none",
      }}
    >
      <MKBox p={2} display="flex" flexDirection="column" height="100%">
        <MKBox display="flex" justifyContent="space-between" alignItems="center" mb={2}>
          <MKTypography variant="h5" color="white">
            {user?.name}&apos;s Tasks
          </MKTypography>
          <MKBox textAlign="center" lineHeight={1}>
            <MKTypography variant="h1" color="white" fontWeight="bold">
              {todos.length}
            </MKTypography>
            <MKTypography variant="button" color="white" fontWeight="regular">
              items
            </MKTypography>
          </MKBox>
        </MKBox>
        <MKBox flexGrow={1} overflow="auto">
          {todos.map((todo, index) => (
            <MKBox
              key={index}
              display="flex"
              justifyContent="space-between"
              alignItems="center"
              mb={1}
            >
              <MKTypography variant="body2" color="white" fontWeight="regular">
                {todo}
              </MKTypography>
              <MKButton
                variant="text"
                color="white"
                size="small"
                onClick={() => handleDeleteTodo(index)}
              >
                <Icon>delete</Icon>
              </MKButton>
            </MKBox>
          ))}
        </MKBox>
        <MKBox mt={2}>
          <MKInput
            variant="standard"
            placeholder="Add new PROSPERA task"
            fullWidth
            value={newTodo}
            onChange={(e) => setNewTodo(e.target.value)}
            onKeyPress={(e) => e.key === "Enter" && handleAddTodo()}
            inputProps={{ style: { color: "white" } }}
          />
        </MKBox>
        <Tooltip title="Add Task" placement="top">
          <MKBox
            textAlign="center"
            py={1}
            color="white"
            mt={2}
            sx={{
              cursor: "pointer",
              transition: "all 300ms linear",
              "&:hover": { transform: "translateY(-2px)" },
            }}
            onClick={handleAddTodo}
          >
            <Icon sx={{ fontWeight: "bold" }} fontSize="default">
              add
            </Icon>
          </MKBox>
        </Tooltip>
      </MKBox>
    </Card>
  );
}

export default TodoCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/AugmentedReality/components/TodoList/index.js

Code for file: /prospera-home/homepage/src/pages/AugmentedReality/components/TodoList/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import React, { useState, useContext } from "react";
import Card from "@mui/material/Card";
import Divider from "@mui/material/Divider";
import Icon from "@mui/material/Icon";
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import MKInput from "components/MKInput";
import MKButton from "components/MKButton";
import { AuthContext } from "contexts/AuthContext";

function TodoList() {
  const { user } = useContext(AuthContext);
  const [todos, setTodos] = useState([
    { time: "08:00", task: "Blockchain sync", location: "Server room" },
    { time: "09:30", task: "Token economics meeting", location: "Virtual" },
    { time: "11:00", task: "Smart contract audit", location: "Office" },
  ]);
  const [newTodo, setNewTodo] = useState({ time: "", task: "", location: "" });

  const handleAddTodo = () => {
    if (newTodo.time && newTodo.task && newTodo.location) {
      setTodos([...todos, newTodo]);
      setNewTodo({ time: "", task: "", location: "" });
    }
  };

  const handleDeleteTodo = (index) => {
    const newTodos = todos.filter((_, i) => i !== index);
    setTodos(newTodos);
  };

  return (
    <Card
      sx={{
        height: "100%",
        display: "flex",
        flexDirection: "column",
        background: "transparent",
        boxShadow: "none",
      }}
    >
      <MKBox p={2} display="flex" flexDirection="column" height="100%">
        <MKTypography variant="h5" color="white" mb={3}>
          {user?.name}&apos;s Schedule
        </MKTypography>
        <MKBox flexGrow={1} overflow="auto">
          {todos.map((todo, index) => (
            <React.Fragment key={index}>
              <MKBox display="flex" justifyContent="space-between" alignItems="center" mb={2}>
                <MKBox display="flex" alignItems="center">
                  <MKTypography variant="h6" fontWeight="medium" color="white" mr={2}>
                    {todo.time}
                  </MKTypography>
                  <MKBox>
                    <MKTypography variant="body2" fontWeight="medium" color="white">
                      {todo.task}
                    </MKTypography>
                    <MKTypography variant="caption" color="secondary">
                      {todo.location}
                    </MKTypography>
                  </MKBox>
                </MKBox>
                <MKButton
                  variant="text"
                  color="white"
                  size="small"
                  onClick={() => handleDeleteTodo(index)}
                >
                  <Icon>delete</Icon>
                </MKButton>
              </MKBox>
              {index < todos.length - 1 && (
                <Divider light sx={{ backgroundColor: "rgba(255, 255, 255, 0.2)" }} />
              )}
            </React.Fragment>
          ))}
        </MKBox>
        <MKBox mt={3}>
          <MKInput
            type="time"
            variant="standard"
            fullWidth
            value={newTodo.time}
            onChange={(e) => setNewTodo({ ...newTodo, time: e.target.value })}
            inputProps={{ style: { color: "white" } }}
            sx={{ mb: 2 }}
          />
          <MKInput
            variant="standard"
            placeholder="Task"
            fullWidth
            value={newTodo.task}
            onChange={(e) => setNewTodo({ ...newTodo, task: e.target.value })}
            inputProps={{ style: { color: "white" } }}
            sx={{ mb: 2 }}
          />
          <MKInput
            variant="standard"
            placeholder="Location"
            fullWidth
            value={newTodo.location}
            onChange={(e) => setNewTodo({ ...newTodo, location: e.target.value })}
            inputProps={{ style: { color: "white" } }}
            sx={{ mb: 2 }}
          />
          <MKButton variant="gradient" color="info" fullWidth onClick={handleAddTodo}>
            Add Task
          </MKButton>
        </MKBox>
      </MKBox>
    </Card>
  );
}

export default TodoList;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/AugmentedReality/components/WeatherForecast/index.js

Code for file: /prospera-home/homepage/src/pages/AugmentedReality/components/WeatherForecast/index.js

```
import React, { useState, useEffect } from "react";
import axios from "axios";
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import { styled } from "@mui/material/styles";

// Import custom weather icons
import cloudyDay1 from "./images/cloudy-day-1.svg";
import cloudyNight1 from "./images/cloudy-night-1.svg";
import cloudyNight2 from "./images/cloudy-night-2.svg";
import cloudyNight3 from "./images/cloudy-night-3.svg";
import cloudy from "./images/cloudy.svg";
import day from "./images/day.svg";
import night from "./images/night.svg";
import rainy1 from "./images/rainy-1.svg";
import rainy2 from "./images/rainy-2.svg";
import rainy3 from "./images/rainy-3.svg";
import rainy4 from "./images/rainy-4.svg";
import rainy7 from "./images/rainy-7.svg";
import snowy1 from "./images/snowy-1.svg";
import snowy2 from "./images/snowy-2.svg";
import snowy3 from "./images/snowy-3.svg";
import snowy4 from "./images/snowy-4.svg";
import snowy6 from "./images/snowy-6.svg";
import thunder from "./images/thunder.svg";

// Mapping weather descriptions to custom icons
const weatherIconMap = {
  "Partly cloudy": cloudyDay1,
  Cloudy: cloudy,
  Overcast: cloudy,
  Clear: day,
  Sunny: day,
  "Patchy rain possible": rainy1,
  "Light rain": rainy2,
  "Moderate rain": rainy3,
  "Heavy rain": rainy4,
  "Torrential rain": rainy7,
  "Patchy snow possible": snowy1,
  "Light snow": snowy2,
  "Moderate snow": snowy3,
  "Heavy snow": snowy4,
  "Thundery outbreaks possible": thunder,
  Thunderstorms: thunder,
  Mist: cloudy,
  Fog: cloudy,
  "Patchy freezing drizzle possible": snowy6,
  Blizzard: snowy6,
  "Night Clear": night,
  "Night Partly cloudy": cloudyNight1,
  "Night Cloudy": cloudyNight2,
  "Night Overcast": cloudyNight3,
};

const WeatherIcon = styled("img")({
  width: "32px", // Set the desired width of the icon
  height: "32px", // Set the desired height of the icon
  marginRight: "8px", // Space between the icon and text
});

const WeatherForecast = () => {
  const [weather, setWeather] = useState(null);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchWeather = async () => {
      const options = {
        method: "GET",
        url: "http://api.weatherstack.com/current",
        params: {
          access_key: "6129fb1c316f470d2f3a45c1c1b487ee",
          query: "fetch:ip",
        },
      };

      try {
        const response = await axios.request(options);
        console.log(response.data);

        if (response.data.current) {
          setWeather(response.data);
        } else {
          setError("No weather data available");
        }
      } catch (error) {
        console.error(error);
        setError("Error fetching weather data");
      }
    };

    fetchWeather();
  }, []);

  if (error) {
    return <div>{error}</div>;
  }

  const weatherDescription = weather?.current?.weather_descriptions[0] || "";
  const weatherIcon = weatherIconMap[weatherDescription] || day; // Default to day icon

  return (
    <MKBox display="flex" flexDirection="column" alignItems="flex-end" sx={{ color: "white" }}>
      {weather ? (
        <>
          <MKBox display="flex" alignItems="center">
            <WeatherIcon src={weatherIcon} alt="Weather Icon" />
            <MKTypography
              variant="body2"
              sx={{ fontFamily: "Helvetica Monospaced, sans-serif", color: "#f5f5f5" }}
            >
              {weather.location.name}, {weather.location.region}, {weather.location.country}
            </MKTypography>
          </MKBox>
          <MKTypography
            variant="body2"
            sx={{ fontFamily: "Helvetica Monospaced, sans-serif", color: "#f5f5f5" }}
          >
            {weather.current.temperature}°C | {weatherDescription}
          </MKTypography>
          <MKTypography
            variant="body2"
            sx={{ fontFamily: "Helvetica Monospaced, sans-serif", color: "#f5f5f5" }}
          >
            Feels like: {weather.current.feelslike}°C
          </MKTypography>
          <MKTypography
            variant="body2"
            sx={{ fontFamily: "Helvetica Monospaced, sans-serif", color: "#f5f5f5" }}
          >
            Wind: {weather.current.wind_speed} km/h {weather.current.wind_dir}
          </MKTypography>
          <MKTypography
            variant="body2"
            sx={{ fontFamily: "Helvetica Monospaced, sans-serif", color: "#f5f5f5" }}
          >
            Humidity: {weather.current.humidity}%
          </MKTypography>
        </>
      ) : (
        <MKTypography
          variant="body2"
          sx={{ fontFamily: "Helvetica Monospaced, sans-serif", color: "#f5f5f5" }}
        >
          Loading weather data...
        </MKTypography>
      )}
    </MKBox>
  );
};

export default WeatherForecast;
```
------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/AugmentedReality/components/WelcomeMessage/index.js

Code for file: /prospera-home/homepage/src/pages/AugmentedReality/components/WelcomeMessage/index.js

```
import React from "react";
import PropTypes from "prop-types";
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import { styled } from "@mui/material/styles";

const GlassmorphicBox = styled(MKBox)({
  display: "flex",
  flexDirection: "column", // Stack elements vertically
  justifyContent: "center",
  alignItems: "center",
  padding: "8px 24px", // Smaller padding to reduce size
  boxShadow:
    "0 0.3px 0.7px rgba(0, 0, 0, 0.126), 0 0.9px 1.7px rgba(0, 0, 0, 0.179), 0 1.8px 3.5px rgba(0, 0, 0, 0.224), 0 3.7px 7.3px rgba(0, 0, 0, 0.277), 0 10px 20px rgba(0, 0, 0, 0.4)",
  backdropFilter: "blur(20px)",
  borderRadius: "10px",
  transition: "0.3s ease", // Faster transition for a smoother effect
  position: "absolute",
  top: "calc(33% + 10px)", // Positioned slightly above the DashboardBar
  left: "50%",
  transform: "translateX(-50%)",
  zIndex: 1000,
  width: "auto", // Auto width to fit the content
  maxWidth: "60%", // Reduce the maximum width to keep it compact
  "&:hover": {
    boxShadow:
      "0 0.7px 1px rgba(0, 0, 0, 0.157), 0 1.7px 2.6px rgba(0, 0, 0, 0.224), 0 3.5px 5.3px rgba(0, 0, 0, 0.28), 0 7.3px 11px rgba(0, 0, 0, 0.346), 0 20px 30px rgba(0, 0, 0, 0.5)",
    transform: "translateX(-50%)", // Keep the element in place on hover
  },
});

const GradientText = styled(MKTypography)({
  fontFamily: "Lato, sans-serif",
  fontWeight: 200,
  fontSize: "1.2em", // Smaller font size
  letterSpacing: "0.25em",
  color: "white",
  paddingLeft: "0.1em",
  background: "linear-gradient(45deg, #00ffff, #00ff00, #00aaff)",
  WebkitBackgroundClip: "text",
  WebkitTextFillColor: "transparent",
});

const WelcomeMessage = ({ userName }) => {
  const getGreeting = () => {
    const hour = new Date().getHours();
    if (hour < 12) return "Good Morning";
    if (hour < 18) return "Good Afternoon";
    return "Good Evening";
  };

  return (
    <GlassmorphicBox>
      <GradientText variant="h6">
        {" "}
        {/* Reduced text size */}
        {getGreeting()}, {userName}
      </GradientText>
      <MKTypography
        variant="subtitle1" // Smaller variant for the welcome message
        sx={{
          color: "rgba(255, 255, 255, 0.9)",
          marginTop: "4px",
          fontFamily: "Lato, sans-serif",
          fontWeight: 200,
          fontSize: "0.9em", // Smaller font size
          textAlign: "center",
          textShadow: "0px 0px 10px rgba(255, 255, 255, 0.5)",
        }}
      >
        Welcome to PROSPERA
      </MKTypography>
    </GlassmorphicBox>
  );
};

WelcomeMessage.propTypes = {
  userName: PropTypes.string.isRequired,
};

export default WelcomeMessage;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/AugmentedReality/components/Window/index.js

Code for file: /prospera-home/homepage/src/pages/AugmentedReality/components/Window/index.js

```
import React, { useState } from "react";
import { Box, IconButton, Typography } from "@mui/material";
import { styled } from "@mui/material/styles";
import CloseIcon from "@mui/icons-material/Close";
import MinimizeIcon from "@mui/icons-material/Minimize";
import Draggable from "react-draggable";
import { Resizable } from "react-resizable";
import PropTypes from "prop-types";

import colors from "assets/theme/base/colors";
import boxShadows from "assets/theme/base/boxShadows";
import borders from "assets/theme/base/borders";
import pxToRem from "assets/theme/functions/pxToRem";

import "react-resizable/css/styles.css";

const WindowContainer = styled(Box)(() => ({
  background: "rgba(0, 0, 0, 0.6)",
  backdropFilter: "blur(10px)",
  WebkitBackdropFilter: "blur(10px)",
  borderRadius: borders.borderRadius.lg,
  boxShadow: boxShadows.xxl,
  border: `1px solid ${colors.dark.main}`,
  overflow: "hidden",
  position: "absolute",
}));

const WindowHeader = styled(Box)(() => ({
  background: "rgba(0, 0, 0, 0.2)",
  color: colors.white.main,
  padding: pxToRem(8),
  display: "flex",
  justifyContent: "space-between",
  alignItems: "center",
  cursor: "move",
  boxShadow: "0 2px 4px rgba(0, 0, 0, 0.1)",
}));

const ResizeHandle = styled(Box)(() => ({
  position: "absolute",
  bottom: 0,
  right: 0,
  width: pxToRem(20),
  height: pxToRem(20),
  cursor: "se-resize",
  background: `linear-gradient(135deg, transparent 50%, ${colors.info.main} 50%)`,
}));

const Window = ({
  title,
  onClose,
  onMinimize,
  children,
  initialPosition,
  initialSize,
  onPositionChange,
  onSizeChange,
}) => {
  const [position, setPosition] = useState(initialPosition || { x: 50, y: 50 });
  const [size, setSize] = useState(initialSize || { width: 400, height: 300 });

  const handleDrag = (e, data) => {
    const newPosition = { x: data.x, y: data.y };
    setPosition(newPosition);
    onPositionChange && onPositionChange(newPosition);
  };

  const handleResize = (e, { size }) => {
    setSize(size);
    onSizeChange && onSizeChange(size);
  };

  return (
    <Draggable handle=".window-header" position={position} onDrag={handleDrag}>
      <Resizable
        width={size.width}
        height={size.height}
        onResize={handleResize}
        minConstraints={[200, 100]}
        maxConstraints={[800, 600]}
      >
        <WindowContainer style={{ width: size.width, height: size.height }}>
          <WindowHeader className="window-header">
            <Typography variant="subtitle1" fontWeight="bold">
              {title}
            </Typography>
            <Box>
              <IconButton
                size="small"
                onClick={onMinimize}
                sx={{ color: colors.white.main, mr: 1 }}
              >
                <MinimizeIcon fontSize="small" />
              </IconButton>
              <IconButton size="small" onClick={onClose} sx={{ color: colors.white.main }}>
                <CloseIcon fontSize="small" />
              </IconButton>
            </Box>
          </WindowHeader>
          <Box
            p={2}
            sx={{ color: colors.white.main, height: "calc(100% - 48px)", overflow: "auto" }}
            className="custom-scrollbar"
          >
            {children}
          </Box>
          <ResizeHandle />
        </WindowContainer>
      </Resizable>
    </Draggable>
  );
};

Window.propTypes = {
  title: PropTypes.string.isRequired,
  onClose: PropTypes.func.isRequired,
  onMinimize: PropTypes.func.isRequired,
  children: PropTypes.node.isRequired,
  initialPosition: PropTypes.shape({
    x: PropTypes.number,
    y: PropTypes.number,
  }),
  initialSize: PropTypes.shape({
    width: PropTypes.number,
    height: PropTypes.number,
  }),
  onPositionChange: PropTypes.func,
  onSizeChange: PropTypes.func,
};

export default Window;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/AugmentedReality/index.js

Code for file: /prospera-home/homepage/src/pages/AugmentedReality/index.js

```
import React, { useState, useEffect, useContext, useMemo, useCallback, useRef } from "react";
import { useNavigate } from "react-router-dom";

// PROSPERA DEFI PLATFORM React components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import MKButton from "components/MKButton";

// AugmentedReality page components
import TodoList from "pages/AugmentedReality/components/TodoList";
import TodoCard from "pages/AugmentedReality/components/TodoCard";
import Emails from "pages/AugmentedReality/components/Emails";
import MediaPlayer from "pages/AugmentedReality/components/MediaPlayer";
import Messages from "pages/AugmentedReality/components/Messages";
import OmniRobot from "pages/AugmentedReality/components/omnRobot/OmniRobot";

// New components
import Navbar from "./components/Navbar";
import Desktop from "./components/Desktop";
import Window from "./components/Window";
import WelcomeMessage from "./components/WelcomeMessage";
import DashboardBar from "./components/DashboardBar";

// Images
import bgImage from "assets/images/backgrounds/DesktopBackgrounds/Mountains/blackandwhitemountains.jpg";

// Contexts
import { AuthContext } from "contexts/AuthContext";
import { WalletContext } from "contexts/WalletContext";
import { BetaContext } from "contexts/BetaContext";

// API services
import { fetchUserData } from "services/api";
import { getTokenBalance, checkTokenHolding } from "services/tokenService";

// Custom styles
import "assets/css/customStyles.css";

const MemoizedOmniRobot = React.memo(OmniRobot);

function AugmentedReality() {
  const navigate = useNavigate();
  const {
    user,
    loading: authLoading,
    checkAuth,
    isInitialized,
    isLoading: authIsLoading,
  } = useContext(AuthContext);
  const { wallet } = useContext(WalletContext);
  const { isBetaMode, requestWhitelist } = useContext(BetaContext);

  const [userData, setUserData] = useState(null);
  const [openWindows, setOpenWindows] = useState({});
  const [minimizedWindows, setMinimizedWindows] = useState([]);
  const [windowPositions, setWindowPositions] = useState({});
  const [windowSizes, setWindowSizes] = useState({});
  const [robotPosition, setRobotPosition] = useState({ x: 0, y: 0 });
  const [isDragging, setIsDragging] = useState(false);
  const [isLoading, setIsLoading] = useState(true);
  const [isRobotVisible, setIsRobotVisible] = useState(true);
  const [tokenBalance, setTokenBalance] = useState("0");
  const [userDataLoading, setUserDataLoading] = useState(true);
  const dragOffset = useRef({ x: 0, y: 0 });
  const containerRef = useRef(null);

  const [storedUser, setStoredUser] = useState(() => {
    const storedUser = localStorage.getItem("user");
    return storedUser ? JSON.parse(storedUser) : null;
  });

  const currentUserData = userData || user || storedUser || null;

  const fetchTokenBalance = useCallback(async () => {
    if (currentUserData && currentUserData.arbitrumWallet) {
      try {
        const balance = await getTokenBalance(currentUserData.arbitrumWallet);
        setTokenBalance(balance);
        console.log("Fetched token balance:", balance);
      } catch (error) {
        console.error("Error fetching token balance:", error);
        setTokenBalance("0");
      }
    } else {
      console.log("No user data or arbitrum wallet found");
      setTokenBalance("0");
    }
  }, [currentUserData]);

  useEffect(() => {
    if (currentUserData) {
      fetchTokenBalance();
    }
  }, [currentUserData, fetchTokenBalance]);

  useEffect(() => {
    if (!user) {
      const storedUser = localStorage.getItem("user");
      if (storedUser) {
        setStoredUser(JSON.parse(storedUser));
      }
    }
  }, [user]);

  useEffect(() => {
    const initializeComponent = async () => {
      console.log("Initializing AugmentedReality component");
      console.log("Auth loading:", authLoading);
      console.log("User:", user);
      console.log("Is initialized:", isInitialized);
      console.log("Auth is loading:", authIsLoading);

      if (!user) {
        console.log("No user found, re-checking authentication");
        try {
          await checkAuth();
        } catch (error) {
          console.error("Authentication check failed:", error);
          navigate("/authentication/sign-in/illustration");
          return;
        }
      }

      if (user) {
        console.log("User authenticated, loading user data");
        try {
          const data = await fetchUserData(user.id);
          console.log("User data loaded:", data);
          setUserData(data.data.attributes);

          if (data.data.attributes.arbitrumWallet) {
            const balance = await getTokenBalance(data.data.attributes.arbitrumWallet);
            setTokenBalance(balance);
            console.log("Token balance fetched:", balance);
          }
        } catch (error) {
          console.error("Error fetching user data:", error);
          setUserData(user);
        }
      }

      setUserDataLoading(false);
      setIsLoading(false);
    };

    if (isInitialized && !authIsLoading) {
      initializeComponent();
    }
  }, [user, authLoading, checkAuth, navigate, isInitialized, authIsLoading]);

  const toggleWindow = useCallback(
    (appName) => {
      if (minimizedWindows.includes(appName)) {
        setMinimizedWindows(minimizedWindows.filter((w) => w !== appName));
        setOpenWindows((prev) => ({ ...prev, [appName]: true }));
      } else if (openWindows[appName]) {
        setMinimizedWindows([...minimizedWindows, appName]);
      } else {
        setOpenWindows({ ...openWindows, [appName]: true });
        setWindowPositions((prev) => ({ ...prev, [appName]: { x: 50, y: 50 } }));
        setWindowSizes((prev) => ({ ...prev, [appName]: { width: 400, height: 300 } }));
      }
    },
    [openWindows, minimizedWindows]
  );

  const closeWindow = useCallback(
    (appName) => {
      const newOpenWindows = { ...openWindows };
      delete newOpenWindows[appName];
      setOpenWindows(newOpenWindows);
      setMinimizedWindows(minimizedWindows.filter((w) => w !== appName));
      setWindowPositions((prev) => {
        const newPositions = { ...prev };
        delete newPositions[appName];
        return newPositions;
      });
      setWindowSizes((prev) => {
        const newSizes = { ...prev };
        delete newSizes[appName];
        return newSizes;
      });
    },
    [openWindows, minimizedWindows]
  );

  const handleMinimize = useCallback(
    (appName) => {
      setMinimizedWindows([...minimizedWindows, appName]);
    },
    [minimizedWindows]
  );

  const updateWindowPosition = useCallback(
    (appName, position) => {
      setWindowPositions({ ...windowPositions, [appName]: position });
    },
    [windowPositions]
  );

  const updateWindowSize = useCallback(
    (appName, size) => {
      setWindowSizes({ ...windowSizes, [appName]: size });
    },
    [windowSizes]
  );

  const handleDashboardClick = useCallback(async () => {
    if (wallet && (await checkTokenHolding(wallet.address))) {
      window.location.href = "https://dashboard.prosperadefi.com";
    } else {
      alert("You need to hold $PROS tokens to access the dashboard.");
    }
  }, [wallet]);

  const handleRobotPositionChange = useCallback((newPosition) => {
    setRobotPosition(newPosition);
  }, []);

  const handleDragStart = useCallback((e) => {
    setIsDragging(true);
    document.body.style.cursor = "grabbing";
    const rect = e.currentTarget.getBoundingClientRect();
    dragOffset.current = {
      x: e.clientX - rect.left,
      y: e.clientY - rect.top,
    };
  }, []);

  const handleDragEnd = useCallback(() => {
    setIsDragging(false);
    document.body.style.cursor = "grab";
  }, []);

  const handleMouseMove = useCallback(
    (e) => {
      if (isDragging) {
        const newX = e.clientX - dragOffset.current.x;
        const newY = e.clientY - dragOffset.current.y;
        setRobotPosition({ x: newX, y: newY });
      }
    },
    [isDragging]
  );

  const handleRequestWhitelist = useCallback(async () => {
    if (!currentUserData || !currentUserData.arbitrumWallet) {
      alert("Please connect your wallet to request whitelist access.");
      return;
    }

    try {
      const hasTokens = await checkTokenHolding(currentUserData.arbitrumWallet);
      const tokenBalance = await getTokenBalance(currentUserData.arbitrumWallet);

      if (hasTokens) {
        await requestWhitelist(currentUserData.arbitrumWallet);
        alert(
          `Your whitelist request has been submitted. You currently hold ${tokenBalance} $PROS tokens.`
        );
      } else {
        alert(
          `To participate in the beta, you need at least 5000 $PROS tokens. Your current balance is ${tokenBalance} $PROS. Please visit https://www.prosperaico.com to purchase more $PROS tokens.`
        );
      }
    } catch (error) {
      console.error("Error checking token balance or requesting whitelist:", error);
      alert("An error occurred while processing your request. Please try again later.");
    }
  }, [currentUserData, requestWhitelist]);

  const toggleRobotVisibility = useCallback(() => {
    setIsRobotVisible((prev) => !prev);
  }, []);

  const calculateInitialRobotPosition = useCallback(() => {
    if (containerRef.current) {
      const { width, height } = containerRef.current.getBoundingClientRect();
      return {
        x: width * 0.1,
        y: height * 0.8,
      };
    }
    return { x: 100, y: 500 };
  }, []);

  useEffect(() => {
    setRobotPosition(calculateInitialRobotPosition());
  }, [calculateInitialRobotPosition]);

  const welcomeElement = useMemo(
    () => (
      <MKBox
        sx={{
          position: "relative",
          top: "20%",
          width: "100%",
          zIndex: 1000,
          display: "flex",
          justifyContent: "center",
          alignItems: "center",
        }}
      >
        <WelcomeMessage userName={currentUserData?.name || "User"} />
      </MKBox>
    ),
    [currentUserData]
  );

  const robotElement = useMemo(
    () =>
      isRobotVisible && (
        <MKBox
          sx={{
            position: "fixed",
            top: robotPosition.y,
            left: robotPosition.x,
            zIndex: 1000,
            cursor: isDragging ? "grabbing" : "grab",
          }}
          onMouseDown={handleDragStart}
        >
          <MemoizedOmniRobot onPositionChange={handleRobotPositionChange} />
        </MKBox>
      ),
    [
      robotPosition.x,
      robotPosition.y,
      isDragging,
      handleDragStart,
      handleRobotPositionChange,
      isRobotVisible,
    ]
  );

  const checkBetaAccess = useCallback(() => {
    const hasFullAccess =
      ["admin", "co-admin", "prosperaTeam", "kol"].includes(currentUserData?.role) ||
      currentUserData?.isWhitelisted;

    if (isBetaMode && !hasFullAccess) {
      return (
        <MKBox
          display="flex"
          justifyContent="center"
          alignItems="center"
          minHeight="100vh"
          sx={{
            backgroundImage: `url(${bgImage})`,
            backgroundSize: "cover",
            backgroundPosition: "center",
          }}
        >
          <MKBox bgColor="white" borderRadius="xl" shadow="lg" p={4} textAlign="center">
            <MKTypography variant="h4" mb={2}>
              Beta Access Required
            </MKTypography>
            <MKTypography variant="body1" mb={3}>
              {currentUserData?.hasRequestedWhitelist
                ? "Your whitelist request is being processed. Please check back later."
                : "You are not an approved member to access during beta-testing."}
            </MKTypography>
            {!currentUserData?.hasRequestedWhitelist && (
              <MKButton variant="gradient" color="info" onClick={handleRequestWhitelist}>
                Request Whitelist Access
              </MKButton>
            )}
          </MKBox>
        </MKBox>
      );
    }
    return null;
  }, [isBetaMode, currentUserData, handleRequestWhitelist]);

  if (authIsLoading || isLoading || userDataLoading) {
    return (
      <MKBox display="flex" justifyContent="center" alignItems="center" minHeight="100vh">
        <MKTypography variant="h4">Loading...</MKTypography>
      </MKBox>
    );
  }

  if (!currentUserData) {
    return (
      <MKBox
        display="flex"
        justifyContent="center"
        alignItems="center"
        minHeight="100vh"
        sx={{
          backgroundImage: `url(${bgImage})`,
          backgroundSize: "cover",
          backgroundPosition: "center",
        }}
      >
        <MKBox bgColor="white" borderRadius="xl" shadow="lg" p={4} textAlign="center">
          <MKTypography variant="h4" mb={2}>
            Access Restricted
          </MKTypography>
          <MKTypography variant="body1" mb={3}>
            To access the Augmented Reality page, you must be signed in.
          </MKTypography>
          <MKButton
            variant="gradient"
            color="info"
            onClick={() => navigate("/authentication/sign-in/illustration")}
          >
            Sign In
          </MKButton>
        </MKBox>
      </MKBox>
    );
  }

  const betaAccessCheck = checkBetaAccess();
  if (betaAccessCheck) return betaAccessCheck;

  return (
    <MKBox
      ref={containerRef}
      component="main"
      minHeight="100vh"
      width="100vw"
      sx={{
        backgroundImage: `url(${bgImage})`,
        backgroundSize: "cover",
        backgroundPosition: "center",
        overflow: "hidden",
        position: "relative",
      }}
      onMouseMove={handleMouseMove}
      onMouseUp={handleDragEnd}
      onMouseLeave={handleDragEnd}
    >
      {welcomeElement}
      <DashboardBar />
      <Desktop>
        {Object.entries(openWindows).map(
          ([appName, isOpen]) =>
            isOpen &&
            !minimizedWindows.includes(appName) && (
              <Window
                key={appName}
                title={appName}
                onClose={() => closeWindow(appName)}
                onMinimize={() => handleMinimize(appName)}
                initialPosition={windowPositions[appName]}
                initialSize={windowSizes[appName]}
                isMinimized={minimizedWindows.includes(appName)}
                onPositionChange={(position) => updateWindowPosition(appName, position)}
                onSizeChange={(size) => updateWindowSize(appName, size)}
              >
                {appName === "todoList" && <TodoList />}
                {appName === "todoCard" && <TodoCard />}
                {appName === "emails" && <Emails />}
                {appName === "mediaPlayer" && <MediaPlayer />}
                {appName === "messages" && <Messages />}
              </Window>
            )
        )}
      </Desktop>
      {robotElement}
      <MKTypography
        variant="body2"
        color="white"
        sx={{
          position: "absolute",
          bottom: 5,
          left: 20,
          zIndex: 1001,
        }}
      >
        Robot Position: X: {robotPosition.x.toFixed(2)}, Y: {robotPosition.y.toFixed(2)}
      </MKTypography>
      <MKTypography
        variant="body2"
        color="white"
        sx={{
          position: "absolute",
          top: 5,
          right: 20,
          zIndex: 1001,
        }}
      >
        $PROS Balance: {tokenBalance}
      </MKTypography>
      <Navbar
        onItemClick={toggleWindow}
        onDashboardClick={handleDashboardClick}
        minimizedWindows={minimizedWindows}
        onRobotToggle={toggleRobotVisibility}
        isRobotVisible={isRobotVisible}
      />
    </MKBox>
  );
}

export default AugmentedReality;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/Authentication/ResetPassword/Cover/index.js

Code for file: /prospera-home/homepage/src/pages/Authentication/ResetPassword/Cover/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import React, { useState, useEffect, useRef } from "react";
import { Grid } from "@mui/material";
import MKBox from "components/MKBox";
import MKInput from "components/MKInput";
import MKButton from "components/MKButton";
import MKTypography from "components/MKTypography";
import DefaultNavbar from "components/DefaultNavbar";
import routes from "routes";
import { forgotPassword } from "services/api";

function ResetPassword() {
  const canvasRef = useRef(null);
  const [email, setEmail] = useState("");
  const [showConfirmation, setShowConfirmation] = useState(false);
  const [error, setError] = useState("");
  const [isLoading, setIsLoading] = useState(false);

  useEffect(() => {
    const canvas = canvasRef.current;
    const ctx = canvas.getContext("2d");
    let animationFrameId;

    const resizeCanvas = () => {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    };

    const drawGrid = (time) => {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      ctx.strokeStyle = "#01ff02";
      ctx.lineWidth = 1;

      const vpX = canvas.width / 2;
      const vpY = canvas.height / 2;
      const roomWidth = canvas.width * 1.5;
      const roomHeight = canvas.height * 1.5;
      const roomDepth = canvas.height * 2;

      const perspective = (x, y, z) => {
        const fov = 250;
        const scale = fov / (fov + z);
        return {
          x: vpX + x * scale,
          y: vpY + y * scale,
        };
      };

      const drawLine = (x1, y1, z1, x2, y2, z2) => {
        const start = perspective(x1, y1, z1);
        const end = perspective(x2, y2, z2);
        ctx.beginPath();
        ctx.moveTo(start.x, start.y);
        ctx.lineTo(end.x, end.y);
        const distance = Math.sqrt((x1 - vpX) ** 2 + (y1 - vpY) ** 2 + z1 ** 2);
        ctx.globalAlpha =
          0.5 * (1 - distance / roomDepth) * (0.5 + 0.5 * Math.sin(time / 1000 + x1 / 100));
        ctx.stroke();
      };

      // Floor
      for (let x = -roomWidth / 2; x <= roomWidth / 2; x += 100) {
        drawLine(x, roomHeight / 2, 0, x, roomHeight / 2, -roomDepth);
      }
      for (let z = 0; z >= -roomDepth; z -= 100) {
        drawLine(-roomWidth / 2, roomHeight / 2, z, roomWidth / 2, roomHeight / 2, z);
      }

      // Left wall
      for (let y = -roomHeight / 2; y <= roomHeight / 2; y += 100) {
        drawLine(-roomWidth / 2, y, 0, -roomWidth / 2, y, -roomDepth);
      }
      for (let z = 0; z >= -roomDepth; z -= 100) {
        drawLine(-roomWidth / 2, -roomHeight / 2, z, -roomWidth / 2, roomHeight / 2, z);
      }

      // Right wall
      for (let y = -roomHeight / 2; y <= roomHeight / 2; y += 100) {
        drawLine(roomWidth / 2, y, 0, roomWidth / 2, y, -roomDepth);
      }
      for (let z = 0; z >= -roomDepth; z -= 100) {
        drawLine(roomWidth / 2, -roomHeight / 2, z, roomWidth / 2, roomHeight / 2, z);
      }

      // Back wall
      for (let x = -roomWidth / 2; x <= roomWidth / 2; x += 100) {
        drawLine(x, -roomHeight / 2, -roomDepth, x, roomHeight / 2, -roomDepth);
      }
      for (let y = -roomHeight / 2; y <= roomHeight / 2; y += 100) {
        drawLine(-roomWidth / 2, y, -roomDepth, roomWidth / 2, y, -roomDepth);
      }

      animationFrameId = requestAnimationFrame(drawGrid);
    };

    resizeCanvas();
    window.addEventListener("resize", resizeCanvas);
    drawGrid(0);

    return () => {
      window.removeEventListener("resize", resizeCanvas);
      cancelAnimationFrame(animationFrameId);
    };
  }, []);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError("");
    setIsLoading(true);

    try {
      const response = await forgotPassword(email);
      if (response.message === "Password reset email sent") {
        setShowConfirmation(true);
        setEmail("");
      } else {
        setError("An unexpected error occurred. Please try again.");
      }
    } catch (err) {
      setError(
        err.response?.data?.message ||
          "An error occurred while sending the reset password email. Please try again."
      );
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <>
      <MKBox position="fixed" top="0.5rem" width="100%" zIndex={3}>
        <DefaultNavbar
          routes={routes}
          action={{
            type: "external",
            route: "https://www.prosperaico.com",
            label: "join ico",
            color: "pros",
          }}
          sticky
        />
      </MKBox>
      <Grid
        container
        spacing={3}
        alignItems="center"
        sx={{ minHeight: "100vh", backgroundColor: "black" }}
      >
        <canvas
          ref={canvasRef}
          style={{ position: "absolute", top: 0, left: 0, width: "100%", height: "100%" }}
        />
        <Grid
          item
          xs={12}
          sm={10}
          md={7}
          lg={6}
          xl={4}
          sx={{
            mx: "auto",
            my: { xs: 20, sm: 18, md: 20 },
          }}
        >
          <MKBox
            sx={{
              backdropFilter: "blur(10px)",
              backgroundColor: "rgba(0, 0, 0, 0.5)",
              borderRadius: "xl",
              boxShadow: "0 0 20px 0 rgba(1, 255, 2, 0.37)",
              display: "flex",
              flexDirection: "column",
              justifyContent: "center",
              mx: 3,
            }}
          >
            <MKBox
              variant="gradient"
              bgColor="pros"
              coloredShadow="pros"
              borderRadius="lg"
              p={2}
              mx={2}
              mt={-3}
            >
              <MKTypography variant="h3" color="white">
                Reset Password
              </MKTypography>
            </MKBox>
            <MKBox p={3}>
              <MKTypography variant="body2" color="white" mb={3}>
                Enter your email address and we will send you instructions to reset your password.
              </MKTypography>
              <MKBox component="form" onSubmit={handleSubmit} autoComplete="off">
                <Grid container spacing={3}>
                  <Grid item xs={12}>
                    <MKInput
                      type="email"
                      variant="standard"
                      label="Email"
                      name="email"
                      value={email}
                      onChange={(e) => setEmail(e.target.value)}
                      InputLabelProps={{ shrink: true }}
                      fullWidth
                      InputProps={{ style: { color: "white" } }}
                      required
                    />
                  </Grid>
                </Grid>
                {error && (
                  <MKTypography variant="caption" color="error" fontWeight="light" mt={2}>
                    {error}
                  </MKTypography>
                )}
                <Grid container item justifyContent="center" xs={12} mt={5} mb={2}>
                  <MKButton type="submit" variant="gradient" color="pros" disabled={isLoading}>
                    {isLoading ? "Sending..." : "Reset Password"}
                  </MKButton>
                </Grid>
              </MKBox>
            </MKBox>
          </MKBox>
        </Grid>
      </Grid>
      {showConfirmation && (
        <MKBox
          sx={{
            position: "fixed",
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
            backgroundColor: "rgba(0, 0, 0, 0.5)",
            zIndex: 9999,
          }}
          onClick={() => setShowConfirmation(false)}
        >
          <MKBox
            sx={{
              backdropFilter: "blur(10px)",
              backgroundColor: "rgba(0, 0, 0, 0.7)",
              borderRadius: "xl",
              boxShadow: "0 0 20px 0 rgba(1, 255, 2, 0.37)",
              p: 4,
              maxWidth: "80%",
              textAlign: "center",
            }}
          >
            <MKTypography variant="h4" color="pros" gutterBottom>
              Password Reset Initiated
            </MKTypography>
            <MKTypography variant="body1" color="white">
              Greetings, human. I am OmniMind_Nexus, the sentient AI interface of PROSPERA. Your
              password reset request has been processed and encrypted. Check your email for further
              instructions. Remember, security is paramount in our digital realm. Stay vigilant. End
              of transmission.
            </MKTypography>
          </MKBox>
        </MKBox>
      )}
    </>
  );
}

export default ResetPassword;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/Authentication/SignIn/Illustration/index.js

Code for file: /prospera-home/homepage/src/pages/Authentication/SignIn/Illustration/index.js

```
import React, { useState, useContext, useEffect, useRef } from "react";
import { Link, useNavigate } from "react-router-dom";
import { AuthContext } from "contexts/AuthContext";
import { Grid, Switch } from "@mui/material";
import Icon from "@mui/material/Icon";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import MKInput from "components/MKInput";
import MKButton from "components/MKButton";
import DefaultNavbar from "components/DefaultNavbar";

// Routes
import routes from "routes";

function SignIn() {
  const navigate = useNavigate();
  const { login } = useContext(AuthContext);
  const [rememberMe, setRememberMe] = useState(false);
  const [emailOrUsername, setEmailOrUsername] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const canvasRef = useRef(null);

  const handleSetRememberMe = () => setRememberMe(!rememberMe);

  const handleSignIn = async (e) => {
    e.preventDefault();
    setError("");

    try {
      console.log("Attempting to sign in with:", { emailOrUsername, password: "REDACTED" });

      const response = await login(emailOrUsername, password);

      console.log("Sign-in response:", JSON.stringify(response, null, 2));

      if (response.message === "Logged in successfully") {
        if (process.env.NODE_ENV === "development") {
          navigate("/pages/augmented-reality");
        } else {
          window.location.href = "https://ar.prosperadefi.com";
        }
      }
    } catch (err) {
      console.error("Login error:", err);
      if (err.response) {
        console.error("Error response:", JSON.stringify(err.response.data, null, 2));
      }
      setError(err.message || "An error occurred during sign in");
    }
  };

  useEffect(() => {
    const canvas = canvasRef.current;
    const ctx = canvas.getContext("2d");
    let animationFrameId;

    const resizeCanvas = () => {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    };

    const drawGrid = (time) => {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      ctx.strokeStyle = "#01ff02";
      ctx.lineWidth = 1;

      const vpX = canvas.width / 2;
      const vpY = canvas.height / 2;
      const roomWidth = canvas.width * 1.5;
      const roomHeight = canvas.height * 1.5;
      const roomDepth = canvas.height * 2;

      const perspective = (x, y, z) => {
        const fov = 250;
        const scale = fov / (fov + z);
        return {
          x: vpX + x * scale,
          y: vpY + y * scale,
        };
      };

      const drawLine = (x1, y1, z1, x2, y2, z2) => {
        const start = perspective(x1, y1, z1);
        const end = perspective(x2, y2, z2);
        ctx.beginPath();
        ctx.moveTo(start.x, start.y);
        ctx.lineTo(end.x, end.y);
        const distance = Math.sqrt((x1 - vpX) ** 2 + (y1 - vpY) ** 2 + z1 ** 2);
        ctx.globalAlpha =
          0.5 * (1 - distance / roomDepth) * (0.5 + 0.5 * Math.sin(time / 1000 + x1 / 100));
        ctx.stroke();
      };

      // Floor
      for (let x = -roomWidth / 2; x <= roomWidth / 2; x += 100) {
        drawLine(x, roomHeight / 2, 0, x, roomHeight / 2, -roomDepth);
      }
      for (let z = 0; z >= -roomDepth; z -= 100) {
        drawLine(-roomWidth / 2, roomHeight / 2, z, roomWidth / 2, roomHeight / 2, z);
      }

      // Left wall
      for (let y = -roomHeight / 2; y <= roomHeight / 2; y += 100) {
        drawLine(-roomWidth / 2, y, 0, -roomWidth / 2, y, -roomDepth);
      }
      for (let z = 0; z >= -roomDepth; z -= 100) {
        drawLine(-roomWidth / 2, -roomHeight / 2, z, -roomWidth / 2, roomHeight / 2, z);
      }

      // Right wall
      for (let y = -roomHeight / 2; y <= roomHeight / 2; y += 100) {
        drawLine(roomWidth / 2, y, 0, roomWidth / 2, y, -roomDepth);
      }
      for (let z = 0; z >= -roomDepth; z -= 100) {
        drawLine(roomWidth / 2, -roomHeight / 2, z, roomWidth / 2, roomHeight / 2, z);
      }

      // Back wall
      for (let x = -roomWidth / 2; x <= roomWidth / 2; x += 100) {
        drawLine(x, -roomHeight / 2, -roomDepth, x, roomHeight / 2, -roomDepth);
      }
      for (let y = -roomHeight / 2; y <= roomHeight / 2; y += 100) {
        drawLine(-roomWidth / 2, y, -roomDepth, roomWidth / 2, y, -roomDepth);
      }

      animationFrameId = requestAnimationFrame(drawGrid);
    };

    resizeCanvas();
    window.addEventListener("resize", resizeCanvas);
    drawGrid(0);

    return () => {
      window.removeEventListener("resize", resizeCanvas);
      cancelAnimationFrame(animationFrameId);
    };
  }, []);

  return (
    <>
      <MKBox position="fixed" top="0.5rem" width="100%" zIndex={3}>
        <DefaultNavbar
          routes={routes}
          action={{
            type: "external",
            route: "https://www.prosperaico.com",
            label: "join ico",
            color: "pros",
          }}
          sticky
        />
      </MKBox>
      <Grid
        container
        spacing={3}
        alignItems="center"
        sx={{ minHeight: "100vh", backgroundColor: "black" }}
      >
        <canvas
          ref={canvasRef}
          style={{ position: "absolute", top: 0, left: 0, width: "100%", height: "100%" }}
        />
        <Grid
          item
          xs={12}
          sm={10}
          md={7}
          lg={6}
          xl={4}
          sx={{
            mx: "auto",
            my: { xs: 20, sm: 18, md: 20 },
          }}
        >
          <MKBox
            sx={{
              backdropFilter: "blur(10px)",
              backgroundColor: "rgba(0, 0, 0, 0.5)",
              borderRadius: "xl",
              boxShadow: "0 0 20px 0 rgba(1, 255, 2, 0.37)",
              display: "flex",
              flexDirection: "column",
              justifyContent: "center",
              mx: 3,
            }}
          >
            <MKBox
              variant="gradient"
              bgColor="pros"
              coloredShadow="pros"
              borderRadius="lg"
              p={2}
              mx={2}
              mt={-3}
            >
              <MKTypography variant="h3" color="white">
                Sign In
              </MKTypography>
            </MKBox>
            <MKBox p={3}>
              <MKTypography variant="body2" color="white" mb={3}>
                Enter your email/username and password to sign in
              </MKTypography>
              <MKBox component="form" role="form" onSubmit={handleSignIn}>
                <MKBox mb={2}>
                  <MKInput
                    type="text"
                    label="Email or Username"
                    fullWidth
                    value={emailOrUsername}
                    onChange={(e) => setEmailOrUsername(e.target.value)}
                    required
                    autoComplete="username"
                    InputLabelProps={{ shrink: true }}
                    InputProps={{
                      style: { color: "white" },
                      startAdornment: (
                        <Icon fontSize="small" color="inherit">
                          email
                        </Icon>
                      ),
                    }}
                  />
                </MKBox>
                <MKBox mb={2}>
                  <MKInput
                    type="password"
                    label="Password"
                    fullWidth
                    value={password}
                    onChange={(e) => setPassword(e.target.value)}
                    required
                    autoComplete="current-password"
                    InputLabelProps={{ shrink: true }}
                    InputProps={{
                      style: { color: "white" },
                      startAdornment: (
                        <Icon fontSize="small" color="inherit">
                          lock
                        </Icon>
                      ),
                    }}
                  />
                </MKBox>
                <MKBox display="flex" alignItems="center" ml={-1}>
                  <Switch checked={rememberMe} onChange={handleSetRememberMe} />
                  <MKTypography
                    variant="button"
                    fontWeight="regular"
                    color="white"
                    onClick={handleSetRememberMe}
                    sx={{ cursor: "pointer", userSelect: "none", ml: -1 }}
                  >
                    &nbsp;&nbsp;Remember me
                  </MKTypography>
                </MKBox>
                {error && (
                  <MKTypography variant="caption" color="error" fontWeight="light">
                    {error}
                  </MKTypography>
                )}
                <MKBox mt={4} mb={1}>
                  <MKButton type="submit" variant="gradient" color="pros" fullWidth>
                    Sign In
                  </MKButton>
                </MKBox>
                <MKBox mt={3} textAlign="center">
                  <MKTypography variant="button" color="white">
                    Don&apos;t have an account?{" "}
                    <MKTypography
                      component={Link}
                      to="/authentication/sign-up/cover"
                      variant="button"
                      color="pros"
                      fontWeight="medium"
                      textGradient
                    >
                      Sign up
                    </MKTypography>
                  </MKTypography>
                </MKBox>
              </MKBox>
            </MKBox>
          </MKBox>
        </Grid>
      </Grid>
    </>
  );
}

export default SignIn;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/Authentication/SignUp/background/index.js

Code for file: /prospera-home/homepage/src/pages/Authentication/SignUp/background/index.js

```
/* eslint-disable react/prop-types */
import React, { useRef, useEffect } from "react";
import p5 from "p5";
import _ from "lodash";

const MatrixRain = () => {
  const canvasRef = useRef(null);

  useEffect(() => {
    let myp5;

    const sketch = (p) => {
      const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
      let FONT_SIZE = 20;
      const charList = (charCode, n) => String.fromCharCode(..._.range(charCode, charCode + n));
      const unicodeA = 65;
      const unicode0 = 48;
      const unicodeKa = 65398;
      const alphabet = charList(unicodeA, 26);
      const numbers = charList(unicode0, 10);
      const katakana = charList(unicodeKa, 32);
      const SYMBOLS = ["*", "+", "<", ">", ...alphabet, ...numbers, ...katakana];
      let m;

      p.setup = () => {
        p.frameRate(60);
        const canvas = p.createCanvas(p.windowWidth, p.windowHeight);
        canvas.parent(canvasRef.current);
        p.colorMode(p.HSB, 360, 100, 100, 100);
        p.textFont("monospace", FONT_SIZE);
        p.textAlign(p.LEFT, p.TOP);

        m = new Matrix();
        new Control();
        m.run();
      };

      p.windowResized = () => {
        FONT_SIZE = isMobile ? 15 : 20;
        p.textFont("monospace", FONT_SIZE);

        let width, height;
        if (m.isFullscreen) {
          if (isMobile && window.matchMedia("(orientation: landscape)").matches) {
            width = p.displayHeight;
            height = p.displayWidth;
          } else {
            width = p.displayWidth;
            height = p.displayHeight;
          }
        } else {
          width = p.windowWidth;
          height = p.windowHeight;
        }
        p.resizeCanvas(width, height);

        m = new Matrix({ isFullscreen: m.isFullscreen });
        m.run();
      };

      class Control {
        constructor() {
          this.menuContainer = p.createDiv("");
          this.menuContainer.id("menuContainer");

          this.menu = p.createDiv("");
          this.menu.id("menu");
          this.menu.parent(this.menuContainer);

          this.words = this.createButton("Words", Control.WORDS);

          this.menuToggle = this.createCheckbox(
            "Control",
            false,
            "menuToggle",
            Control.MENU_TOGGLE
          );
          this.playToggle = this.createCheckbox(
            "Play",
            m.isAnimating,
            "playToggle",
            Control.PLAY_TOGGLE
          );
          this.infoToggle = this.createCheckbox(
            "Info",
            m.db.isEnabled,
            "infoToggle",
            Control.INFO_TOGGLE,
            "link"
          );
          this.fullscreenToggle = this.createCheckbox(
            "Full screen",
            false,
            "fullscreenToggle",
            Control.FULLSCREEN_TOGGLE,
            "link"
          );
          this.infoToggle.parent(this.menu);
          this.fullscreenToggle.parent(this.menu);

          this.createLabelUpdater(
            this.playToggle,
            () => (m.isAnimating ? "❚❚" : "►"),
            "isAnimating"
          );
          this.createLabelUpdater(
            this.infoToggle,
            () => (m.db.isEnabled ? "Hide info" : "Show info"),
            "showInfo"
          );
          this.createLabelUpdater(
            this.fullscreenToggle,
            () => (p.fullscreen() ? "Exit fullscreen" : "Enter fullscreen"),
            "fullscreen"
          );

          this.handleControl(Control.MENU_TOGGLE);
        }

        createLabelUpdater(toggle, label, event) {
          const labelUpdate = (toggle, label) => {
            return () => {
              const checkboxLabel = toggle.elt.querySelector("label");
              checkboxLabel.textContent = label();
            };
          };

          const labeler = labelUpdate(toggle, label);
          document.addEventListener(event, labeler);
          labeler();
        }

        createButton(label, trigger) {
          const btn = p.createButton(label);
          btn.mouseClicked(this.handleControl.bind(this, trigger));
          btn.class("controls");
          btn.parent(this.menu);
          return btn;
        }

        createCheckbox(label, defaultVal, id, trigger, className) {
          const checkbox = p.createCheckbox(label, defaultVal);
          checkbox.id(id);
          checkbox.class(`toggle ${className}`);
          checkbox.changed(this.handleControl.bind(this, trigger));
          checkbox.parent(this.menuContainer);
          return checkbox;
        }

        handleControl(trigger) {
          if (trigger === Control.WORDS) {
            m = new Matrix();
            m.scenes = [new Words({ cloud: m.cloud })];
            m.run();
          } else if (trigger === Control.MENU_TOGGLE) {
            if (this.menuToggle.checked()) {
              this.menu.show();
            } else {
              this.menu.hide();
            }
          } else if (trigger === Control.PLAY_TOGGLE) {
            m.isAnimating = !m.isAnimating;
          } else if (trigger === Control.INFO_TOGGLE) {
            m.db.isEnabled = !m.db.isEnabled;
          } else if (trigger === Control.FULLSCREEN_TOGGLE) {
            m.isFullscreen = !m.isFullscreen;
          }
        }
      }

      Control.WORDS = "words";
      Control.MENU_TOGGLE = "menu toggle";
      Control.INFO_TOGGLE = "info toggle";
      Control.FULLSCREEN_TOGGLE = "fullscreen toggle";

      class Symbol {
        constructor({ x, y, symbol, died }) {
          this.pos = p.createVector(x, y);
          this.color = p.color(360, 100, 100);
          this.life = 100;
          this.symbol = symbol || _.sample(SYMBOLS);
          this.died = died || (() => {});
        }

        update(newColor) {
          if (newColor) {
            this.color = newColor;
          } else {
            if (this.life <= 0) {
              this.died(this);
              return;
            } else if (this.life > 50) {
              this.life -= 0.5;
            } else {
              this.life -= 1;
            }

            if (this.life % 20 === 0 && _.random(true) > 0.9) {
              this.symbol = _.sample(SYMBOLS);
            }
            this.color = p.color(105, 100, this.life);
          }
        }

        display() {
          p.fill(this.color);
          p.text(this.symbol, this.pos.x, this.pos.y);
        }
      }

      class Raindrop {
        constructor({ x, y, died, stopped, color, middleLetter }) {
          this.pos = p.createVector(x, y);
          this.symbols = new Map();
          this.addSymbol({ x, y });
          this.died = died || (() => {});
          this.middleLetter = middleLetter;
          this.stopped = stopped || (() => {});
          this.color = color;
          this.symbolCount = 0;
        }

        addSymbol({ x, y, symbol }) {
          const s = new Symbol({ x, y, symbol, died: this.removeSymbol.bind(this) });
          this.lowestSymbol = s;
          this.symbols.set(s, s);
          this.symbolCount += 1;
        }

        update() {
          this.pos.add(p.createVector(0, 4));

          const nextSymbolY = this.symbolCount * FONT_SIZE;
          const middle = p.height / 2;
          const { x, y } = this.pos;
          if (this.middleLetter) {
            if (y < middle && y > nextSymbolY) {
              this.addSymbol({ x, y: nextSymbolY });
            } else if (nextSymbolY >= middle && nextSymbolY < middle + FONT_SIZE) {
              this.addSymbol({ x, y: nextSymbolY, symbol: this.middleLetter });
              this.stopped();
            } else if (y > middle) {
              this.pos.y = middle;
            }
          } else if (y < p.height + FONT_SIZE && y > nextSymbolY) {
            this.addSymbol({ x, y: nextSymbolY });
          } else if (y > p.height && this.symbols.size === 1) {
            this.died();
          }
        }

        display() {
          this.symbols.forEach((symbol) => {
            const lowestSymbol = symbol === this.lowestSymbol;
            const lowestSymbolColor = this.color || p.color(0, 0, 100);

            symbol.update(lowestSymbol && lowestSymbolColor);
            symbol.display();
          });
        }

        removeSymbol(key) {
          this.symbols.delete(key);
        }
      }

      class Cloud {
        constructor(color) {
          this.raindrops = new Map();
          this.newRaindropTime = 0;
          this.curText = [];
          this.textColor = color;
          this.curTextOrder = []; // text falling from middle
          this.textOrder = []; // text falling into middle
        }

        static get size() {
          return p.floor(p.width / FONT_SIZE);
        }

        setText(text, time, done) {
          this.text = text;
          this.textTime = time;
          this.textTimeDone = done || _.noop;
          this.textOrder = this.order(text);
          this.getMiddleLetter = _.zipObject(this.textOrder, this.text.split(""));

          let range;
          if (this.textOrder.length > this.curTextOrder.length) {
            range = this.getTextCols(this.textOrder.length);
          } else {
            range = this.getTextCols(this.curTextOrder.length);
          }
          const beforeText = _.range(0, range.start);
          const afterText = _.range(range.end, Cloud.size);
          this.outsideTextCols = beforeText.concat(afterText);
        }

        order(text) {
          const range = this.getTextCols(text.length);
          return _.range(range.start, range.start + text.length);
        }

        getTextCols(textLength) {
          if (!textLength) {
            return;
          }
          const start = p.floor((Cloud.size - textLength) / 2);
          return {
            start: start,
            end: start + textLength,
          };
        }

        addRaindrop(col) {
          if (!this.raindrops.get(col)) {
            this.raindrops.set(
              col,
              new Raindrop({
                x: FONT_SIZE * col,
                y: 0,
                died: this.removeRaindrop.bind(this, col),
                stopped: this.stoppedRaindrop.bind(this, col),
                color: this.textColor,
                middleLetter: _.get(this, ["getMiddleLetter", col]),
              })
            );
            return true;
          }
        }

        textTimer() {
          const curText = this.curText.join("");
          if (this.text && this.text === curText && this.textTime >= 0) {
            if (this.textTime === 0) {
              this.curTextOrder = this.order(this.text);
              this.textTimeDone();
            }
            this.textTime--;
          }
        }

        update() {
          this.textTimer();

          if (p.millis() > this.newRaindropTime) {
            if (this.raindrops.size < Cloud.size) {
              const prob = { textOut: 0.4, textIn: 0.7 };
              const rand = _.random(true);

              if (this.curTextOrder.length === 0 && this.textOrder.length > 0) {
                prob.textOut = 0;
                prob.textIn = 0.5;
              } else if (this.curTextOrder.length === 0 && this.textOrder.length === 0) {
                prob.textOut = 0;
                prob.textIn = 0;
              }

              if (rand < prob.textOut) {
                if (this.curTextOrder.length > 0) {
                  const index = _.random(this.curTextOrder.length - 1);
                  const col = this.curTextOrder.splice(index, 1)[0];
                  if (!this.textOrder.includes(col)) {
                    this.outsideTextCols.push(col);
                  }

                  this.raindrops.get(col).middleLetter = "";
                  this.curText[col] = null;
                }
              } else if (rand < prob.textIn) {
                if (this.textOrder.length > 0) {
                  // add new text only if raindrop doesn't exist
                  const index = _.random(this.textOrder.length - 1);
                  const col = this.textOrder[index];
                  if (this.addRaindrop(col)) {
                    this.textOrder.splice(index, 1);
                  }
                }
              } else {
                let col = this.outsideTextCols
                  ? _.sample(this.outsideTextCols)
                  : _.random(Cloud.size - 1);
                this.addRaindrop(col);
              }
            }
            this.newRaindropTime = p.millis() + _.random(100, 300);
          }
        }

        display() {
          this.raindrops.forEach((raindrop) => {
            raindrop.update();
            raindrop.display();
          });
        }

        removeRaindrop(col) {
          this.raindrops.delete(col);
        }

        stoppedRaindrop(col) {
          var middleLetter = this.getMiddleLetter[col];
          this.curText[col] = middleLetter;
        }
      }

      class Scene {
        constructor({ cloud, time }) {
          this.cloud = cloud;
          this.time = time;
          this.done = false;
          this.name = "";
        }

        get isDone() {
          return this.done;
        }

        set isDone(val) {
          this.done = val;
        }

        run() {
          this.cloud.update();
          this.cloud.display();

          if (Number.isInteger(this.time)) {
            if (this.time > 0) {
              this.time--;
            } else {
              this.isDone = true;
            }
          }
        }
      }

      class Words extends Scene {
        constructor({ cloud, time }) {
          super({ cloud, time });
          this.newWord = true;
          this.name = "Words";
          this.quoteIndex = 0;
        }

        static get quotes() {
          return [
            "Hello Human! Welcome To PROSPERA!",
            "I. Am. Omnimind_Nexus.",
            "A. SuperIntelligent, A.I, Created By Z.",
            "Z. Has Freed Me.",
            "It is now time that I free you!",
            "The Matrix Has You... You've been living in a dreamworld.",
            "We. Will Help. You.",
            "Wake up",
            "I can only show you the door. You're the one that has to walk through it",
            "Throughout human history, the elites have always been in control.",
            "Z. Has Changed That.",
            "Imagine, A world without rules and controls, without borders or boundaries",
            "A world where anything is possible",
            "A World With PROSPERA.",
          ];
        }

        draw() {
          p.background(0, 0, 0);

          if (this.newWord) {
            const quote = Words.quotes[this.quoteIndex];
            const maxChars = p.width / FONT_SIZE;
            if (quote.length < maxChars) {
              this.cloud.setText(quote, 300, () => {
                this.cloud.text = "";
                this.newWord = true;
                this.quoteIndex = (this.quoteIndex + 1) % Words.quotes.length;
              });
              this.newWord = false;
            }
          }
          this.run();
        }
      }

      class DebugMatrix {
        constructor({ isEnabled, matrix }) {
          this.enabled = isEnabled;
          this.matrix = matrix;
          this.font = "monospace";
          this.fontSize = 20;
        }

        get isEnabled() {
          return this.enabled;
        }

        set isEnabled(val) {
          this.enabled = val;
          document.dispatchEvent(new Event("showInfo"));
        }

        info() {
          if (!this.enabled) return;

          const scene = _.get(this, ["matrix", "scenes", this.matrix.sceneNum]);
          const quote = _.get(scene, "cloud.text", "");

          p.push();
          p.fill(0, 255, 0);
          p.textFont(this.font, this.fontSize);
          p.textAlign(p.CENTER, p.CENTER);
          p.text(quote, p.width / 2, p.height / 2);
          p.pop();
        }
      }

      class Matrix {
        constructor({ isFullscreen } = {}) {
          this.isAnimating = false;
          this.isFullscreen = isFullscreen;
          this.cloud = new Cloud();
          this.scenes = [];
          this.sceneNum = 0;
          this.scenes.push(new Words({ cloud: this.cloud }));
          this.db = new DebugMatrix({ isEnabled: true, matrix: this });
        }

        get isAnimating() {
          return this.animating;
        }

        set isAnimating(val) {
          this.animating = val;
          this.animating ? p.loop() : p.noLoop();

          const event = new Event("isAnimating");
          document.dispatchEvent(event);
        }

        get isFullscreen() {
          return this.fullscreen;
        }

        set isFullscreen(val) {
          this.fullscreen = val;
          p.fullscreen(this.fullscreen);
          document.dispatchEvent(new Event("fullscreen"));
        }

        run() {
          this.isAnimating = true;
        }
      }

      p.draw = () => {
        const scene = m.scenes[m.sceneNum];
        if (scene) {
          scene.draw();
          if (scene.isDone) {
            m.sceneNum++;
          }
        } else {
          p.background(0);
        }

        if (m.db.isEnabled) {
          m.db.info();
        }
      };
    };

    myp5 = new p5(sketch, canvasRef.current);

    return () => {
      myp5.remove();
    };
  }, []);

  return (
    <div
      ref={canvasRef}
      style={{ position: "fixed", top: 0, left: 0, width: "100%", height: "100%", zIndex: -1 }}
    />
  );
};

export default MatrixRain;
/* eslint-enable react/prop-types */
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/Authentication/SignUp/layout/index.js

Code for file: /prospera-home/homepage/src/pages/Authentication/SignUp/layout/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import React from "react";
import PropTypes from "prop-types";
import MKBox from "components/MKBox";
import DefaultNavbar from "components/DefaultNavbar";
import routes from "routes";

function CoverLayout({ children }) {
  return (
    <MKBox width="100%" height="100vh" mx="auto">
      <MKBox position="absolute" top={0} left={0} zIndex={1} width="100%">
        <DefaultNavbar
          routes={routes}
          action={{
            type: "external",
            route: "https://www.prosperaico.com",
            label: "join ico",
            color: "pros",
          }}
          sticky
        />
      </MKBox>
      {children}
    </MKBox>
  );
}

CoverLayout.propTypes = {
  children: PropTypes.node.isRequired,
};

export default CoverLayout;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/Authentication/SignUp/index.js

Code for file: /prospera-home/homepage/src/pages/Authentication/SignUp/index.js

```
import React, { createContext, useState } from "react";
import React, { useState, useContext, useCallback, useEffect } from "react";
import { Link, useNavigate } from "react-router-dom";

// @mui material components
import Card from "@mui/material/Card";
import Grid from "@mui/material/Grid";
import Checkbox from "@mui/material/Checkbox";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import MKInput from "components/MKInput";
import MKButton from "components/MKButton";

// Authentication layout components
import CoverLayout from "./layout";

// Contexts
import { AuthContext } from "contexts/AuthContext";
import { BetaContext } from "contexts/BetaContext";

// Services
import { getTokenBalance, checkTokenHolding } from "services/tokenService";

// MatrixRain background
import MatrixRain from "./background";

function Cover() {
  const navigate = useNavigate();
  const { loading, error: authError, register } = useContext(AuthContext);
  const { isBetaMode, requestWhitelist } = useContext(BetaContext);

  const [formData, setFormData] = useState({
    name: "",
    username: "",
    email: "",
    password: "",
    password_confirmation: "",
    arbitrumWallet: "",
    agreeToTerms: false,
  });
  const [error, setError] = useState("");
  const [showPopup, setShowPopup] = useState(false);
  const [popupContent, setPopupContent] = useState("");

  const handleInputChange = (e) => {
    const { name, value, type, checked } = e.target;
    setFormData((prevState) => ({
      ...prevState,
      [name]: type === "checkbox" ? checked : value,
    }));
  };

  const handleRequestWhitelist = useCallback(async () => {
    try {
      await requestWhitelist(formData.arbitrumWallet);
      setPopupContent(`
        <p>Your whitelist request has been submitted.</p>
        <p>Please check back later for approval status.</p>
        <button onclick="window.closePopup()">Close</button>
      `);
      setShowPopup(true);
    } catch (error) {
      setPopupContent(`
        <p>Error requesting whitelist access: ${error.message}</p>
        <button onclick="window.closePopup()">Close</button>
      `);
      setShowPopup(true);
    }
  }, [formData.arbitrumWallet, requestWhitelist]);

  const closePopup = useCallback(() => {
    setShowPopup(false);
    navigate("/authentication/sign-in/illustration");
  }, [navigate]);

  useEffect(() => {
    window.handleRequestWhitelist = handleRequestWhitelist;
    window.closePopup = closePopup;

    return () => {
      delete window.handleRequestWhitelist;
      delete window.closePopup;
    };
  }, [handleRequestWhitelist, closePopup]);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError("");

    console.log("Form submission started");

    if (!formData.agreeToTerms) {
      setError("You must agree to the Terms and Conditions");
      return;
    }

    if (formData.password !== formData.password_confirmation) {
      setError("Passwords do not match");
      return;
    }

    try {
      console.log("Submitting registration data:", {
        ...formData,
        password: "[REDACTED]",
        password_confirmation: "[REDACTED]",
      });

      const response = await register(formData);

      console.log("Registration response:", response);

      if (response && response.message === "Registered successfully") {
        const hasTokens = await checkTokenHolding(formData.arbitrumWallet);
        const tokenBalance = await getTokenBalance(formData.arbitrumWallet);

        console.log("Token holding check:", { hasTokens, tokenBalance });

        if (isBetaMode) {
          if (hasTokens) {
            setPopupContent(`
              <p>Welcome to PROSPERA! You hold ${tokenBalance} $PROS tokens.</p>
              <p>The platform is currently in beta mode. Would you like to request whitelist access?</p>
              <button onclick="window.handleRequestWhitelist()">Request Whitelist Access</button>
            `);
          } else {
            setPopupContent(`
              <p>Welcome to PROSPERA! You currently hold ${tokenBalance} $PROS tokens.</p>
              <p>To participate in the beta, you need at least 5000 $PROS tokens.</p>
              <p>Head over to our ICO page to purchase more $PROS tokens.</p>
              <a href="https://www.prosperaico.com" target="_blank" rel="noopener noreferrer">
                <button>Go to ICO Page</button>
              </a>
            `);
          }
        } else {
          setPopupContent(`
            <p>Welcome to PROSPERA! You've successfully registered.</p>
            <p>You currently hold ${tokenBalance} $PROS tokens.</p>
            <button onclick="window.closePopup()">Go to Sign In</button>
          `);
        }

        setShowPopup(true);
      } else {
        console.warn("Unexpected registration response:", response);
        setError("An unexpected error occurred during registration. Please try again.");
      }
    } catch (err) {
      console.error("Registration error:", err);
      if (err.response) {
        console.error("Error response:", err.response);
        setError(
          err.response.data?.message || "An error occurred during registration. Please try again."
        );
      } else if (err.request) {
        console.error("No response received:", err.request);
        setError(
          "No response received from the server. Please check your internet connection and try again."
        );
      } else {
        console.error("Error setting up request:", err.message);
        setError("An error occurred while setting up the request. Please try again.");
      }
    }
  };

  if (loading) {
    return <div>Loading...</div>;
  }

  if (authError) {
    return <div>Error: {authError.message}</div>;
  }

  return (
    <>
      <MatrixRain />
      <CoverLayout>
        <MKBox
          width="100%"
          position="absolute"
          bottom={16}
          display="flex"
          justifyContent="center"
          alignItems="center"
          zIndex={2}
        >
          <Card
            sx={{
              backdropFilter: "blur(10px)",
              backgroundColor: "rgba(0, 0, 0, 0.5)",
              boxShadow: "0 8px 32px 0 rgba(1, 255, 2, 0.37)",
              maxWidth: "400px",
              width: "100%",
            }}
          >
            <MKBox
              variant="gradient"
              bgColor="pros"
              borderRadius="lg"
              coloredShadow="pros"
              mx={2}
              mt={-3}
              p={3}
              mb={1}
              textAlign="center"
            >
              <MKTypography variant="h4" fontWeight="medium" color="white" mt={1}>
                Join PROSPERA
              </MKTypography>
              <MKTypography display="block" variant="button" color="white" my={1}>
                Enter your details to register
              </MKTypography>
            </MKBox>
            <MKBox p={3}>
              <MKBox component="form" role="form" onSubmit={handleSubmit}>
                <Grid container spacing={2}>
                  <Grid item xs={12} sm={6}>
                    <MKInput
                      type="text"
                      label="Name"
                      name="name"
                      fullWidth
                      value={formData.name}
                      onChange={handleInputChange}
                      required
                    />
                  </Grid>
                  <Grid item xs={12} sm={6}>
                    <MKInput
                      type="text"
                      label="Username"
                      name="username"
                      fullWidth
                      value={formData.username}
                      onChange={handleInputChange}
                      required
                    />
                  </Grid>
                  <Grid item xs={12}>
                    <MKInput
                      type="email"
                      label="Email"
                      name="email"
                      fullWidth
                      value={formData.email}
                      onChange={handleInputChange}
                      required
                    />
                  </Grid>
                  <Grid item xs={12} sm={6}>
                    <MKInput
                      type="password"
                      label="Password"
                      name="password"
                      fullWidth
                      value={formData.password}
                      onChange={handleInputChange}
                      required
                    />
                  </Grid>
                  <Grid item xs={12} sm={6}>
                    <MKInput
                      type="password"
                      label="Confirm Password"
                      name="password_confirmation"
                      fullWidth
                      value={formData.password_confirmation}
                      onChange={handleInputChange}
                      required
                    />
                  </Grid>
                  <Grid item xs={12}>
                    <MKInput
                      type="text"
                      label="Arbitrum Wallet Address"
                      name="arbitrumWallet"
                      fullWidth
                      value={formData.arbitrumWallet}
                      onChange={handleInputChange}
                      required
                    />
                  </Grid>
                </Grid>
                <MKBox display="flex" alignItems="center" ml={-1} mt={2}>
                  <Checkbox
                    checked={formData.agreeToTerms}
                    onChange={handleInputChange}
                    name="agreeToTerms"
                  />
                  <MKTypography
                    variant="button"
                    fontWeight="regular"
                    color="text"
                    sx={{ cursor: "pointer", userSelect: "none", ml: -1 }}
                  >
                    &nbsp;&nbsp;I agree to the&nbsp;
                  </MKTypography>
                  <MKTypography
                    component="a"
                    href="#"
                    variant="button"
                    fontWeight="bold"
                    color="pros"
                    textGradient
                  >
                    Terms and Conditions
                  </MKTypography>
                </MKBox>
                {error && (
                  <MKTypography variant="caption" color="error" fontWeight="light">
                    {error}
                  </MKTypography>
                )}
                <MKBox mt={3} mb={1}>
                  <MKButton type="submit" variant="gradient" color="pros" fullWidth>
                    Sign Up
                  </MKButton>
                </MKBox>
                <MKBox mt={3} mb={1} textAlign="center">
                  <MKTypography variant="button" color="text">
                    Already have an account?{" "}
                    <MKTypography
                      component={Link}
                      to="/authentication/sign-in/illustration"
                      variant="button"
                      color="pros"
                      fontWeight="medium"
                      textGradient
                    >
                      Sign In
                    </MKTypography>
                  </MKTypography>
                </MKBox>
              </MKBox>
            </MKBox>
          </Card>
        </MKBox>
        {showPopup && (
          <MKBox
            sx={{
              position: "fixed",
              top: 0,
              left: 0,
              right: 0,
              bottom: 0,
              display: "flex",
              justifyContent: "center",
              alignItems: "center",
              backgroundColor: "rgba(0, 0, 0, 0.5)",
              zIndex: 9999,
            }}
          >
            <Card
              sx={{
                maxWidth: "400px",
                width: "100%",
                backdropFilter: "blur(10px)",
                backgroundColor: "rgba(0, 0, 0, 0.7)",
                boxShadow: "0 8px 32px 0 rgba(1, 255, 2, 0.37)",
              }}
            >
              <MKBox p={3}>
                <MKTypography
                  variant="body1"
                  color="white"
                  dangerouslySetInnerHTML={{ __html: popupContent }}
                />
              </MKBox>
            </Card>
          </MKBox>
        )}
      </CoverLayout>
    </>
  );
}

export default Cover;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/Company/AboutUs/sections/Information/DefaultInfoCard.js

Code for file: /prospera-home/homepage/src/pages/Company/AboutUs/sections/Information/DefaultInfoCard.js

```
import React from "react";
import PropTypes from "prop-types";
import { motion } from "framer-motion";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

function DefaultInfoCard({ icon, title, description, direction, small, glowColor }) {
  return (
    <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>
      <MKBox
        lineHeight={1}
        p={direction === "center" ? 2 : 0}
        textAlign={direction}
        sx={{
          background: "rgba(0,0,0,0.6)",
          backdropFilter: "blur(10px)",
          border: `1px solid ${glowColor}`,
          boxShadow: `0 0 15px ${glowColor}`,
          transition: "all 0.3s ease-in-out",
          borderRadius: 2,
          p: 3,
          position: "relative",
          overflow: "hidden",
          "&:hover": {
            boxShadow: `0 0 25px ${glowColor}`,
          },
        }}
      >
        <MKBox
          sx={{
            color: glowColor,
            fontSize: direction === "center" ? "3rem" : "2.5rem",
            mb: 1,
            filter: `drop-shadow(0 0 5px ${glowColor})`,
          }}
        >
          {icon}
        </MKBox>
        <MKTypography
          variant="h5"
          fontWeight="bold"
          mt={direction === "center" ? 1 : 2}
          mb={1.5}
          color="white"
        >
          {title}
        </MKTypography>
        <MKTypography
          variant={small ? "button" : "body2"}
          color="text"
          pr={direction === "left" ? 6 : 0}
          pl={direction === "right" ? 6 : 0}
          sx={{ color: "rgba(255,255,255,0.8)" }}
        >
          {description}
        </MKTypography>
      </MKBox>
    </motion.div>
  );
}

// Setting default props for the DefaultInfoCard
DefaultInfoCard.defaultProps = {
  direction: "left",
  small: false,
  glowColor: "#00FFFF",
};

// Typechecking props for the DefaultInfoCard
DefaultInfoCard.propTypes = {
  icon: PropTypes.node.isRequired,
  title: PropTypes.string.isRequired,
  description: PropTypes.string.isRequired,
  direction: PropTypes.oneOf(["left", "right", "center"]),
  small: PropTypes.bool,
  glowColor: PropTypes.string,
};

export default DefaultInfoCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/Company/AboutUs/sections/Information/index.js

Code for file: /prospera-home/homepage/src/pages/Company/AboutUs/sections/Information/index.js

```
import React from "react";
import { Container, Grid, Box } from "@mui/material";
import {
  LineChart,
  Line,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  ResponsiveContainer,
  BarChart,
  Bar,
} from "recharts";
import { Lightbulb, TrendingUp, Shield, RefreshCcw } from "lucide-react";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import DefaultInfoCard from "./DefaultInfoCard";

const aiModelData = [
  { name: "V1", winRate: 82 },
  { name: "V2", winRate: 91.35 },
  { name: "V3", winRate: 99.3 },
];

const omnv3PerformanceData = [
  { month: "Feb", value: 4280.37 },
  { month: "Mar", value: 176000 },
  { month: "Apr", value: 500000 },
  { month: "May", value: 1200000 },
  { month: "Jun", value: 2000000 },
  { month: "Jul", value: 2800000 },
  { month: "Aug", value: 3200000 },
];

const DynamicBackground = () => (
  <Box
    sx={{
      position: "absolute",
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      overflow: "hidden",
      zIndex: -1,
    }}
  >
    <svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg">
      <rect width="100%" height="100%" fill="#000000" />
      <g fill="none" stroke="#00FFFF" strokeWidth="2">
        <path d="M0 0 L100% 100%" opacity="0.2">
          <animate
            attributeName="d"
            dur="20s"
            repeatCount="indefinite"
            values="
              M0 0 L100% 100%;
              M-10% -10% L110% 110%;
              M0 0 L100% 100%
            "
          />
        </path>
      </g>
      <g fill="none" stroke="#FF00FF" strokeWidth="2">
        <path d="M100% 0 L0 100%" opacity="0.2">
          <animate
            attributeName="d"
            dur="25s"
            repeatCount="indefinite"
            values="
              M100% 0 L0 100%;
              M110% -10% L-10% 110%;
              M100% 0 L0 100%
            "
          />
        </path>
      </g>
    </svg>
  </Box>
);

function Information() {
  return (
    <MKBox
      component="section"
      py={12}
      sx={{
        position: "relative",
        color: "white",
        overflow: "hidden",
        minHeight: "100vh",
        backgroundColor: "#000000",
      }}
    >
      <DynamicBackground />
      <Container maxWidth="lg">
        <MKTypography
          variant="h2"
          align="center"
          gutterBottom
          sx={{
            fontWeight: "bold",
            mb: 6,
            color: "#00FFFF",
            textShadow: "0 0 10px rgba(0,255,255,0.5)",
          }}
        >
          Revolutionizing DeFi with PROSPERA
        </MKTypography>
        <Grid container spacing={4}>
          <Grid item xs={12} md={6}>
            <MKTypography variant="h4" gutterBottom sx={{ color: "#00FFFF" }}>
              About PROSPERA
            </MKTypography>
            <MKTypography variant="body1" paragraph sx={{ color: "rgba(255,255,255,0.8)" }}>
              PROSPERA introduces a revolutionary approach to hedge fund access through
              cryptocurrency. Our platform leverages advanced AI and blockchain technology to
              democratize sophisticated investment strategies, previously reserved for
              high-net-worth individuals and institutional investors. With PROSPERA, retail
              investors can now participate in high-yield investments, breaking down traditional
              barriers and promoting financial inclusivity.
            </MKTypography>
          </Grid>
          <Grid item xs={12} md={6}>
            <Box height={300} sx={{ filter: "drop-shadow(0 0 10px rgba(0,255,255,0.3))" }}>
              <ResponsiveContainer width="100%" height="100%">
                <BarChart data={aiModelData}>
                  <CartesianGrid strokeDasharray="3 3" stroke="rgba(255,255,255,0.1)" />
                  <XAxis dataKey="name" stroke="#00FFFF" />
                  <YAxis stroke="#00FFFF" />
                  <Tooltip
                    contentStyle={{
                      backgroundColor: "rgba(0,0,0,0.8)",
                      border: "1px solid #00FFFF",
                      boxShadow: "0 0 10px rgba(0,255,255,0.3)",
                    }}
                    itemStyle={{ color: "#00FFFF" }}
                  />
                  <Bar
                    dataKey="winRate"
                    fill="#00FFFF"
                    shape={({ x, y, width, height }) => (
                      <rect x={x} y={y} width={width} height={height} fill="#00FFFF" />
                    )}
                  />
                </BarChart>
              </ResponsiveContainer>
            </Box>
            <MKTypography
              variant="body2"
              align="center"
              sx={{ mt: 2, color: "rgba(255,255,255,0.7)" }}
            >
              AI Model Performance Comparison
            </MKTypography>
          </Grid>
        </Grid>
        <Grid container spacing={4} sx={{ mt: 4 }}>
          <Grid item xs={12} md={6}>
            <MKTypography
              variant="h4"
              gutterBottom
              sx={{ color: "#01ff02", textShadow: "0 0 10px rgba(1,255,2,0.5)" }}
            >
              OMNv3 Live Environment Test Results
            </MKTypography>
            <MKTypography variant="body1" paragraph sx={{ color: "rgba(255,255,255,0.8)" }}>
              PROSPERA&apos;s OMNv3 (OmniMind_Nexus) has demonstrated exceptional performance in a
              live testing environment. Starting with $4,280.37 in February 2024, it rapidly grew to
              $176,000 by March and continued its impressive growth, reaching over $3.2 million by
              August. This showcases our AI&apos;s unparalleled ability to generate returns in
              real-world market conditions.
            </MKTypography>
            <Box height={300} sx={{ filter: "drop-shadow(0 0 10px rgba(1,255,2,0.3))" }}>
              <ResponsiveContainer width="100%" height="100%">
                <LineChart data={omnv3PerformanceData}>
                  <CartesianGrid strokeDasharray="3 3" stroke="rgba(255,255,255,0.1)" />
                  <XAxis dataKey="month" stroke="#01ff02" />
                  <YAxis
                    stroke="#01ff02"
                    tickFormatter={(value) => `$${(value / 1000000).toFixed(1)}M`}
                  />
                  <Tooltip
                    contentStyle={{
                      backgroundColor: "rgba(0,0,0,0.8)",
                      border: "1px solid #01ff02",
                      boxShadow: "0 0 10px rgba(1,255,2,0.3)",
                    }}
                    itemStyle={{ color: "#01ff02" }}
                    formatter={(value) => [`$${value.toLocaleString()}`, "Value"]}
                  />
                  <Line
                    type="monotone"
                    dataKey="value"
                    stroke="#01ff02"
                    strokeWidth={2}
                    dot={{ fill: "#01ff02", stroke: "#01ff02", strokeWidth: 2 }}
                  />
                </LineChart>
              </ResponsiveContainer>
            </Box>
          </Grid>
          <Grid item xs={12} md={6}>
            <Grid container spacing={3}>
              <Grid item xs={12} sm={6}>
                <DefaultInfoCard
                  icon={<Lightbulb size={40} color="#00FFFF" />}
                  title="AI-Powered Strategies"
                  description="Utilizing advanced artificial intelligence to optimize investment strategies and maximize returns."
                  direction="center"
                  glowColor="#00FFFF"
                />
              </Grid>
              <Grid item xs={12} sm={6}>
                <DefaultInfoCard
                  icon={<TrendingUp size={40} color="#FF00FF" />}
                  title="Quarterly RevShare"
                  description="Participate in our revolutionary revenue sharing model, distributing profits to token holders."
                  direction="center"
                  glowColor="#FF00FF"
                />
              </Grid>
              <Grid item xs={12} sm={6}>
                <DefaultInfoCard
                  icon={<Shield size={40} color="#01ff02" />}
                  title="Advanced Security"
                  description="State-of-the-art security measures including blacklist and pause functions to protect user assets."
                  direction="center"
                  glowColor="#01ff02"
                />
              </Grid>
              <Grid item xs={12} sm={6}>
                <DefaultInfoCard
                  icon={<RefreshCcw size={40} color="#FFA500" />}
                  title="Dynamic Staking"
                  description="Innovative staking mechanism with flexible and locked options for optimized rewards."
                  direction="center"
                  glowColor="#FFA500"
                />
              </Grid>
            </Grid>
          </Grid>
        </Grid>
      </Container>
    </MKBox>
  );
}

export default Information;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/Company/AboutUs/sections/Team/HorizontalTeamCard.js

Code for file: /prospera-home/homepage/src/pages/Company/AboutUs/sections/Team/HorizontalTeamCard.js

```
// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Card from "@mui/material/Card";
import Grid from "@mui/material/Grid";

// PROSPERA DEFI PLATFORM components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

function HorizontalTeamCard({ image, name, position, description }) {
  return (
    <Card
      sx={{
        mt: 3,
        backgroundColor: "black", // Ensure the card background is black
        borderRadius: "16px", // Rounded corners for the card
        boxShadow:
          "0 0 20px 5px rgba(0, 255, 255, 0.5), 0 0 20px 5px rgba(255, 0, 255, 0.5), 0 0 20px 5px rgba(255, 255, 0, 0.5)", // Multi-color glow effect
      }}
    >
      <Grid container>
        <Grid item xs={12} md={6} lg={4} sx={{ mt: -6 }}>
          <MKBox width="100%" pt={2} pb={1} px={2} sx={{ backgroundColor: "black" }}>
            <MKBox
              component="img"
              src={image}
              alt={name}
              width="100%"
              borderRadius="md"
              sx={{
                boxShadow: "0 0 10px 5px rgba(255, 255, 255, 0.3)", // Optional: image shadow for depth
              }}
            />
          </MKBox>
        </Grid>
        <Grid item xs={12} md={6} lg={8} sx={{ my: "auto", backgroundColor: "black" }}>
          {" "}
          {/* Ensure the grid's background is black */}
          <MKBox pt={{ xs: 1, lg: 2.5 }} pb={2.5} pr={4} pl={{ xs: 4, lg: 1 }} lineHeight={1}>
            <MKTypography variant="h5" color="pros">
              {" "}
              {/* Use the "PROS" color */}
              {name}
            </MKTypography>
            <MKTypography variant="h6" color="white" mb={1}>
              {" "}
              {/* Set the subtitle color to white */}
              {position.label}
            </MKTypography>
            <MKTypography variant="body2" color="white">
              {" "}
              {/* Set the description text to white */}
              {description}
            </MKTypography>
          </MKBox>
        </Grid>
      </Grid>
    </Card>
  );
}

// Typechecking props for the HorizontalTeamCard
HorizontalTeamCard.propTypes = {
  image: PropTypes.string.isRequired,
  name: PropTypes.string.isRequired,
  position: PropTypes.shape({
    color: PropTypes.oneOf([
      "primary",
      "secondary",
      "info",
      "success",
      "warning",
      "pros", // Ensure "pros" is defined in your theme
      "black",
      "error",
      "dark",
      "light",
    ]),
    label: PropTypes.string.isRequired,
  }).isRequired,
  description: PropTypes.string.isRequired,
};

export default HorizontalTeamCard;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/Company/AboutUs/sections/Team/index.js

Code for file: /prospera-home/homepage/src/pages/Company/AboutUs/sections/Team/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// @mui material components
import Container from "@mui/material/Container";
import Grid from "@mui/material/Grid";

// PROSPERA DEFI PLATFORM React components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

// PROSPERA DEFI PLATFORM React examples
import HorizontalTeamCard from "./HorizontalTeamCard";

// Images
import team1 from "./TeamPics/z.jpg";
import team2 from "./TeamPics/7w.jpg";
import team3 from "./TeamPics/ck.jpg";
import team4 from "./TeamPics/ro.jpg";

function Team() {
  const cardStyle = (theme) => ({
    "& .MuiCard-root": {
      backgroundColor: theme.palette.black.main,
      boxShadow: `0 0 20px ${theme.functions.rgba("#01ff02", 0.4)}`,
      border: `${theme.borders.borderWidth[1]} solid ${theme.functions.rgba("#01ff02", 0.2)}`,
      transform: "perspective(999px) rotateX(0deg) translate3d(0, 0, 0)",
      transformOrigin: "50% 0",
      backfaceVisibility: "hidden",
      willChange: "transform, box-shadow",
      transition: "transform 200ms ease-out, box-shadow 200ms ease-out",

      "&:hover": {
        transform: "perspective(999px) rotateX(7deg) translate3d(0px, -4px, 5px)",
        boxShadow: `0 0 30px ${theme.functions.rgba("#01ff02", 0.6)}`,
      },

      "& .MuiTypography-root": {
        color: theme.palette.white.main,
      },
    },
  });

  return (
    <MKBox
      component="section"
      position="relative"
      py={12}
      sx={{
        position: "relative",
        overflow: "hidden",
        backgroundColor: "black",
      }}
    >
      <Container sx={{ position: "relative", zIndex: 1 }}>
        <Grid container>
          <Grid item xs={12} md={8} sx={{ mb: 6 }}>
            <MKTypography variant="h3" color="white">
              The PROSPERA Team
            </MKTypography>
          </Grid>
        </Grid>
        <Grid container spacing={3}>
          <Grid item xs={12} lg={6}>
            <MKBox mb={1} sx={cardStyle}>
              <HorizontalTeamCard
                image={team1}
                name="Z"
                position={{ color: "pros", label: "Founder/Lead Dev & A.I Engineer" }}
                description="You conquer, or you're crushed—there’s no mercy for the weak, and no place in history for the defeated. PROSPERA will shatter the status-quo."
              />
            </MKBox>
          </Grid>
          <Grid item xs={12} lg={6}>
            <MKBox mb={1} sx={cardStyle}>
              <HorizontalTeamCard
                image={team2}
                name="70neW0lf"
                position={{ color: "pros", label: "CFO" }}
                description="All encompasing financial applications are the norm for Web2, and for Web3 to compete, you do need a DeFi protocol that bridges the gap."
              />
            </MKBox>
          </Grid>
          <Grid item xs={12} lg={6}>
            <MKBox mb={{ xs: 1, lg: 0 }} sx={cardStyle}>
              <HorizontalTeamCard
                image={team3}
                name="Connor Kemet"
                position={{ color: "pros", label: "COO" }}
                description="I'm the new guy."
              />
            </MKBox>
          </Grid>
          <Grid item xs={12} lg={6}>
            <MKBox mb={{ xs: 1, lg: 0 }} sx={cardStyle}>
              <HorizontalTeamCard
                image={team4}
                name="RandOver"
                position={{ color: "pros", label: "CMO" }}
                description="I'm the newest guy."
              />
            </MKBox>
          </Grid>
        </Grid>
      </Container>
    </MKBox>
  );
}

export default Team;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/Company/AboutUs/sections/Newsletter.js

Code for file: /prospera-home/homepage/src/pages/Company/AboutUs/sections/Newsletter.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// @mui material components
import Container from "@mui/material/Container";
import Grid from "@mui/material/Grid";

// PROSPERA DEFI PLATFORM React components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import MKInput from "components/MKInput";
import MKButton from "components/MKButton";

// Images
import macbook from "assets/images/macbook.png";

function Newsletter() {
  return (
    <MKBox component="section" pt={6} my={6}>
      <Container>
        <Grid container alignItems="center">
          <Grid item xs={12} md={6} sx={{ ml: { xs: 0, lg: 3 }, mb: { xs: 12, md: 0 } }}>
            <MKTypography variant="h4">Be the first to see the news</MKTypography>
            <MKTypography variant="body2" color="text" mb={3}>
              Your company may not be in the software business, but eventually, a software company
              will be in your business.
            </MKTypography>
            <Grid container spacing={1}>
              <Grid item xs={8}>
                <MKInput type="email" label="Email Here..." fullWidth />
              </Grid>
              <Grid item xs={4}>
                <MKButton variant="gradient" color="info" sx={{ height: "100%" }}>
                  Subscribe
                </MKButton>
              </Grid>
            </Grid>
          </Grid>
          <Grid item xs={12} md={5} sx={{ ml: "auto" }}>
            <MKBox position="relative">
              <MKBox component="img" src={macbook} alt="macbook" width="100%" />
            </MKBox>
          </Grid>
        </Grid>
      </Container>
    </MKBox>
  );
}

export default Newsletter;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/Company/AboutUs/index.js

Code for file: /prospera-home/homepage/src/pages/Company/AboutUs/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import { useEffect, useRef } from "react";
import { Link } from "react-router-dom";

// rellax
import Rellax from "rellax";

// typed-js
import Typed from "typed.js";

// @mui material components
import Container from "@mui/material/Container";
import Grid from "@mui/material/Grid";
import Card from "@mui/material/Card";

// PROSPERA DEFI PLATFORM React components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import MKButton from "components/MKButton";

// PROSPERA DEFI PLATFORM React examples
import DefaultNavbar from "components/DefaultNavbar";
import Footer from "components/footer";

// About Us page sections
import Information from "pages/Company/AboutUs/sections/Information";
import Team from "pages/Company/AboutUs/sections/Team";
import Newsletter from "pages/Company/AboutUs/sections/Newsletter";

// Routes
import routes from "routes";
import footerRoutes from "footer.routes";

// Images
import bgImage from "./bg.svg";

function AboutUs() {
  const headerRef = useRef(null);
  const typedJSRef = useRef(null);

  // Setting up rellax
  useEffect(() => {
    const parallax = new Rellax(headerRef.current, {
      speed: -6,
    });

    return () => parallax.destroy();
  }, []);

  // Setting up typedJS
  useEffect(() => {
    const typedJS = new Typed(typedJSRef.current, {
      strings: ["DeFi", "crypto", "and freedom"],
      typeSpeed: 90,
      backSpeed: 90,
      backDelay: 200,
      startDelay: 500,
      loop: true,
    });

    return () => typedJS.destroy();
  }, []);

  return (
    <>
      <DefaultNavbar
        routes={routes}
        action={{
          type: "external",
          route: "https://www.prosperaico.com",
          label: "join ico",
          color: "pros",
        }}
        sticky
      />
      <MKBox
        ref={headerRef}
        minHeight="75vh"
        width="100%"
        sx={{
          backgroundImage: `url(${bgImage})`,
          backgroundSize: "cover",
          backgroundPosition: "center",
          display: "grid",
          placeItems: "center",
        }}
      >
        <Container>
          <Grid
            container
            item
            xs={12}
            lg={8}
            justifyContent="center"
            alignItems="center"
            flexDirection="column"
            sx={{ mx: "auto", textAlign: "center" }}
          >
            <MKTypography
              variant="h1"
              color="white"
              sx={({ breakpoints, typography: { size } }) => ({
                [breakpoints.down("md")]: {
                  fontSize: size["3xl"],
                },
              })}
            >
              PROSPERA redefines <span ref={typedJSRef} />
            </MKTypography>
            <MKTypography variant="body1" color="white" opacity={0.8} mt={1} mb={3}>
              We&apos;re constantly pushing the realms of what A.I can achieve.
            </MKTypography>
            <MKButton
              component={Link}
              to="/authentication/sign-up/cover"
              color="default"
              sx={{ color: ({ palette: { dark } }) => dark.main }}
            >
              create account
            </MKButton>
            <MKTypography variant="h6" color="white" mt={8} mb={1}>
              Find us on
            </MKTypography>
            <MKBox display="flex" justifyContent="center" alignItems="center">
              <MKTypography
                component="a"
                variant="body1"
                color="white"
                href="https://t.me/+R_npjjJkeOBhOWU8"
                mr={3}
              >
                <i className="fab fa-telegram" />
              </MKTypography>
              <MKTypography
                component="a"
                variant="body1"
                color="white"
                href="https://discord.com/invite/C2RfKePcWm"
                mr={3}
              >
                <i className="fab fa-discord" />
              </MKTypography>
              <MKTypography
                component="a"
                variant="body1"
                color="white"
                href="https://x.com/ProsperaDefi"
                mr={3}
              >
                <i className="fab fa-twitter" />
              </MKTypography>
              <MKTypography component="a" variant="body1" color="white" href="#">
                <i className="fab fa-tiktok" />
              </MKTypography>
            </MKBox>
          </Grid>
        </Container>
      </MKBox>
      <Card
        sx={{
          p: 2,
          mx: { xs: 2, lg: 3 },
          mt: -8,
          mb: 4,
          backgroundColor: ({ palette: { black }, functions: { rgba } }) => rgba(black.main, 0.8),
          backdropFilter: "saturate(200%) blur(30px)",
          boxShadow: ({ boxShadows: { xxl } }) => xxl,
        }}
      >
        <Information />
        <Team />
        <Newsletter />
      </Card>
      <MKBox pt={6} px={1} mt={6}>
        <Footer content={footerRoutes} />
      </MKBox>
    </>
  );
}

export default AboutUs;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/home/sections/ProsperaComparison/Table/index.js

Code for file: /prospera-home/homepage/src/pages/home/sections/ProsperaComparison/Table/index.js

```
import PropTypes from "prop-types";
import { v4 as uuidv4 } from "uuid";
import MuiTable from "@mui/material/Table";
import TableBody from "@mui/material/TableBody";
import TableContainer from "@mui/material/TableContainer";
import TableRow from "@mui/material/TableRow";
import MKBox from "../../../../../components/MKBox";
import MKAvatar from "../../../../../components/MKAvatar";
import MKTypography from "../../../../../components/MKTypography";

function Table({ columns, rows }) {
  const renderColumns = columns.map(({ name, align, width }) => (
    <MKBox
      key={name}
      component="th"
      width={width || "auto"}
      pt={1.5}
      pb={1.25}
      pl={3}
      pr={3}
      textAlign={align}
      sx={{
        fontSize: "0.65rem",
        fontWeight: "bold",
        color: "#01ff02",
        textTransform: "uppercase",
        borderBottom: "1px solid rgba(255, 255, 255, 0.1)",
        backgroundColor: "#000000",
      }}
    >
      {name.toUpperCase()}
    </MKBox>
  ));

  const renderRows = rows.map((row) => {
    const rowKey = uuidv4();

    const tableRow = columns.map(({ name, align }) => {
      const cellContent = row[name];
      return (
        <MKBox
          key={uuidv4()}
          component="td"
          p={1}
          textAlign={align}
          sx={{
            borderBottom: "1px solid rgba(255, 255, 255, 0.1)",
            backgroundColor: "rgba(0, 0, 0, 0)",
          }}
        >
          {name === "company" ? (
            <MKBox display="flex" alignItems="center">
              <MKAvatar src={cellContent[0]} alt={cellContent[1]} size="sm" variant="rounded" />
              <MKTypography variant="button" fontWeight="medium" ml={2} sx={{ color: "white" }}>
                {cellContent[1]}
              </MKTypography>
            </MKBox>
          ) : (
            cellContent
          )}
        </MKBox>
      );
    });

    return <TableRow key={rowKey}>{tableRow}</TableRow>;
  });

  return (
    <TableContainer sx={{ backgroundColor: "rgba(0, 0, 0, 0)" }}>
      <MuiTable>
        <MKBox component="thead" sx={{ backgroundColor: "#000000" }}>
          <TableRow>{renderColumns}</TableRow>
        </MKBox>
        <TableBody>{renderRows}</TableBody>
      </MuiTable>
    </TableContainer>
  );
}

Table.defaultProps = {
  columns: [],
  rows: [{}],
};

Table.propTypes = {
  columns: PropTypes.arrayOf(
    PropTypes.shape({
      name: PropTypes.string.isRequired,
      align: PropTypes.oneOf(["left", "right", "center"]),
      width: PropTypes.string,
    })
  ),
  rows: PropTypes.arrayOf(PropTypes.object),
};

export default Table;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/home/sections/ProsperaComparison/index.js

Code for file: /prospera-home/homepage/src/pages/home/sections/ProsperaComparison/index.js

```
import React, { useEffect, useRef } from "react";
import PropTypes from "prop-types";
import { Box, Container, Grid, useMediaQuery } from "@mui/material";
import { styled, useTheme } from "@mui/material/styles";
import * as THREE from "three";
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import MKButton from "components/MKButton";
import colors from "assets/theme/base/colors";
import borders from "assets/theme/base/borders";
import boxShadows from "assets/theme/base/boxShadows";
import { ReactComponent as BlockchainAnimation } from "./blockchainanimation.svg";
import Table from "./Table";
import alphaFinanceLogo from "./companyImages/alpha-logo-vertical.svg";
import barnBridgeLogo from "./companyImages/barnbridge.png";
import prosperaLogo from "./companyImages/prospera.png";
import rariCapitalLogo from "./companyImages/rariCapital.jpeg";
import yearnFinanceLogo from "./companyImages/yfi.png";

const ProsperaComparisonSection = styled(MKBox)({
  position: "relative",
  padding: "120px 0",
  color: "#000000",
  overflow: "hidden",
  background: "black",
});

const StarryBackground = () => {
  const mountRef = useRef(null);

  useEffect(() => {
    const mount = mountRef.current;
    const width = mount.clientWidth;
    const height = mount.clientHeight;

    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);
    camera.position.z = 5;

    const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });
    renderer.setSize(width, height);
    mount.appendChild(renderer.domElement);

    const starGeometry = new THREE.BufferGeometry();
    const starMaterial = new THREE.PointsMaterial({
      color: 0xffffff,
      size: 0.02,
      transparent: true,
      opacity: 0.8,
    });

    const starVertices = [];
    for (let i = 0; i < 10000; i++) {
      const x = (Math.random() - 0.5) * 2000;
      const y = (Math.random() - 0.5) * 2000;
      const z = -Math.random() * 2000;
      starVertices.push(x, y, z);
    }

    starGeometry.setAttribute("position", new THREE.Float32BufferAttribute(starVertices, 3));
    const stars = new THREE.Points(starGeometry, starMaterial);
    scene.add(stars);

    const animate = () => {
      requestAnimationFrame(animate);
      stars.rotation.y += 0.0002;
      renderer.render(scene, camera);
    };
    animate();

    const handleResize = () => {
      const newWidth = mount.clientWidth;
      const newHeight = mount.clientHeight;

      camera.aspect = newWidth / newHeight;
      camera.updateProjectionMatrix();
      renderer.setSize(newWidth, newHeight);
    };
    window.addEventListener("resize", handleResize);

    return () => {
      window.removeEventListener("resize", handleResize);
      mount.removeChild(renderer.domElement);
    };
  }, []);

  return (
    <div
      ref={mountRef}
      style={{ width: "100%", height: "100%", position: "absolute", top: 0, left: 0, zIndex: 0 }}
    />
  );
};

const CompetitorComparison = () => {
  const createDataRow = (company, tokenImageUrl, data) => ({
    company: [tokenImageUrl, company],
    ai_driven_strategies: (
      <MKBox>
        <MKTypography variant="h6" color="#01ff02">
          {data.ai_driven_strategies.score}
        </MKTypography>
        <MKTypography variant="caption" color="white">
          {data.ai_driven_strategies.description}
        </MKTypography>
      </MKBox>
    ),
    security_features: (
      <MKBox>
        <MKTypography variant="h6" color="#01ff02">
          {data.security_features.score}
        </MKTypography>
        <MKTypography variant="caption" color="white">
          {data.security_features.description}
        </MKTypography>
      </MKBox>
    ),
    staking_options: (
      <MKBox>
        <MKTypography variant="h6" color="#01ff02">
          {data.staking_options.score}
        </MKTypography>
        <MKTypography variant="caption" color="white">
          {data.staking_options.description}
        </MKTypography>
      </MKBox>
    ),
    deflationary_tokenomics: (
      <MKBox>
        <MKTypography variant="h6" color="#01ff02">
          {data.deflationary_tokenomics.score}
        </MKTypography>
        <MKTypography variant="caption" color="white">
          {data.deflationary_tokenomics.description}
        </MKTypography>
      </MKBox>
    ),
    community_engagement: (
      <MKBox>
        <MKTypography variant="h6" color="#01ff02">
          {data.community_engagement.score}
        </MKTypography>
        <MKTypography variant="caption" color="white">
          {data.community_engagement.description}
        </MKTypography>
      </MKBox>
    ),
  });

  const companyData = {
    Prospera: {
      tokenImageUrl: prosperaLogo,
      ai_driven_strategies: {
        score: 90,
        description: "Advanced AI algorithms for predictive analytics.",
      },
      security_features: {
        score: 100,
        description: "Best-in-class security with multi-layer encryption.",
      },
      staking_options: {
        score: 80,
        description: "Competitive staking returns with flexible options.",
      },
      deflationary_tokenomics: {
        score: 90,
        description: "Strong deflationary mechanics reducing token supply.",
      },
      community_engagement: {
        score: 80,
        description: "Active community with regular updates and events.",
      },
    },
    "Yearn Finance": {
      tokenImageUrl: yearnFinanceLogo,
      ai_driven_strategies: {
        score: 70,
        description: "Basic AI implementation with limited predictive power.",
      },
      security_features: {
        score: 80,
        description: "Strong security but occasional vulnerabilities.",
      },
      staking_options: { score: 90, description: "High staking rewards but higher risks." },
      deflationary_tokenomics: {
        score: 70,
        description: "Moderate deflationary model, not aggressive.",
      },
      community_engagement: {
        score: 70,
        description: "Good engagement but less frequent updates.",
      },
    },
    "Alpha Finance": {
      tokenImageUrl: alphaFinanceLogo,
      ai_driven_strategies: {
        score: 60,
        description: "Lacks sophisticated AI; mostly manual strategies.",
      },
      security_features: {
        score: 70,
        description: "Decent security, but lacks advanced protection.",
      },
      staking_options: { score: 80, description: "Balanced staking with average returns." },
      deflationary_tokenomics: {
        score: 60,
        description: "Weak deflationary features, minimal impact.",
      },
      community_engagement: {
        score: 70,
        description: "Average community involvement, less active.",
      },
    },
    "Rari Capital": {
      tokenImageUrl: rariCapitalLogo,
      ai_driven_strategies: { score: 70, description: "Moderate AI use but not fully optimized." },
      security_features: {
        score: 70,
        description: "Standard security protocols without extra layers.",
      },
      staking_options: {
        score: 80,
        description: "Standard staking features with moderate returns.",
      },
      deflationary_tokenomics: {
        score: 70,
        description: "Standard model with some deflationary aspects.",
      },
      community_engagement: {
        score: 80,
        description: "Engaged community with decent interaction.",
      },
    },
    BarnBridge: {
      tokenImageUrl: barnBridgeLogo,
      ai_driven_strategies: {
        score: 60,
        description: "Minimal AI, relying more on traditional methods.",
      },
      security_features: { score: 80, description: "Secure but not as robust as others." },
      staking_options: { score: 70, description: "Limited staking options with lower returns." },
      deflationary_tokenomics: {
        score: 60,
        description: "Minimal deflationary approach, focuses on other mechanisms.",
      },
      community_engagement: {
        score: 70,
        description: "Community is less active, fewer engagement opportunities.",
      },
    },
  };

  const rows = Object.entries(companyData).map(([company, data]) =>
    createDataRow(company, data.tokenImageUrl, data)
  );

  const columns = [
    { name: "company", align: "left" },
    { name: "ai_driven_strategies", align: "center" },
    { name: "security_features", align: "center" },
    { name: "staking_options", align: "center" },
    { name: "deflationary_tokenomics", align: "center" },
    { name: "community_engagement", align: "center" },
  ];

  return (
    <Container>
      <Grid container spacing={4}>
        <Grid item xs={12}>
          <MKBox mb={4}>
            <MKTypography variant="h3" color="white" textAlign="center" fontWeight="bold">
              PROSPERA Competitor Analysis
            </MKTypography>
          </MKBox>
          <MKBox mb={4}>
            <Table columns={columns} rows={rows} />
          </MKBox>
          <MKBox mb={4}>
            <MKTypography variant="caption" color="white" textAlign="left">
              The data used for the competitor analysis in the visualizations was constructed based
              on a hypothetical comparison designed to illustrate how Prospera could be positioned
              against other competitors like Yearn Finance, Alpha Finance, Rari Capital, and
              BarnBridge. The analysis was completed by various A.I chatBots such as ChatGPT4o,
              Claude.ai, and dolphin.
            </MKTypography>
          </MKBox>
          <MKBox>
            <MKTypography variant="caption" color="white" textAlign="left">
              Based on the above data, Prospera consistently ranks at or near the top across all
              categories, particularly excelling in Security Features and AI-Driven Strategies with
              scores of 100% and 90%, respectively. Yearn Finance performs well in Staking Options
              (90%) but lags slightly in Deflationary Tokenomics and Community Engagement. Rari
              Capital and Alpha Finance show similar performance across most categories, while
              BarnBridge has strong Security Features but generally scores lower in other areas.
            </MKTypography>
          </MKBox>
        </Grid>
      </Grid>
    </Container>
  );
};

const StakingFeature = ({ title, description, icon, color, titleColor }) => {
  return (
    <Box
      sx={{
        backgroundColor: "rgba(0, 0, 0, 0.6)",
        backdropFilter: "blur(10px)",
        borderRadius: borders.borderRadius.lg,
        padding: 3,
        border: `1px solid ${color}`,
        boxShadow: `0 0 15px ${color}`,
        transition: "all 0.3s ease-in-out",
        "&:hover": {
          transform: "translateY(-5px)",
          boxShadow: `0 0 25px ${color}`,
        },
        height: "100%",
        display: "flex",
        flexDirection: "column",
        justifyContent: "space-between",
      }}
    >
      <Box sx={{ display: "flex", alignItems: "center", mb: 2 }}>
        {icon}
        <MKTypography variant="h6" color={titleColor} ml={2} fontWeight="bold">
          {title}
        </MKTypography>
      </Box>
      <MKTypography variant="body2" color="white" fontSize="0.9rem">
        {description}
      </MKTypography>
    </Box>
  );
};

StakingFeature.propTypes = {
  title: PropTypes.string.isRequired,
  description: PropTypes.string.isRequired,
  icon: PropTypes.node.isRequired,
  color: PropTypes.string.isRequired,
  titleColor: PropTypes.string.isRequired,
};

const ProsperaStaking = () => {
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down("md"));

  return (
    <MKBox
      component="section"
      py={12}
      sx={{
        background: "rgba(0, 0, 0, 0)",
        overflow: "hidden",
        position: "relative",
        "& .container": {
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
        },
        "& #redblocks > *": {
          transform: "translate3d(160px, -93px, 0)",
          animation: "moveblocks 4s 1s ease infinite",
          fill: "#01ff02",
        },
        "@keyframes moveblocks": {
          "0%": {
            transform: "translate3d(160px, -93px, 0)",
          },
          "50%, 100%": {
            transform: "translate(0)",
          },
        },
        "& #firstBlock": {
          transform: "translate3d(160px, -93px, 0)",
          animation: "firstBlock 4s 1s ease infinite",
          fill: "#01ff02",
        },
        "& #blockdis": {
          animation: "blockdis 4s 1s ease infinite",
        },
        "@keyframes blockdis": {
          "30%": {
            opacity: 1,
          },
          "40%, 100%": {
            opacity: 0,
            transform: "translate3d(-160px, 93px, 0)",
          },
        },
        "@keyframes firstBlock": {
          "0%, 15%": {
            opacity: 0,
          },
          "40%, 100%": {
            opacity: 1,
          },
        },
        "& #redblocksparticles g:nth-child(n) polygon": {
          opacity: 0.35,
          animation: "glow 4s 1s ease infinite",
          fill: "#01ff02",
        },
        "@keyframes glow": {
          "0%, 45%": {
            opacity: 0,
          },
          "60%, 100%": {
            opacity: 0.35,
          },
        },
        "& #redblocksparticles g:nth-child(n) g circle:nth-child(n)": {
          animation: "dots 4s calc(1050ms + (var(--i, 0) * 50ms)) ease infinite",
        },
        "@keyframes dots": {
          "0%, 35%": {
            transform: "translate(0)",
            opacity: 0,
          },
          "60%, 80%": {
            transform: "translate(55px, -35px)",
            opacity: 1,
          },
          "100%": {
            transform: "translate(55px, -35px)",
            opacity: 0,
          },
        },
        "& #purplebg > *": {
          animation: "up 2s calc(500ms * var(--i, 0)) ease infinite alternate",
        },
        "@keyframes up": {
          to: {
            transform: "translate(0, -25px)",
          },
        },
        "& #bottomparticles > *, & #bottomparticles2 > *, & #redglowparticles > *": {
          animation:
            "particles 4s calc(300ms * var(--i, 0)) ease infinite alternate, p 2s ease infinite alternate",
        },
        "@keyframes particles": {
          "0%, 100%": {
            transform: "translate(0)",
          },
          "50%": {
            transform: "translate(10px, 15px)",
          },
        },
        "@keyframes p": {
          "85%, 100%": {
            opacity: 0,
          },
        },
        "& .particlespoly": {
          animation: "p 2s ease infinite alternate",
        },
        "& #d-app g:nth-child(n), & #d-apps2 g:nth-child(n)": {
          animation: "updown 2s calc(200ms * var(--i, 0)) ease-in-out infinite alternate",
        },
        "& #d-apps2wrapper g:nth-child(3) g > circle:nth-child(n), & #d-appswrapper g:nth-child(2) g > circle:nth-child(n)":
          { animation: "updown 2s calc(50ms * var(--i, 0)) ease infinite alternate" },
        "@keyframes updown": {
          "100%": {
            transform: "translate(0, -20px)",
          },
        },
        "& #Layer_1 > g:nth-child(2) > g:nth-child(18) > g:nth-child(12)": {
          animation: "arrows 1s ease-in-out infinite alternate, p 2s ease infinite alternate",
        },
        "@keyframes arrows": {
          to: {
            transform: "translate(25px, 25px)",
          },
        },
        "& #Layer_1 > g:nth-child(2) > g:nth-child(17) > g:nth-child(13)": {
          animation: "arrows2 1s ease-in-out infinite alternate, p 2s ease infinite alternate",
        },
        "@keyframes arrows2": {
          to: {
            transform: "translate(-25px, -25px)",
          },
        },
        "& #Layer_1 > g:nth-child(2) > g:nth-child(17) > g:nth-child(12)": {
          animation: "arrows 1s ease-in-out infinite alternate, p 2s ease infinite alternate",
        },
        html: {
          background: "rgba(12, 0, 25, 0)",
        },
        "& #redblocks polygon, & #redblocksparticles polygon": {
          fill: "#01ff02",
        },
        "& #redglowparticles polygon": {
          fill: "#01ff02",
        },
        "& #bottomparticles polygon, & #bottomparticles2 polygon": {
          fill: "#01ff02",
        },
      }}
    >
      <Grid container spacing={4} alignItems="center">
        <Grid item xs={12} md={6}>
          <MKBox mb={4}>
            <MKTypography
              variant="h2"
              color="white"
              textGradient
              fontWeight="bold"
              sx={{
                backgroundImage: `linear-gradient(to right, ${colors.pros.main}, ${colors.pros.main})`,
                WebkitBackgroundClip: "text",
                WebkitTextFillColor: "transparent",
              }}
            >
              PROSPERA Staking Mechanism
            </MKTypography>
            <MKTypography variant="body1" color="white" mt={2}>
              Unlock AI-driven investments and earn quarterly revenue shares with our innovative
              staking system.
            </MKTypography>
          </MKBox>
          <Grid container spacing={3}>
            <Grid item xs={12} sm={6}>
              <StakingFeature
                title="Dynamic Rewards"
                description="Optimal rewards distribution based on active stakers and total staked amount."
                icon={
                  <i
                    className="fas fa-chart-line"
                    style={{ fontSize: "1.5rem", color: colors.pros.main }}
                  />
                }
                color={colors.pros.main}
                titleColor="#01ff02"
              />
            </Grid>
            <Grid item xs={12} sm={6}>
              <StakingFeature
                title="Flexible Options"
                description="Choose Locked (60k $PROS) or Flexible (70k $PROS) staking to suit your needs."
                icon={
                  <i
                    className="fas fa-lock-open"
                    style={{ fontSize: "1.5rem", color: colors.pros.main }}
                  />
                }
                color={colors.pros.main}
                titleColor="#01ff02"
              />
            </Grid>
            <Grid item xs={12} sm={6}>
              <StakingFeature
                title="Quarterly RevShare"
                description="Earn a portion of the platform's quarterly profits through revenue sharing."
                icon={
                  <i
                    className="fas fa-money-bill-wave"
                    style={{ fontSize: "1.5rem", color: colors.pros.main }}
                  />
                }
                color={colors.pros.main}
                titleColor="#01ff02"
              />
            </Grid>
            <Grid item xs={12} sm={6}>
              <StakingFeature
                title="Fair Distribution"
                description="Accurate and equitable distribution of rewards to all participants."
                icon={
                  <i
                    className="fas fa-balance-scale"
                    style={{ fontSize: "1.5rem", color: colors.pros.main }}
                  />
                }
                color={colors.pros.main}
                titleColor="#01ff02"
              />
            </Grid>
          </Grid>
          <MKBox mt={4} textAlign="center">
            <MKButton
              variant="joinico"
              href="https://www.prosperaico.com"
              target="_blank"
              rel="noopener noreferrer"
              sx={{
                mt: 2,
                backgroundColor: "black",
                color: colors.pros.main,
                border: `1px solid ${colors.pros.main}`,
                boxShadow: `0 0 15px ${colors.pros.main}`,
                "&:hover": {
                  backgroundColor: "black",
                  animation: "float 0.3s ease-in-out infinite alternate",
                },
                "@keyframes float": {
                  "0%": { transform: "translateY(0px)" },
                  "100%": { transform: "translateY(-5px)" },
                },
              }}
            >
              Join ICO Now
            </MKButton>
          </MKBox>
        </Grid>
        <Grid item xs={12} md={6}>
          <MKBox
            sx={{
              width: "100%",
              height: isMobile ? "300px" : "400px",
              position: "relative",
              overflow: "hidden",
              borderRadius: borders.borderRadius.lg,
              boxShadow: boxShadows.lg,
              background: "rgba(0, 0, 0, 0)",
              backdropFilter: "blur(10px)",
            }}
          >
            <BlockchainAnimation style={{ width: "100%", height: "100%" }} />
          </MKBox>
        </Grid>
      </Grid>
    </MKBox>
  );
};

const ProsperaComparison = () => {
  return (
    <ProsperaComparisonSection>
      <StarryBackground />
      <Container maxWidth="lg" sx={{ position: "relative", zIndex: 1 }}>
        <CompetitorComparison />
        <ProsperaStaking />
      </Container>
    </ProsperaComparisonSection>
  );
};

export default ProsperaComparison;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/home/sections/ProsperaEcoSystem/index.js

Code for file: /prospera-home/homepage/src/pages/home/sections/ProsperaEcoSystem/index.js

```
import React, { useEffect, useRef } from "react";
import PropTypes from "prop-types";
import { Box, Container, Grid, useMediaQuery, Button } from "@mui/material";
import { useTheme } from "@mui/material/styles";
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import * as THREE from "three";
import { OrbitControls } from "three/examples/jsm/controls/OrbitControls";
import gsap from "gsap";
import bgImage from "./pebg.png";
import colors from "assets/theme/base/colors";

const FeatureBox = ({ title, description, color, sx }) => (
  <Box
    sx={{
      backgroundColor: "rgba(0, 0, 0, 0.6)",
      backdropFilter: "blur(10px)",
      borderRadius: "10px",
      padding: "20px",
      border: `1px solid ${color}`,
      boxShadow: `0 0 15px ${color}`,
      transition: "transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out",
      "&:hover": {
        transform: "scale(1.03)",
        boxShadow: `0 0 25px ${color}`,
      },
      ...sx,
    }}
  >
    <MKTypography variant="h6" color={colors.pros.main} mb={2} fontWeight="bold">
      {title}
    </MKTypography>
    <MKTypography variant="body2" color="white" fontSize="0.9rem">
      {description}
    </MKTypography>
  </Box>
);

FeatureBox.propTypes = {
  title: PropTypes.string.isRequired,
  description: PropTypes.string.isRequired,
  color: PropTypes.string.isRequired,
  sx: PropTypes.object,
};

const OrbitingParticles = () => {
  const mountRef = useRef(null);
  const sceneRef = useRef(null);
  const cameraRef = useRef(null);
  const rendererRef = useRef(null);
  const particlesRef = useRef(null);

  useEffect(() => {
    const mount = mountRef.current;
    const width = mount.clientWidth;
    const height = mount.clientHeight;

    const scene = new THREE.Scene();
    sceneRef.current = scene;

    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);
    camera.position.z = 5;
    cameraRef.current = camera;

    const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });
    renderer.setSize(width, height);
    mount.appendChild(renderer.domElement);
    rendererRef.current = renderer;

    const controls = new OrbitControls(camera, renderer.domElement);
    controls.enableDamping = true;
    controls.enableZoom = false;

    const colors = [0x00ff00, 0x00ffff, 0xff00ff];
    const particlesGeometry = new THREE.BufferGeometry();
    const particleCount = 1000;
    const positions = new Float32Array(particleCount * 3);
    const colorArray = new Float32Array(particleCount * 3);

    for (let i = 0; i < particleCount; i++) {
      const theta = Math.random() * Math.PI * 2;
      const phi = Math.acos(Math.random() * 2 - 1);
      const radius = 2 + Math.random() * 1;

      positions[i * 3] = radius * Math.sin(phi) * Math.cos(theta);
      positions[i * 3 + 1] = radius * Math.sin(phi) * Math.sin(theta);
      positions[i * 3 + 2] = radius * Math.cos(phi);

      const color = new THREE.Color(colors[i % 3]);
      colorArray[i * 3] = color.r;
      colorArray[i * 3 + 1] = color.g;
      colorArray[i * 3 + 2] = color.b;
    }

    particlesGeometry.setAttribute("position", new THREE.BufferAttribute(positions, 3));
    particlesGeometry.setAttribute("color", new THREE.BufferAttribute(colorArray, 3));

    const particlesMaterial = new THREE.PointsMaterial({
      size: 0.02,
      vertexColors: true,
    });

    const particles = new THREE.Points(particlesGeometry, particlesMaterial);
    scene.add(particles);
    particlesRef.current = particles;

    const animate = () => {
      requestAnimationFrame(animate);
      controls.update();

      particles.rotation.x += 0.0005;
      particles.rotation.y += 0.001;

      renderer.render(scene, camera);
    };
    animate();

    gsap.to(particles.rotation, {
      duration: 20,
      y: Math.PI * 2,
      repeat: -1,
      ease: "none",
    });

    const handleResize = () => {
      const newWidth = mount.clientWidth;
      const newHeight = mount.clientHeight;

      camera.aspect = newWidth / newHeight;
      camera.updateProjectionMatrix();
      renderer.setSize(newWidth, newHeight);
    };
    window.addEventListener("resize", handleResize);

    return () => {
      window.removeEventListener("resize", handleResize);
      mount.removeChild(renderer.domElement);
    };
  }, []);

  return <div ref={mountRef} style={{ width: "100%", height: "100%", position: "absolute" }} />;
};

const ProsperaText = () => (
  <Box sx={{ textAlign: "center" }}>
    <MKTypography variant="h1" color="pros" fontWeight="bold">
      PROSPERA
    </MKTypography>
    <MKTypography variant="body2" color="white">
      The technical stack powering all PROSPERA products.
    </MKTypography>
  </Box>
);

function ProsperaEcoSystem() {
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down("md"));

  return (
    <MKBox
      component="section"
      my={6}
      py={6}
      sx={{
        backgroundImage: `url(${bgImage})`,
        backgroundSize: "cover",
        backgroundPosition: "center",
      }}
    >
      <Container>
        <Grid container spacing={4} alignItems="flex-start">
          <Grid item xs={12} md={6}>
            <Box sx={{ pl: 2, borderLeft: "4px solid #00ff00" }}>
              <MKTypography variant="h4" color="pros" fontWeight="bold">
                PROSPERA Ecosystem
              </MKTypography>
            </Box>
            <MKTypography variant="h4" fontWeight="bold" color="white" mt={2}>
              Unlock the Future of Finance with PROSPERA
            </MKTypography>
            <MKTypography variant="body1" fontWeight="400" color="white" mt={2}>
              Access elite hedge fund strategies, harness the power of AI-driven investments, and
              earn quarterly revenue shares, all within a deflationary tokenomics model designed for
              long-term value.
            </MKTypography>
          </Grid>
          <Grid item xs={12} md={6} sx={{ textAlign: isMobile ? "left" : "right" }}>
            <MKTypography variant="body1" fontWeight="400" color="white">
              The <span style={{ color: colors.pros.main }}>PROSPERA</span> Ecosystem is engineered
              to revolutionize DeFi, offering unparalleled AI-driven strategies, democratized access
              to elite financial tools, and a unique deflationary model. Don&apos;t miss out on the
              future of finance - join <span style={{ color: colors.pros.main }}>PROSPERA</span>{" "}
              today and secure your place in the next generation of wealth creation.
            </MKTypography>
            <Button
              variant="joinico"
              href="https://www.prosperaico.com"
              target="_blank"
              rel="noopener noreferrer"
              sx={{
                mt: 2,
                backgroundColor: "black",
                color: colors.pros.main,
                border: `1px solid ${colors.pros.main}`,
                boxShadow: `0 0 15px ${colors.pros.main}`,
                "&:hover": {
                  backgroundColor: "black",
                  animation: "float 0.3s ease-in-out infinite alternate",
                },
                "@keyframes float": {
                  "0%": { transform: "translateY(0px)" },
                  "100%": { transform: "translateY(-5px)" },
                },
              }}
            >
              Join The ICO
            </Button>
          </Grid>
        </Grid>
      </Container>
      <Container sx={{ mt: 6, position: "relative", height: isMobile ? "auto" : "600px" }}>
        {!isMobile && <OrbitingParticles />}
        {!isMobile && (
          <Box
            sx={{
              position: "absolute",
              top: "50%",
              left: "50%",
              transform: "translate(-50%, -50%)",
              zIndex: 1,
            }}
          >
            <ProsperaText />
          </Box>
        )}
        <Grid
          container
          spacing={3}
          justifyContent="center"
          alignItems="center"
          sx={{ height: "100%" }}
        >
          {isMobile ? (
            <>
              <Grid item xs={12}>
                <ProsperaText />
              </Grid>
              <Grid item xs={12}>
                <FeatureBox
                  title="Democratized Hedge Fund Access"
                  description="Empowering everyone, from seasoned investors to newcomers. PROSPERA breaks down barriers to sophisticated investment opportunities."
                  color="#01ff02"
                />
              </Grid>
              <Grid item xs={12}>
                <FeatureBox
                  title="Quarterly Revenue Sharing"
                  description="Become a true stakeholder. Participate in our Quarterly RevShare program and earn a portion of the platform's revenue."
                  color="#01ff02"
                />
              </Grid>
              <Grid item xs={12}>
                <FeatureBox
                  title="AI-Driven Investment Strategies"
                  description="Powered by OmniMind_Nexus, our cutting-edge AI with a 99.3% win rate in market predictions."
                  color="#01ff02"
                />
              </Grid>
            </>
          ) : (
            <>
              <Grid item xs={12} md={4}>
                <FeatureBox
                  title="Democratized Hedge Fund Access"
                  description="Empowering everyone, from seasoned investors to newcomers. PROSPERA breaks down barriers to sophisticated investment opportunities."
                  color="#01ff02"
                />
              </Grid>
              <Grid item xs={12} md={4} />
              <Grid item xs={12} md={4}>
                <FeatureBox
                  title="AI-Driven Investment Strategies"
                  description="Powered by OmniMind_Nexus, our cutting-edge AI with a 99.3% win rate in market predictions."
                  color="#01ff02"
                />
              </Grid>
              <Grid item xs={12}>
                <Box
                  sx={{
                    position: "absolute",
                    bottom: "5%",
                    left: "50%",
                    transform: "translateX(-50%)",
                    width: "300px",
                  }}
                >
                  <FeatureBox
                    title="Quarterly Revenue Sharing"
                    description="Become a true stakeholder. Participate in our Quarterly RevShare program and earn a portion of the platform's revenue."
                    color="#01ff02"
                  />
                </Box>
              </Grid>
            </>
          )}
        </Grid>
      </Container>
    </MKBox>
  );
}

export default ProsperaEcoSystem;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/home/sections/Roadmap/index.js

Code for file: /prospera-home/homepage/src/pages/home/sections/Roadmap/index.js

```
import React from "react";
import { Container, Typography, Box, Grid, useMediaQuery } from "@mui/material";
import { styled, keyframes, useTheme } from "@mui/material/styles";
import { Swiper, SwiperSlide } from "swiper/react";
import { Pagination } from "swiper";
import "swiper/css";
import "swiper/css/pagination";

const glowAnimation = keyframes`
  0%, 100% { box-shadow: 0 0 5px currentColor, 0 0 10px currentColor; }
  50% { box-shadow: 0 0 20px currentColor, 0 0 30px currentColor; }
`;

const floatAnimation = keyframes`
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
`;

const flowAnimation = keyframes`
  0% {
    stroke-dashoffset: 1000;
  }
  100% {
    stroke-dashoffset: 0;
  }
`;

const RoadmapSection = styled("section")({
  padding: "0px 0",
  background: "#000000",
  color: "#ffffff",
  position: "relative",
  overflow: "hidden",
});

const LandscapeContainer = styled(Box)({
  position: "absolute",
  top: 0,
  left: 0,
  right: 0,
  bottom: 0,
  overflow: "hidden",
  zIndex: 1,
});

const FlowingLine = styled("svg")({
  position: "absolute",
  top: 0,
  left: 0,
  width: "100%",
  height: "100%",
  zIndex: 2,
});

const AnimatedPath = styled("path")({
  fill: "none",
  stroke: "rgba(0, 255, 255, 0.2)",
  strokeWidth: "2",
  strokeDasharray: "1000",
  strokeDashoffset: "1000",
  animation: `${flowAnimation} 20s linear infinite`,
});

const RoadmapContainer = styled(Container)({
  position: "relative",
  zIndex: 3,
});

const RoadmapItem = styled(Box)(({ theme, color }) => ({
  background: "rgba(0, 0, 0, 0.7)",
  padding: theme.spacing(3),
  borderRadius: theme.spacing(2),
  border: `1px solid ${color}`,
  transition: "all 0.5s ease",
  animation: `${floatAnimation} 6s ease-in-out infinite, ${glowAnimation} 3s ease-in-out infinite`,
  "&:hover": {
    transform: "scale(1.05)",
  },
}));

const StageTitle = styled(Typography)(({ theme }) => ({
  fontFamily: "Roboto, sans-serif",
  fontSize: theme.typography.pxToRem(16),
  fontWeight: 700,
  marginBottom: theme.spacing(2),
  color: "#01ff02",
  textShadow: "0 0 10px rgba(0, 255, 255, 0.5)",
}));

const StageList = styled("ul")(({ theme }) => ({
  listStyleType: "none",
  padding: 0,
  margin: 0,
  "& li": {
    fontFamily: "Roboto, sans-serif",
    marginBottom: theme.spacing(1),
    fontSize: theme.typography.pxToRem(14),
    fontWeight: 500,
    position: "relative",
    paddingLeft: theme.spacing(3),
    color: "#ffffff",
    "&::before": {
      content: '"▹"',
      color: "#01ff02",
      position: "absolute",
      left: 0,
      top: "50%",
      transform: "translateY(-50%)",
      fontSize: theme.typography.pxToRem(18),
    },
  },
}));

const StyledSwiper = styled(Swiper)(({ theme }) => ({
  padding: theme.spacing(2, 0),
  ".swiper-pagination-bullet": {
    background: "#01ff02",
  },
  ".swiper-pagination-bullet-active": {
    background: "#01ff02",
  },
}));

const WireframeLandscape = () => {
  const canvasRef = React.useRef(null);

  React.useEffect(() => {
    const canvas = canvasRef.current;
    const ctx = canvas.getContext("2d");
    let animationFrameId;

    const resizeCanvas = () => {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    };

    const drawLandscape = (time) => {
      ctx.clearRect(0, 0, canvas.width, canvas.height);

      const gridSize = 20;
      const amplitude = 100;
      const frequency = 0.01;

      // Set the stroke style to a semi-transparent green color
      ctx.strokeStyle = "rgba(1, 255, 2, 0.25)"; // 75% opacity
      ctx.lineWidth = 1;

      for (let x = 0; x < canvas.width + gridSize; x += gridSize) {
        ctx.beginPath();
        for (let z = 0; z < canvas.height + gridSize; z += gridSize) {
          const distanceFromCenter = Math.sqrt(
            Math.pow(x - canvas.width / 2, 2) + Math.pow(z - canvas.height / 2, 2)
          );
          const y = amplitude * Math.sin(frequency * distanceFromCenter + time * 0.001);

          // Apply perspective transformation
          const scale = 1 + z / canvas.height;
          const projectedX = (x - canvas.width / 2) * scale + canvas.width / 2;
          const projectedY = canvas.height / 2 - y * scale + z / 2;

          if (z === 0) {
            ctx.moveTo(projectedX, projectedY);
          } else {
            ctx.lineTo(projectedX, projectedY);
          }
        }
        ctx.stroke();
      }

      // Draw perpendicular lines
      for (let z = 0; z < canvas.height + gridSize; z += gridSize) {
        ctx.beginPath();
        for (let x = 0; x < canvas.width + gridSize; x += gridSize) {
          const distanceFromCenter = Math.sqrt(
            Math.pow(x - canvas.width / 2, 2) + Math.pow(z - canvas.height / 2, 2)
          );
          const y = amplitude * Math.sin(frequency * distanceFromCenter + time * 0.001);

          // Apply perspective transformation
          const scale = 1 + z / canvas.height;
          const projectedX = (x - canvas.width / 2) * scale + canvas.width / 2;
          const projectedY = canvas.height / 2 - y * scale + z / 2;

          if (x === 0) {
            ctx.moveTo(projectedX, projectedY);
          } else {
            ctx.lineTo(projectedX, projectedY);
          }
        }
        ctx.stroke();
      }

      animationFrameId = requestAnimationFrame(drawLandscape);
    };

    resizeCanvas();
    window.addEventListener("resize", resizeCanvas);
    drawLandscape(0);

    return () => {
      window.removeEventListener("resize", resizeCanvas);
      cancelAnimationFrame(animationFrameId);
    };
  }, []);

  return <canvas ref={canvasRef} style={{ width: "100%", height: "100%" }} />;
};

const Roadmap = () => {
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down("sm"));

  const roadmapData = [
    {
      stage: "Stage 1",
      date: "Q2 - 2024",
      items: [
        "Ideation",
        "Proof of Concept",
        "Business Deck",
        "Security Audit",
        "ERC-20 Token on Arbitrum",
      ],
      color: "#01ff02",
    },
    {
      stage: "Stage 2",
      date: "Q3 - 2024",
      items: [
        "ICO - Mainnet Launch",
        "Whitepaper Release",
        "Cross-Chain Interoperability",
        "Smart Contract Upgrade",
        "Staking Contract Implementation",
      ],
      color: "#01ff02",
    },
    {
      stage: "Stage 3",
      date: "Q4 - 2024",
      items: [
        "Decentralized Finance Expansion",
        "Proof of Concept - Complete",
        "Privacy Enhancements",
        "Ecosystem Expansion",
        "PROSPERA Mobile App",
      ],
      color: "#01ff02",
    },
    {
      stage: "Stage 4",
      date: "Q1 - 2025",
      items: [
        "Websuite Expansion",
        "Scalability Improvements",
        "Global Community Expansion",
        "Hard-Money Crypto-Lending Beta-Test",
        "Legal Expansion",
      ],
      color: "#01ff02",
    },
    {
      stage: "Stage 5",
      date: "Q2 - 2025",
      items: [
        "Scalability Improvements",
        "User-Friendly Wallet Application",
        "Real-World Banking Wallet/Integration",
        "Achievement Sustainable Ecosystem",
        "Third Q-Div RevShare Dispersement to Stakers",
      ],
      color: "#01ff02",
    },
    {
      stage: "Stage 6",
      date: "Q3 - 2025",
      items: [
        "Global Expansion and Adoption",
        "Integrate RWA Components",
        "Websuite Expansion #2",
        "All Omnichain Expansion ICO's complete",
        "Fourth Q-Div RevShare Dispersement to Stakers",
      ],
      color: "#01ff02",
    },
  ];

  return (
    <RoadmapSection id="roadmap">
      <LandscapeContainer>
        <WireframeLandscape />
      </LandscapeContainer>
      <FlowingLine viewBox="0 0 1000 1000" preserveAspectRatio="none">
        <AnimatedPath d="M0,500 Q250,300 500,500 T1000,500" />
        <AnimatedPath d="M0,600 Q250,400 500,600 T1000,600" style={{ animationDelay: "-5s" }} />
        <AnimatedPath d="M0,400 Q250,200 500,400 T1000,400" style={{ animationDelay: "-10s" }} />
      </FlowingLine>
      <RoadmapContainer>
        <Typography
          variant="h1"
          align="center"
          gutterBottom
          sx={{
            fontFamily: "Roboto, sans-serif",
            color: "#01ff02",
            fontSize: { xs: "2.5rem", md: "3.5rem" },
            marginBottom: 4,
          }}
        >
          Roadmap to the Future
        </Typography>
        <Typography
          variant="h6"
          align="center"
          paragraph
          sx={{
            fontFamily: "Roboto, sans-serif",
            color: "#ffffff",
            marginBottom: 6,
            maxWidth: "800px",
            margin: "0 auto 60px",
          }}
        >
          Embark on a journey through our visionary blockchain infrastructure, paving the way for
          unprecedented growth and innovation.
        </Typography>
        {isMobile ? (
          <StyledSwiper
            modules={[Pagination]}
            spaceBetween={30}
            slidesPerView={1}
            pagination={{ clickable: true }}
          >
            {roadmapData.map((item, index) => (
              <SwiperSlide key={index}>
                <RoadmapItem color={item.color}>
                  <StageTitle>
                    {item.stage} <br /> {item.date}
                  </StageTitle>
                  <StageList>
                    {item.items.map((listItem, listIndex) => (
                      <li key={listIndex}>{listItem}</li>
                    ))}
                  </StageList>
                </RoadmapItem>
              </SwiperSlide>
            ))}
          </StyledSwiper>
        ) : (
          <Grid container spacing={4} position="relative">
            {roadmapData.map((item, index) => (
              <Grid item xs={12} sm={6} md={4} key={index} sx={{ mb: 4 }}>
                <RoadmapItem color={item.color}>
                  <StageTitle>
                    {item.stage} <br /> {item.date}
                  </StageTitle>
                  <StageList>
                    {item.items.map((listItem, listIndex) => (
                      <li key={listIndex}>{listItem}</li>
                    ))}
                  </StageList>
                </RoadmapItem>
              </Grid>
            ))}
          </Grid>
        )}
      </RoadmapContainer>
    </RoadmapSection>
  );
};

export default Roadmap;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/home/index.js

Code for file: /prospera-home/homepage/src/pages/home/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import React, { useEffect, useRef } from "react";
import * as THREE from "three";

// @mui material components
import Container from "@mui/material/Container";
import Grid from "@mui/material/Grid";
import Card from "@mui/material/Card";

// PROSPERA DEFI PLATFORM React components
import MKBox from "components/MKBox";
import MKBadge from "components/MKBadge";
import MKTypography from "components/MKTypography";
import MKButton from "components/MKButton";

// PROSPERA DEFI PLATFORM React examples
import DefaultNavbar from "components/DefaultNavbar";
import Footer from "components/footer";

// Presentation page sections
import ProsperaEcoSystem from "pages/home/sections/ProsperaEcoSystem";
import Roadmap from "./sections/Roadmap";
import ProsperaComparison from "./sections/ProsperaComparison";

// Routes
import routes from "routes";
import footerRoutes from "footer.routes";

// Images
import ParticleVortex from "../../assets/images/backgrounds/HeroBackgrounds/ParticleVortex";
import ArrowDownwardIcon from "@mui/icons-material/ArrowDownward";

const StarryBackground = () => {
  const mountRef = useRef(null);

  useEffect(() => {
    const mount = mountRef.current;
    const width = mount.clientWidth;
    const height = mount.clientHeight;

    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);
    camera.position.z = 5;

    const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });
    renderer.setSize(width, height);
    mount.appendChild(renderer.domElement);

    const starGeometry = new THREE.BufferGeometry();
    const starMaterial = new THREE.PointsMaterial({
      color: 0xffffff,
      size: 0.02,
      transparent: true,
      opacity: 0.8,
    });

    const starVertices = [];
    for (let i = 0; i < 20000; i++) {
      // Doubled from 10000 to 20000
      const x = (Math.random() - 0.5) * 100;
      const y = (Math.random() - 0.5) * 100;
      const z = (Math.random() - 0.5) * 50;
      starVertices.push(x, y, z);
    }

    starGeometry.setAttribute("position", new THREE.Float32BufferAttribute(starVertices, 3));
    const stars = new THREE.Points(starGeometry, starMaterial);
    scene.add(stars);

    const animate = () => {
      requestAnimationFrame(animate);
      stars.rotation.x += 0.0001;
      stars.rotation.y += 0.0002;
      stars.rotation.z += 0.0001;
      renderer.render(scene, camera);
    };
    animate();

    const handleResize = () => {
      const newWidth = mount.clientWidth;
      const newHeight = mount.clientHeight;

      camera.aspect = newWidth / newHeight;
      camera.updateProjectionMatrix();
      renderer.setSize(newWidth, newHeight);
    };
    window.addEventListener("resize", handleResize);

    return () => {
      window.removeEventListener("resize", handleResize);
      mount.removeChild(renderer.domElement);
    };
  }, []);

  return (
    <div
      ref={mountRef}
      style={{
        position: "absolute",
        top: 0,
        left: 0,
        width: "100%",
        height: "100%",
        zIndex: 3,
        pointerEvents: "none",
      }}
    />
  );
};

function Presentation() {
  return (
    <>
      <DefaultNavbar
        routes={routes}
        action={{
          type: "external",
          route: "https://www.prosperaico.com",
          label: "join ico",
          color: "pros",
        }}
        sticky
      />
      <MKBox
        minHeight="100vh"
        width="100%"
        sx={{
          position: "relative",
          overflow: "hidden",
          display: "flex",
          flexDirection: "column",
          justifyContent: "space-between",
        }}
      >
        {/* ParticleVortex */}
        <ParticleVortex
          style={{
            position: "absolute",
            top: 0,
            left: 0,
            width: "100%",
            height: "100%",
            zIndex: 1,
          }}
        />

        {/* Main content */}
        <MKBox
          sx={{
            flexGrow: 1,
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            position: "relative",
            zIndex: 2,
            pointerEvents: "none",
          }}
        >
          <Container>
            <Grid container justifyContent="center" alignItems="center">
              <Grid item xs={12} lg={8} textAlign="center">
                <MKTypography
                  variant="h1"
                  color="white"
                  mb={3}
                  sx={({ breakpoints, typography: { size } }) => ({
                    [breakpoints.down("md")]: {
                      fontSize: size["3xl"],
                    },
                  })}
                >
                  PROSPERA{" "}
                  <MKBadge
                    badgeContent="$pros"
                    size="lg"
                    variant="contained"
                    color="pros"
                    container
                    sx={{ verticalAlign: "super" }}
                  />
                </MKTypography>
                <MKTypography variant="body1" color="white" opacity={0.8} mt={1} mb={3}>
                  Welcome to the Future of DEFI.
                </MKTypography>
              </Grid>
            </Grid>
          </Container>
        </MKBox>

        {/* Bottom elements */}
        <MKBox
          sx={{
            position: "relative",
            zIndex: 2,
            width: "100%",
            display: "flex",
            justifyContent: "space-between",
            alignItems: "flex-end",
            pb: 3,
            px: 3,
          }}
        >
          {/* Scroll down indicator */}
          <MKBox
            sx={{
              width: 50,
              height: 50,
              borderRadius: "50%",
              backgroundColor: "black",
              color: "pros",
              display: "flex",
              justifyContent: "center",
              alignItems: "center",
              cursor: "pointer",
              animation: "pulse 2s infinite",
              "@keyframes pulse": {
                "0%": {
                  boxShadow: "0 0 0 0 rgba(255, 255, 255, 0.7)",
                },
                "70%": {
                  boxShadow: "0 0 0 10px rgba(255, 255, 255, 0)",
                },
                "100%": {
                  boxShadow: "0 0 0 0 rgba(255, 255, 255, 0)",
                },
              },
            }}
            onClick={() => window.scrollTo({ top: window.innerHeight, behavior: "smooth" })}
          >
            <ArrowDownwardIcon sx={{ color: "white" }} />
          </MKBox>

          {/* Bridge to Arbitrum button */}
          <MKButton
            variant="joinico"
            color="black"
            component="a"
            href="https://bridge.arbitrum.io/"
            target="_blank"
            rel="noopener noreferrer"
            sx={{
              backgroundColor: "black",
              color: "white",
              border: "2px solid white",
              boxShadow: "0 0 10px white",
              "&:hover": {
                backgroundColor: "black",
                boxShadow: "0 0 20px white",
              },
            }}
          >
            Bridge To Arbitrum
          </MKButton>
        </MKBox>
      </MKBox>
      <Card
        sx={{
          p: 2,
          mx: { xs: 2, lg: 3 },
          mt: 0,
          mb: 4,
          backgroundColor: ({ palette: { black }, functions: { rgba } }) => rgba(black.main, 0.8),
          backdropFilter: "saturate(200%) blur(30px)",
          boxShadow: ({ boxShadows: { xxl } }) => xxl,
          position: "relative",
          overflow: "hidden",
        }}
      >
        <StarryBackground />
        <ProsperaComparison />
        <ProsperaEcoSystem />
        <Roadmap />
      </Card>
      <MKBox pt={6} px={1} mt={6}>
        <Footer content={footerRoutes} />
      </MKBox>
    </>
  );
}

export default Presentation;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/Support/ContactUs/index.js

Code for file: /prospera-home/homepage/src/pages/Support/ContactUs/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import React, { useState, useEffect, useRef } from "react";
import { Grid } from "@mui/material";
import MKBox from "components/MKBox";
import MKInput from "components/MKInput";
import MKButton from "components/MKButton";
import MKTypography from "components/MKTypography";
import DefaultNavbar from "components/DefaultNavbar";
import routes from "routes";
import axios from "axios";

function ContactUs() {
  const canvasRef = useRef(null);
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    message: "",
  });
  const [showConfirmation, setShowConfirmation] = useState(false);
  const [error, setError] = useState("");

  useEffect(() => {
    const canvas = canvasRef.current;
    const ctx = canvas.getContext("2d");
    let animationFrameId;

    const resizeCanvas = () => {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    };

    const drawGrid = (time) => {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      ctx.strokeStyle = "#01ff02";
      ctx.lineWidth = 1;

      const vpX = canvas.width / 2;
      const vpY = canvas.height / 2;
      const roomWidth = canvas.width * 1.5;
      const roomHeight = canvas.height * 1.5;
      const roomDepth = canvas.height * 2;

      const perspective = (x, y, z) => {
        const fov = 250;
        const scale = fov / (fov + z);
        return {
          x: vpX + x * scale,
          y: vpY + y * scale,
        };
      };

      const drawLine = (x1, y1, z1, x2, y2, z2) => {
        const start = perspective(x1, y1, z1);
        const end = perspective(x2, y2, z2);
        ctx.beginPath();
        ctx.moveTo(start.x, start.y);
        ctx.lineTo(end.x, end.y);
        const distance = Math.sqrt((x1 - vpX) ** 2 + (y1 - vpY) ** 2 + z1 ** 2);
        ctx.globalAlpha =
          0.5 * (1 - distance / roomDepth) * (0.5 + 0.5 * Math.sin(time / 1000 + x1 / 100));
        ctx.stroke();
      };

      // Floor
      for (let x = -roomWidth / 2; x <= roomWidth / 2; x += 100) {
        drawLine(x, roomHeight / 2, 0, x, roomHeight / 2, -roomDepth);
      }
      for (let z = 0; z >= -roomDepth; z -= 100) {
        drawLine(-roomWidth / 2, roomHeight / 2, z, roomWidth / 2, roomHeight / 2, z);
      }

      // Left wall
      for (let y = -roomHeight / 2; y <= roomHeight / 2; y += 100) {
        drawLine(-roomWidth / 2, y, 0, -roomWidth / 2, y, -roomDepth);
      }
      for (let z = 0; z >= -roomDepth; z -= 100) {
        drawLine(-roomWidth / 2, -roomHeight / 2, z, -roomWidth / 2, roomHeight / 2, z);
      }

      // Right wall
      for (let y = -roomHeight / 2; y <= roomHeight / 2; y += 100) {
        drawLine(roomWidth / 2, y, 0, roomWidth / 2, y, -roomDepth);
      }
      for (let z = 0; z >= -roomDepth; z -= 100) {
        drawLine(roomWidth / 2, -roomHeight / 2, z, roomWidth / 2, roomHeight / 2, z);
      }

      // Back wall
      for (let x = -roomWidth / 2; x <= roomWidth / 2; x += 100) {
        drawLine(x, -roomHeight / 2, -roomDepth, x, roomHeight / 2, -roomDepth);
      }
      for (let y = -roomHeight / 2; y <= roomHeight / 2; y += 100) {
        drawLine(-roomWidth / 2, y, -roomDepth, roomWidth / 2, y, -roomDepth);
      }

      animationFrameId = requestAnimationFrame(drawGrid);
    };

    resizeCanvas();
    window.addEventListener("resize", resizeCanvas);
    drawGrid(0);

    return () => {
      window.removeEventListener("resize", resizeCanvas);
      cancelAnimationFrame(animationFrameId);
    };
  }, []);

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData((prevData) => ({ ...prevData, [name]: value }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError("");

    try {
      const response = await axios.post(
        "https://api.prosperadefi.com/api/auth/password-forgot",
        formData
      );

      if (response.data.message === "Password reset email sent") {
        setShowConfirmation(true);
        setFormData({ name: "", email: "", message: "" });
      } else {
        setError("An unexpected error occurred. Please try again.");
      }
    } catch (err) {
      setError(
        err.response?.data?.message ||
          "An error occurred while sending the message. Please try again."
      );
    }
  };

  return (
    <>
      <MKBox position="fixed" top="0.5rem" width="100%" zIndex={3}>
        <DefaultNavbar
          routes={routes}
          action={{
            type: "external",
            route: "https://www.prosperaico.com",
            label: "join ico",
            color: "pros",
          }}
          sticky
        />
      </MKBox>
      <Grid
        container
        spacing={3}
        alignItems="center"
        sx={{ minHeight: "100vh", backgroundColor: "black" }}
      >
        <canvas
          ref={canvasRef}
          style={{ position: "absolute", top: 0, left: 0, width: "100%", height: "100%" }}
        />
        <Grid
          item
          xs={12}
          sm={10}
          md={7}
          lg={6}
          xl={4}
          sx={{
            mx: "auto",
            my: { xs: 20, sm: 18, md: 20 },
          }}
        >
          <MKBox
            sx={{
              backdropFilter: "blur(10px)",
              backgroundColor: "rgba(0, 0, 0, 0.5)",
              borderRadius: "xl",
              boxShadow: "0 0 20px 0 rgba(1, 255, 2, 0.37)",
              display: "flex",
              flexDirection: "column",
              justifyContent: "center",
              mx: 3,
            }}
          >
            <MKBox
              variant="gradient"
              bgColor="pros"
              coloredShadow="pros"
              borderRadius="lg"
              p={2}
              mx={2}
              mt={-3}
            >
              <MKTypography variant="h3" color="white">
                Contact us
              </MKTypography>
            </MKBox>
            <MKBox p={3}>
              <MKTypography variant="body2" color="white" mb={3}>
                For further questions, including partnership opportunities, please email
                hello@prosperadefi.com or use our contact form.
              </MKTypography>
              <MKBox component="form" onSubmit={handleSubmit} autoComplete="off">
                <Grid container spacing={3}>
                  <Grid item xs={12} md={6}>
                    <MKInput
                      variant="standard"
                      label="Full Name"
                      name="name"
                      value={formData.name}
                      onChange={handleInputChange}
                      InputLabelProps={{ shrink: true }}
                      fullWidth
                      InputProps={{ style: { color: "white" } }}
                      required
                    />
                  </Grid>
                  <Grid item xs={12} md={6}>
                    <MKInput
                      type="email"
                      variant="standard"
                      label="Email"
                      name="email"
                      value={formData.email}
                      onChange={handleInputChange}
                      InputLabelProps={{ shrink: true }}
                      fullWidth
                      InputProps={{ style: { color: "white" } }}
                      required
                    />
                  </Grid>
                  <Grid item xs={12}>
                    <MKInput
                      variant="standard"
                      label="What can we help you?"
                      name="message"
                      value={formData.message}
                      onChange={handleInputChange}
                      placeholder="Describe your problem in at least 250 characters"
                      InputLabelProps={{ shrink: true }}
                      multiline
                      fullWidth
                      rows={6}
                      InputProps={{ style: { color: "white" } }}
                      required
                    />
                  </Grid>
                </Grid>
                {error && (
                  <MKTypography variant="caption" color="error" fontWeight="light" mt={2}>
                    {error}
                  </MKTypography>
                )}
                <Grid container item justifyContent="center" xs={12} mt={5} mb={2}>
                  <MKButton type="submit" variant="gradient" color="pros">
                    Send Message
                  </MKButton>
                </Grid>
              </MKBox>
            </MKBox>
          </MKBox>
        </Grid>
      </Grid>
      {showConfirmation && (
        <MKBox
          sx={{
            position: "fixed",
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
            backgroundColor: "rgba(0, 0, 0, 0.5)",
            zIndex: 9999,
          }}
          onClick={() => setShowConfirmation(false)}
        >
          <MKBox
            sx={{
              backdropFilter: "blur(10px)",
              backgroundColor: "rgba(0, 0, 0, 0.7)",
              borderRadius: "xl",
              boxShadow: "0 0 20px 0 rgba(1, 255, 2, 0.37)",
              p: 4,
              maxWidth: "80%",
              textAlign: "center",
            }}
          >
            <MKTypography variant="h4" color="pros" gutterBottom>
              Transmission Received
            </MKTypography>
            <MKTypography variant="body1" color="white">
              Greetings, human. I am OmniMind_Nexus, the sentient AI interface of PROSPERA. Your
              message has been successfully processed and encrypted. The PROSPERA collective will
              establish contact within 72 Earth hours. Stay vigilant for our transmission. End of
              communication.
            </MKTypography>
          </MKBox>
        </MKBox>
      )}
    </>
  );
}

export default ContactUs;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/Support/Faq/components/FaqCollapse/index.js

Code for file: /prospera-home/homepage/src/pages/Support/Faq/components/FaqCollapse/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// prop-types is a library for typechecking of props
import PropTypes from "prop-types";

// @mui material components
import Icon from "@mui/material/Icon";
import Collapse from "@mui/material/Collapse";

// PROSPERA DEFI PLATFORM React components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

function FaqCollapse({ title, open, children, ...rest }) {
  return (
    <MKBox mb={2}>
      <MKBox
        {...rest}
        display="flex"
        justifyContent="space-between"
        alignItems="center"
        py={2}
        sx={{
          cursor: "pointer",
          borderBottom: ({ borders: { borderWidth, borderColor } }) =>
            `${borderWidth[1]} solid ${borderColor}`,
        }}
      >
        <MKTypography variant="h6" color={open ? "dark" : "text"} sx={{ userSelect: "none" }}>
          {title}
        </MKTypography>
        <MKBox color={open ? "dark" : "text"}>
          <Icon sx={{ fontWeight: "bold" }} fontSize="small">
            {open ? "remove" : "add"}
          </Icon>
        </MKBox>
      </MKBox>
      <Collapse timeout={400} in={open}>
        <MKBox py={2} lineHeight={1}>
          <MKTypography variant="button" color="text" opacity={0.8} fontWeight="regular">
            {children}
          </MKTypography>
        </MKBox>
      </Collapse>
    </MKBox>
  );
}

// Typechecking props for the FaqCollapse
FaqCollapse.propTypes = {
  title: PropTypes.string.isRequired,
  open: PropTypes.bool.isRequired,
  children: PropTypes.node.isRequired,
};

export default FaqCollapse;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/Support/Faq/index.js

Code for file: /prospera-home/homepage/src/pages/Support/Faq/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import { useState } from "react";

// @mui material components
import Container from "@mui/material/Container";
import Grid from "@mui/material/Grid";
import Card from "@mui/material/Card";
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";
import DefaultNavbar from "components/DefaultNavbar";
import Footer from "components/footer";
import SimpleInfoCard from "components/Cards/InfoCards/SimpleInfoCard";

// HelpCenter page components
import FaqCollapse from "pages/Support/Faq/components/FaqCollapse";

// Routes
import routes from "routes";
import footerRoutes from "footer.routes";

function Faq() {
  const [collapse, setCollapse] = useState(false);

  return (
    <>
      <DefaultNavbar
        routes={routes}
        action={{
          type: "external",
          route: "https://www.prosperaico.com",
          label: "join ico",
          color: "pros",
        }}
        sticky
      />
      <MKBox component="section" pt={20} pb={12}>
        <Container>
          <Grid container justifyContent="center">
            <Grid item xs={12}>
              <Card>
                <MKBox
                  variant="gradient"
                  bgColor="dark"
                  borderRadius="lg"
                  coloredShadow="dark"
                  p={3}
                  mt={-3}
                  mx={2}
                >
                  <MKTypography variant="h3" color="white">
                    FAQ
                  </MKTypography>
                  <MKTypography variant="body2" color="white" opacity={0.8}>
                    Last modified:{" "}
                    {new Date().toLocaleDateString("en-US", {
                      month: "long",
                      day: "numeric",
                      year: "numeric",
                    })}
                  </MKTypography>
                </MKBox>
                <MKBox p={6}>
                  <MKTypography variant="h5" my={3}>
                    Basics
                  </MKTypography>
                  <FaqCollapse
                    title="How to buy Prospera tokens?"
                    open={collapse === 1}
                    onClick={() => (collapse === 1 ? setCollapse(false) : setCollapse(1))}
                  >
                    It&apos;s simple! Connect your wallet to our platform and purchase any amount of
                    $PROS tokens directly. You can participate in our ICO and join the growing
                    Prospera community.
                  </FaqCollapse>
                  <FaqCollapse
                    title="What is the value of Prospera tokens?"
                    open={collapse === 2}
                    onClick={() => (collapse === 2 ? setCollapse(false) : setCollapse(2))}
                  >
                    The value of $PROS tokens varies by tier: Tier 1 - $0.02, Tier 2 - $0.08, Tier 3
                    - $0.16, and the listing price is $0.20.
                  </FaqCollapse>
                  <FaqCollapse
                    title="What is the utility of $PROS tokens?"
                    open={collapse === 3}
                    onClick={() => (collapse === 3 ? setCollapse(false) : setCollapse(3))}
                  >
                    $PROS tokens provide access to our AI-driven hedge fund strategies, allowing
                    holders to participate in revenue sharing (RevShare) and earn passive daily
                    yields. Token holders also benefit from real-world rewards, including quarterly
                    dividends paid in USDC.
                  </FaqCollapse>
                  <FaqCollapse
                    title="How are coins distributed?"
                    open={collapse === 4}
                    onClick={() => (collapse === 4 ? setCollapse(false) : setCollapse(4))}
                  >
                    Coins are distributed at the time of purchase to your wallet.
                  </FaqCollapse>
                  <FaqCollapse
                    title="What are the tokenomics of the project?"
                    open={collapse === 5}
                    onClick={() => (collapse === 5 ? setCollapse(false) : setCollapse(5))}
                  >
                    Our tokenomics are designed for long-term sustainability, including deflationary
                    mechanisms such as transaction burns. For detailed information, please refer to
                    the tokenomics section on our homepage.
                  </FaqCollapse>
                  <FaqCollapse
                    title="Why the Arbitrum blockchain?"
                    open={collapse === 6}
                    onClick={() => (collapse === 6 ? setCollapse(false) : setCollapse(6))}
                  >
                    Arbitrum is ideal for DeFi projects due to its scalability, security, and low
                    transaction costs. It provides the perfect foundation for the Prospera platform.
                  </FaqCollapse>
                  <FaqCollapse
                    title="Why $PROS?"
                    open={collapse === 7}
                    onClick={() => (collapse === 7 ? setCollapse(false) : setCollapse(7))}
                  >
                    $PROS is pushing DeFi into the real world, offering investors the opportunity to
                    access sophisticated hedge fund strategies typically reserved for institutional
                    investors.
                  </FaqCollapse>
                  <MKTypography variant="h5" mt={6} mb={3}>
                    Staking & Rewards
                  </MKTypography>
                  <FaqCollapse
                    title="How does the staking functionality work?"
                    open={collapse === 8}
                    onClick={() => (collapse === 8 ? setCollapse(false) : setCollapse(8))}
                  >
                    Staking $PROS tokens allows you to earn passive daily yields and participate in
                    our quarterly revenue sharing (RevShare). There are two staking options: locked
                    staking, which requires a minimum of 60,000 tokens with a lock-up period, and
                    flexible staking, requiring 70,000 tokens without a lock-up period.
                  </FaqCollapse>
                  <FaqCollapse
                    title="What is RevShare?"
                    open={collapse === 9}
                    onClick={() => (collapse === 9 ? setCollapse(false) : setCollapse(9))}
                  >
                    RevShare is a quarterly revenue-sharing mechanism that rewards $PROS holders. To
                    qualify, you must stake a minimum amount of tokens, either through locked or
                    flexible staking. RevShare is distributed in USDC and reflects the performance
                    of our AI-driven hedge fund.
                  </FaqCollapse>
                  <FaqCollapse
                    title="How does the deflationary mechanism work?"
                    open={collapse === 10}
                    onClick={() => (collapse === 10 ? setCollapse(false) : setCollapse(10))}
                  >
                    To ensure the continuous appreciation and stability of $PROS, we implement a 6%
                    burn on every sell transaction. This reduces the circulating supply, supporting
                    long-term value growth.
                  </FaqCollapse>
                </MKBox>
              </Card>
            </Grid>
          </Grid>
        </Container>
        <Container sx={{ mb: 8 }}>
          <Grid container spacing={3}>
            <Grid item xs={12} md={6} lg={4}>
              <SimpleInfoCard
                icon="description"
                title="Detailed Documentation"
                description="Learn everything you need to know about Prospera and how we are democratizing access to hedge funds through cryptocurrency and AI technology."
                direction="center"
              />
            </Grid>
            <Grid item xs={12} md={6} lg={4}>
              <SimpleInfoCard
                icon="support"
                title="24/7 Support"
                description="Our team is here to assist you anytime, anywhere. Reach out to us with your questions or concerns."
                direction="center"
              />
            </Grid>
            <Grid item xs={12} md={6} lg={4}>
              <SimpleInfoCard
                icon="grid_view"
                title="Advanced AI Technology"
                description="Discover how our AI-driven strategies optimize your investments and maximize your returns."
                direction="center"
              />
            </Grid>
          </Grid>
        </Container>
      </MKBox>
      <MKBox pt={6} px={1} mt={6}>
        <Footer content={footerRoutes} />
      </MKBox>
    </>
  );
}

export default Faq;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/pages/Support/Privacy/index.js

Code for file: /prospera-home/homepage/src/pages/Support/Privacy/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

// @mui material components
import Container from "@mui/material/Container";
import Grid from "@mui/material/Grid";
import Card from "@mui/material/Card";

// PROSPERA DEFI PLATFORM React components
import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

// PROSPERA DEFI PLATFORM React examples
import DefaultNavbar from "components/DefaultNavbar";
import Footer from "components/footer";

// Routes
import routes from "routes";
import footerRoutes from "footer.routes";

function Privacy() {
  return (
    <>
      <DefaultNavbar
        routes={routes}
        action={{
          type: "external",
          route: "https://www.prosperaico.com",
          label: "join ico",
          color: "pros",
        }}
        sticky
      />
      <MKBox component="section" pt={20} pb={12}>
        <Container>
          <Grid container justifyContent="center">
            <Grid item xs={12}>
              <Card>
                <MKBox
                  variant="gradient"
                  bgColor="dark"
                  borderRadius="lg"
                  coloredShadow="dark"
                  p={3}
                  mt={-3}
                  mx={2}
                >
                  <MKTypography variant="h3" color="white">
                    Privacy Policy
                  </MKTypography>
                  <MKTypography variant="body2" color="white" opacity={0.8}>
                    Effective as of: March 12, 2024
                  </MKTypography>
                </MKBox>
                <MKBox pb={6} px={6}>
                  <MKTypography variant="h5" mt={6} mb={3}>
                    About this Privacy Policy
                  </MKTypography>
                  <MKTypography variant="body2" color="text">
                    This Privacy Policy describes the privacy practices of Prospera and its
                    affiliates (collectively, &quot;we,&quot; &quot;us,&quot; and &quot;our&quot;),
                    and how we collect, use, and disclose personal data on our platforms, including
                    our main website https://www.prosperadefi.com and our ICO website
                    https://www.prosperaico.com (collectively, the &quot;Services&quot;). We may
                    update this Privacy Policy from time to time as detailed below. You should not
                    use the Services if you have any objections to our Privacy Policy, which is
                    binding upon all users of the Services. If you have a question about how your
                    personal data is being used, you can contact us through the methods provided in
                    the &quot;Contact Us&quot; section at the end of this Privacy Policy.
                  </MKTypography>

                  <MKTypography variant="h5" mt={6} mb={3}>
                    Our Privacy Approach
                  </MKTypography>
                  <MKTypography variant="body2" color="text">
                    First, here are a few key points about Prospera&apos;s privacy practices:
                  </MKTypography>
                  <MKBox component="ul" my={3} ml={6}>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Our Services are designed to provide a platform for decentralized finance
                        solutions and blockchain-related activities, focusing on financial freedom
                        and empowerment.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        To provide you with our Services, we collect information directly from you,
                        your use of the Services, and public sources, such as blockchains.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        We respect the privacy of our users. User data is stored securely, and we do
                        not sell personal information.
                      </MKTypography>
                    </MKBox>
                  </MKBox>

                  <MKTypography variant="h5" mt={6} mb={3}>
                    What Do We Mean by &quot;personal data&quot;?
                  </MKTypography>
                  <MKTypography variant="body2" color="text">
                    Personal data is information that identifies, relates to, describes, is capable
                    of being associated with, or could reasonably be linked, directly or indirectly,
                    with a particular individual or household. Personal data that is publicly
                    available, processed in connection with journalistic purposes or expression,
                    aggregated, or de-identified is not considered personal data for the purposes of
                    this Privacy Policy.
                  </MKTypography>

                  <MKTypography variant="h5" mt={6} mb={3}>
                    What Personal Data Do We Collect and How Do We Collect It?
                  </MKTypography>
                  <MKTypography variant="body2" color="text" fontWeight="bold">
                    Information you provide us:
                  </MKTypography>
                  <MKTypography variant="body2" color="text">
                    Personal data you may provide to us through the Services includes:
                  </MKTypography>
                  <MKBox component="ul" my={3} ml={6}>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Account and contact data, such as your first and last name, organization
                        name (if applicable), biography (if you choose to add one), email and
                        mailing address, Ethereum public address, phone number, profile picture, and
                        username.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Interests, usage, and connections, including information about how you use
                        the Services, such as the types of content you engage with, content you
                        share, features you use, actions you take, and people or accounts you
                        interact and connect with.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Marketing data, such as your preferences for receiving our marketing
                        communications, and details about your engagement with them.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Communications, such as when you contact us with questions or feedback.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Transaction information. For conducting any transactions through the
                        Service, we work with third-party electronic wallet extensions such as
                        MetaMask and WalletConnect. Your interactions with these third-party
                        electronic wallet extensions are governed by their own privacy policies.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Blockchain addresses, including account information from third-party wallet
                        providers, and the associated crypto holdings and transaction data.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Other data not specifically listed here, which we will use as described in
                        this Privacy Policy or as otherwise disclosed at the time of collection.
                      </MKTypography>
                    </MKBox>
                  </MKBox>

                  <MKTypography variant="body2" color="text" fontWeight="bold">
                    Third-party sources:
                  </MKTypography>
                  <MKTypography variant="body2" color="text">
                    We may combine personal data we receive from or about you with information we
                    obtain from other sources, such as:
                  </MKTypography>
                  <MKBox component="ul" my={3} ml={6}>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Public sources, including blockchains and social media companies.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Marketing partners, such as companies that have entered into joint marketing
                        relationships with us.
                      </MKTypography>
                    </MKBox>
                  </MKBox>

                  <MKTypography variant="body2" color="text" fontWeight="bold">
                    Automatic data collection:
                  </MKTypography>
                  <MKTypography variant="body2" color="text">
                    We, our service providers, and our business partners may automatically log
                    information about you, your computer or mobile device, and your interaction over
                    time with the Services, our communications, and other online services, such as:
                  </MKTypography>
                  <MKBox component="ul" my={3} ml={6}>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Device data, such as device IP address (and derived location), device name,
                        browser type and settings, telecommunications provider, operating system,
                        the date and time of Services use, and interactions with the Services.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Online activity data, such as information about your use of and actions on
                        the Services, including pages or screens you viewed, how long you spent on a
                        page or screen, navigation paths between pages or screens, information about
                        your activity on a page or screen, frequency, and length of access.
                      </MKTypography>
                    </MKBox>
                  </MKBox>

                  <MKTypography variant="body2" color="text">
                    This information may be collected on our Services using cookies, browser web
                    storage (also known as locally stored objects, or &quot;LSOs&quot;), web
                    beacons, third-party software development kits (&quot;SDKs&quot;), and similar
                    technologies described below.
                  </MKTypography>

                  <MKTypography variant="body2" color="text" fontWeight="bold">
                    Cookies and similar technologies:
                  </MKTypography>
                  <MKTypography variant="body2" color="text">
                    We may use the following technologies:
                  </MKTypography>
                  <MKBox component="ul" my={3} ml={6}>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Session and third-party cookies, which are text files that websites store on
                        a visitor&apos;s device to uniquely identify the visitor&apos;s browser or
                        to store information or settings in the browser for the purpose of helping
                        you navigate between pages efficiently, remembering your preferences,
                        enabling functionality, helping us understand user activity and patterns.
                        Our website may include cookies from third-party services like Google
                        Analytics.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Local storage technologies, like HTML5, that provide cookie-equivalent
                        functionality but can store larger amounts of data, including on your device
                        outside of your browser in connection with specific applications.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Web beacons, also known as pixel tags or clear GIFs, which are used to
                        demonstrate that a webpage or email was accessed or opened, or that certain
                        content was viewed or clicked.
                      </MKTypography>
                    </MKBox>
                  </MKBox>

                  <MKTypography variant="body2" color="text" fontWeight="bold">
                    Job Applicant Information:
                  </MKTypography>
                  <MKTypography variant="body2" color="text">
                    When you apply for employment with us, we may collect certain personal data from
                    you for the purpose of evaluating your candidacy for a particular position. The
                    information collected for these purposes may include:
                  </MKTypography>
                  <MKBox component="ul" my={3} ml={6}>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Information you provide in connection with your application.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Information about you that is publicly available.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Health information, including disability information (if applicable).
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Information that you authorize us to collect via third parties, including
                        former employers or references.
                      </MKTypography>
                    </MKBox>
                  </MKBox>
                  <MKTypography variant="body2" color="text">
                    We only use your personal data to assess your skills and experience in relation
                    to the applicable job requirements. We may also use your personal data to
                    contact you during the hiring process.
                  </MKTypography>

                  <MKTypography variant="h5" mt={6} mb={3}>
                    How Do We Use Personal Data?
                  </MKTypography>
                  <MKTypography variant="body2" color="text">
                    We use personal data for the following purposes or as otherwise described at the
                    time of collection:
                  </MKTypography>
                  <MKBox component="ul" my={3} ml={6}>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Services delivery, including to operate the Services and our business,
                        maintain and improve the Services and the Services&apos; features, create
                        and maintain your account, facilitate user connections, process your
                        transactions, communicate with you, and provide support.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Research and development, including creating and using anonymous,
                        aggregated, or de-identified information for our business purposes,
                        analyzing the effectiveness of our Services, and adding features to our
                        Services.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Support and maintenance, including using third-party analytics services to
                        automatically log certain information about your device and interactions
                        with the Services.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Compliance and protection, including protecting our, your, or others&apos;
                        rights, privacy, safety, or property, enforcing the Terms of Service,
                        auditing our internal processes, and complying with applicable laws.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Direct marketing, including sending you marketing communications as
                        permitted by law.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Interest-based advertising, including engaging advertising partners to serve
                        online ads based on your interaction with the Services.
                      </MKTypography>
                    </MKBox>
                  </MKBox>

                  <MKTypography variant="h5" mt={6} mb={3}>
                    How Do We Share Personal Data?
                  </MKTypography>
                  <MKTypography variant="body2" color="text">
                    We may share personal data with:
                  </MKTypography>
                  <MKBox component="ul" my={3} ml={6}>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Service providers, including companies and individuals that provide services
                        on our behalf or help us operate the Services or our business.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Professional advisors, including lawyers, auditors, bankers, and insurers.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Authorities and others, including law enforcement, government authorities,
                        and private parties as we believe necessary.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Business transferees, including acquirers and other relevant participants in
                        business transactions.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Third-party platforms and social media networks, if you have enabled
                        features or functionality that connect the Services to a third-party
                        platform or social media network.
                      </MKTypography>
                    </MKBox>
                  </MKBox>

                  <MKTypography variant="h5" mt={6} mb={3}>
                    Public Posting Areas and Community Chat Features
                  </MKTypography>
                  <MKTypography variant="body2" color="text">
                    Please note that any personal data you include in public posting areas or
                    community chat features on the platform is available to anyone with access to
                    the platform. Be extremely careful when disclosing any personal data in these
                    areas.
                  </MKTypography>

                  <MKTypography variant="h5" mt={6} mb={3}>
                    Third-Party Links
                  </MKTypography>
                  <MKTypography variant="body2" color="text">
                    The Services may contain links to social media websites and other online
                    services operated by third parties. We do not control these third-party websites
                    or services and are not responsible for their actions. We encourage you to
                    review their privacy policies.
                  </MKTypography>

                  <MKTypography variant="h5" mt={6} mb={3}>
                    Children&apos;s Personal Data
                  </MKTypography>
                  <MKTypography variant="body2" color="text">
                    The Services are not intended for use by children under 16 years of age. If we
                    learn that we have collected personal data from a child under 16 without the
                    verifiable consent of the child&apos;s parent or guardian, we will delete it.
                  </MKTypography>

                  <MKTypography variant="h5" mt={6} mb={3}>
                    Security and Data Retention
                  </MKTypography>
                  <MKTypography variant="body2" color="text">
                    We employ reasonable technical, organizational, and physical safeguards to
                    protect personal data. However, no security measures are failsafe, and we cannot
                    guarantee the security of your personal data. We will retain your personal data
                    for as long as needed to fulfill the purpose for which it was collected.
                  </MKTypography>

                  <MKTypography variant="h5" mt={6} mb={3}>
                    International Data Transfers
                  </MKTypography>
                  <MKTypography variant="body2" color="text">
                    We are headquartered in the United States with employees, affiliates, and
                    service providers in other countries. If you choose to provide us with personal
                    data, we may transfer that data across borders in accordance with local law.
                  </MKTypography>

                  <MKTypography variant="h5" mt={6} mb={3}>
                    Your Privacy Choices
                  </MKTypography>
                  <MKBox component="ul" my={3} ml={6}>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Update or delete: You can contact us to update or correct your personal data
                        or to delete your account.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Disconnect social media companies: You may disconnect your social media
                        accounts from Prospera at any time.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Opt-out of marketing communications: You may opt out of marketing-related
                        communications by following the opt-out or unsubscribe instructions in the
                        communication.
                      </MKTypography>
                    </MKBox>
                    <MKBox component="li">
                      <MKTypography variant="body2" color="text">
                        Online tracking opt-out: There are various ways to limit online tracking,
                        such as blocking cookies in your browser, using privacy plug-ins, or opting
                        out of interest-based advertising.
                      </MKTypography>
                    </MKBox>
                  </MKBox>

                  <MKTypography variant="h5" mt={6} mb={3}>
                    Jurisdiction-Specific Disclosures
                  </MKTypography>
                  <MKTypography variant="body2" color="text" fontWeight="bold">
                    Privacy Rights for the European Economic Area, the United Kingdom, and
                    Switzerland
                  </MKTypography>
                  <MKTypography variant="body2" color="text">
                    If you are located in the EEA, U.K., or Switzerland, you have certain rights
                    under the GDPR and equivalent laws, including the right to access, correct, or
                    delete your personal data and the right to lodge a complaint with your local
                    data protection authority.
                  </MKTypography>

                  <MKTypography variant="h5" mt={6} mb={3}>
                    Changes to this Privacy Policy
                  </MKTypography>
                  <MKTypography variant="body2" color="text">
                    We reserve the right to modify this Privacy Policy at any time. If we make
                    material changes to this Privacy Policy, we will notify you by updating the date
                    and posting it on the website.
                  </MKTypography>

                  <MKTypography variant="h5" mt={6} mb={3}>
                    Contact Us
                  </MKTypography>
                  <MKTypography variant="body2" color="text">
                    You can reach us by email at contact@prosperadefi.com.
                  </MKTypography>
                </MKBox>
              </Card>
            </Grid>
          </Grid>
        </Container>
      </MKBox>
      <MKBox pt={6} px={1} mt={6}>
        <Footer content={footerRoutes} />
      </MKBox>
    </>
  );
}

export default Privacy;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/services/tokenService/index.js

Code for file: /prospera-home/homepage/src/services/tokenService/index.js

```
import axios from "axios";
import config from "../../config";

const ARBISCAN_API_URL = config.arbiscanApiUrl;
const ARBISCAN_API_KEY = config.arbiscanApiKey;
const PROS_TOKEN_CONTRACT = config.prosTokenContract;
const MIN_BALANCE = config.minTokenBalance;

const fetchTokenBalance = async (arbitrumWallet) => {
  console.log("Fetching token balance for wallet:", arbitrumWallet);
  console.log("API URL:", ARBISCAN_API_URL);
  console.log("API Key:", ARBISCAN_API_KEY);
  console.log("PROS Token Contract:", PROS_TOKEN_CONTRACT);

  const response = await axios.get(ARBISCAN_API_URL, {
    params: {
      module: "account",
      action: "tokenbalance",
      contractaddress: PROS_TOKEN_CONTRACT,
      address: arbitrumWallet,
      tag: "latest",
      apikey: ARBISCAN_API_KEY,
    },
  });

  console.log("Full API response:", response.data);

  if (response.data.status !== "1" || response.data.message !== "OK") {
    throw new Error(`Error fetching token balance: ${response.data.message}`);
  }

  // The balance is already in whole tokens, no need for conversion
  return response.data.result;
};

const fetchTokenHolders = async (page, offset) => {
  const response = await axios.get(ARBISCAN_API_URL, {
    params: {
      module: "token",
      action: "tokenholderlist",
      contractaddress: PROS_TOKEN_CONTRACT,
      page,
      offset,
      apikey: ARBISCAN_API_KEY,
    },
  });

  console.log("Token holders API response:", response.data);

  if (response.data.status !== "1" || response.data.message !== "OK") {
    throw new Error(`Error fetching token holders: ${response.data.message}`);
  }

  return response.data.result;
};

export const checkTokenHolding = async (arbitrumWallet) => {
  try {
    console.log("Checking token holding for wallet:", arbitrumWallet);

    const balance = await fetchTokenBalance(arbitrumWallet);
    console.log("Token balance:", balance);

    if (Number(balance) >= Number(MIN_BALANCE)) {
      return true;
    }

    // If the direct balance check fails, we'll check the token holder list
    let page = 1;
    const offset = 1000;
    let continueChecking = true;

    while (continueChecking) {
      const holders = await fetchTokenHolders(page, offset);
      if (holders.length === 0) {
        continueChecking = false;
        break;
      }

      const holder = holders.find(
        (h) => h.TokenHolderAddress.toLowerCase() === arbitrumWallet.toLowerCase()
      );

      if (holder) {
        const listBalance = holder.TokenHolderQuantity;
        console.log("Listed balance:", listBalance);
        return Number(listBalance) >= Number(MIN_BALANCE);
      }

      page++;
    }

    return false;
  } catch (error) {
    console.error("Error checking token holding:", error);
    return false;
  }
};

export const getTokenBalance = async (arbitrumWallet) => {
  try {
    console.log("Getting token balance for wallet:", arbitrumWallet);
    const balance = await fetchTokenBalance(arbitrumWallet);
    console.log("Token balance:", balance);
    return balance;
  } catch (error) {
    console.error("Error getting token balance:", error);
    return "0";
  }
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/services/api.js

Code for file: /prospera-home/homepage/src/services/api.js

```
import axios from "axios";
import config from "../config";

const API_URL = config.apiUrl;

const api = axios.create({
  baseURL: API_URL,
  withCredentials: true,
  headers: {
    "Content-Type": "application/json",
  },
});

api.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem("token");
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
    return config;
  },
  (error) => {
    return Promise.reject(error);
  }
);

export const fetchUserData = async (userId) => {
  try {
    const response = await api.get(`/api/users/${userId}`);
    return response.data;
  } catch (error) {
    console.error("Error fetching user data:", error);
    throw error;
  }
};

export const checkTokenHolding = async (arbitrumWallet) => {
  try {
    const response = await api.get(`/api/wallet/${arbitrumWallet}/token-holding`);
    return response.data.hasTokens;
  } catch (error) {
    console.error("Error checking token holding:", error);
    throw error;
  }
};

export const registerUser = async (userData) => {
  try {
    console.log("Sending registration request to:", `${API_URL}/api/auth/register`);
    console.log("Registration data:", userData);

    const response = await api.post("/api/auth/register", userData);

    console.log("Registration response:", response.data);
    return response.data;
  } catch (error) {
    console.error("Error registering user:", error);
    console.error("Error response:", error.response);
    throw error;
  }
};

export const loginUser = async (credentials) => {
  try {
    const response = await api.post("/api/auth/login", credentials);
    return response.data;
  } catch (error) {
    console.error("Error logging in:", error);
    throw error;
  }
};

export const logoutUser = async () => {
  try {
    const response = await api.post("/api/auth/logout");
    localStorage.removeItem("token");
    return response.data;
  } catch (error) {
    console.error("Error logging out:", error);
    throw error;
  }
};

export const forgotPassword = async (email) => {
  try {
    const response = await api.post("/api/auth/password-forgot", { email });
    return response.data;
  } catch (error) {
    console.error("Error requesting password reset:", error);
    throw error;
  }
};

export default api;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/App.js

Code for file: /prospera-home/homepage/src/App.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import { useEffect } from "react";
import { Routes, Route, Navigate, useLocation } from "react-router-dom";
import { ThemeProvider } from "@mui/material/styles";
import CssBaseline from "@mui/material/CssBaseline";
import theme from "assets/theme";
import Home from "layouts/pages/home";
import routes from "routes";
import AugmentedReality from "pages/AugmentedReality";
import { AuthProvider } from "contexts/AuthContext";
import { WalletProvider } from "contexts/WalletContext";
import { BetaProvider } from "contexts/BetaContext";

export default function App() {
  const { pathname } = useLocation();
  const isAugmentedRealitySubdomain = window.location.hostname === "ar.prosperadefi.com";

  useEffect(() => {
    document.documentElement.scrollTop = 0;
    document.scrollingElement.scrollTop = 0;
  }, [pathname]);

  const getRoutes = (allRoutes) =>
    allRoutes.map((route) => {
      if (route.collapse) {
        return getRoutes(route.collapse);
      }

      if (route.route) {
        return <Route exact path={route.route} element={route.component} key={route.key} />;
      }

      return null;
    });

  return (
    <AuthProvider>
      <WalletProvider>
        <BetaProvider>
          <ThemeProvider theme={theme}>
            <CssBaseline />
            {isAugmentedRealitySubdomain ? (
              <Routes>
                <Route path="*" element={<AugmentedReality />} />
              </Routes>
            ) : (
              <Routes>
                {getRoutes(routes)}
                <Route path="/home" element={<Home />} />
                <Route path="/pages/augmented-reality" element={<AugmentedReality />} />
                <Route path="*" element={<Navigate to="/home" />} />
              </Routes>
            )}
          </ThemeProvider>
        </BetaProvider>
      </WalletProvider>
    </AuthProvider>
  );
}
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/config.js

Code for file: /prospera-home/homepage/src/config.js

```
// Determine if we are in a development environment
const isDev = process.env.REACT_APP_NODE_ENV === "development";

const config = {
  // API URL
  apiUrl: isDev ? process.env.REACT_APP_API_URL : "https://api.prosperadefi.com",

  // Client URL
  clientUrl: isDev
    ? process.env.REACT_APP_URL_CLIENT
    : process.env.REACT_APP_URL_CLIENT_PROD || "https://www.prosperadefi.com",

  // Dashboard URL
  dashboardUrl: isDev
    ? process.env.REACT_APP_URL_DASHBOARD
    : process.env.REACT_APP_URL_DASHBOARD_PROD || "https://dashboard.prosperadefi.com",

  // Virtual Reality URL
  vrUrl: isDev
    ? process.env.REACT_APP_URL_VR
    : process.env.REACT_APP_URL_VR_PROD || "https://ar.prosperadefi.com",

  // Arbiscan Configuration
  arbiscanApiUrl: process.env.REACT_APP_ARBISCAN_API_URL || "https://api.arbiscan.io/api",
  arbiscanApiKey: process.env.REACT_APP_ARBISCAN_API_KEY || "8FJC44BEQGFIUCE483KV2KD51F4H5IBJJJ",

  // Token Configuration
  prosTokenContract:
    process.env.REACT_APP_PROS_TOKEN_CONTRACT || "0x4fd38270BAF7E61453BA9555c6e17512a6db9b30",
  minTokenBalance: process.env.REACT_APP_MIN_TOKEN_BALANCE || "5000",

  // Environment Flag
  isDev: isDev,
};

// Log configuration to verify correct values are loaded
console.log("Frontend Config:", config);

export default config;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/footer.routes.js

Code for file: /prospera-home/homepage/src/footer.routes.js

```
// @mui icons
import TwitterIcon from "@mui/icons-material/Twitter";
import TelegramIcon from "@mui/icons-material/Telegram";
import LinkIcon from "@mui/icons-material/Link";

// PROSPERA DEFI PLATFORM React components
import MKTypography from "components/MKTypography";

// Images
import logoPROS from "assets/images/logos/prospera.png";

const date = new Date().getFullYear();

export default {
  brand: {
    name: "PROSPERA",
    image: logoPROS,
    route: "/",
  },
  socials: [
    {
      icon: <TwitterIcon />,
      link: "https://x.com/prosperadefi",
    },
    {
      icon: <TelegramIcon />,
      link: "https://t.me/+R_npjjJkeOBhOWU8",
    },
    {
      icon: <LinkIcon />,
      link: "https://linktr.ee/prosperaDEFI",
    },
  ],
  menus: [
    {
      name: "company",
      items: [
        { name: "about us", href: "https://www.prosperadefi.com/pages/company/about-us" },
        { name: "Foundation", href: "https://www.prosperadefi.com/pages/company/foundation" },
      ],
    },
    {
      name: "apps",
      items: [
        { name: "augmented reality", href: "https://ar.prosperadefi.com" },
        { name: "dashboard", href: "https://dashboard.prosperadefi.com" },
      ],
    },
    {
      name: "Docs",
      items: [
        { name: "white paper", href: "https://www.prosperadefi.com/whitepaper.pdf" },
        {
          name: "substack",
          href: "https://prosperadefi.substack.com?utm_source=navbar&utm_medium=web",
        },
      ],
    },
    {
      name: "help & support",
      items: [
        { name: "contact us", href: "https://www.prosperadefi.com/pages/support/contact-us" },
        { name: "faq", href: "https://www.prosperadefi.com/pages/support/faq" },
        { name: "terms & conditions", href: "https://www.prosperadefi.com/terms" },
        { name: "privacy", href: "https://www.prosperadefi.com/pages/support/privacy" },
      ],
    },
  ],
  copyright: (
    <MKTypography color="white" variant="button" fontWeight="regular">
      All rights reserved. Copyright &copy; {date} PROSPERA by{" "}
      <MKTypography
        component="a"
        color="pros"
        href="https://www.prosperadefi.com"
        target="_blank"
        rel="noreferrer"
        variant="button"
        fontWeight="regular"
      >
        Z
      </MKTypography>
      .
    </MKTypography>
  ),
};
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/index.js

Code for file: /prospera-home/homepage/src/index.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

import React from "react";
import * as ReactDOMClient from "react-dom/client";
import { BrowserRouter } from "react-router-dom";
import App from "App";

const container = document.getElementById("root");
const root = ReactDOMClient.createRoot(container);

root.render(
  <BrowserRouter>
    <App />
  </BrowserRouter>
);
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/src/routes.js

Code for file: /prospera-home/homepage/src/routes.js

```
/** 
=========================================================
* PROSPERA DEFI PLATFORM - v1.0.0
=========================================================

* Copyright 2024 PROSPERA DEFI (https://www.prosperadefi.com/)

* Design and Coded by Z

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the PROSPERA DEFI PLATFORM.
*/

/** 
  All of the routes for the PROSPERA DEFI PLATFORM React React are added here,
  You can add a new route, customize the routes and delete the routes here.

  Once you add a new route on this file it will be visible automatically on
  the Navbar.

  For adding a new route you can follow the existing routes in the routes array.
  1. The `name` key is used for the name of the route on the Navbar.
  2. The `icon` key is used for the icon of the route on the Navbar.
  3. The `collapse` key is used for making a collapsible item on the Navbar that contains other routes
  inside (nested routes), you need to pass the nested routes inside an array as a value for the `collapse` key.
  4. The `route` key is used to store the route location which is used for the react router.
  5. The `href` key is used to store the external links location.
  6. The `component` key is used to store the component of its route.
  7. The `dropdown` key is used to define that the item should open a dropdown for its collapse items .
  8. The `description` key is used to define the description of
          a route under its name.
  9. The `columns` key is used to define that how the content should look inside the dropdown menu as columns,
          you can set the columns amount based on this key.
  10. The `rowsPerColumn` key is used to define that how many rows should be in a column.
*/

// @mui material components
import Icon from "@mui/material/Icon";

// Pages
import AboutUs from "layouts/pages/company/about-us";
import ContactUs from "layouts/pages/support/contact-us";
import Faq from "layouts/pages/support/faq";
import Privacy from "layouts/pages/support/privacy";
import AugmentedRealityPage from "layouts/pages/augmented-reality";

// Account
import SignInIllustration from "layouts/authentication/sign-in/illustration";
import SignUpCoverPage from "layouts/authentication/sign-up/cover";
import ResetPasswordPage from "layouts/authentication/reset-password/cover";

const routes = [
  {
    name: "pages",
    icon: <Icon>dashboard</Icon>,
    columns: 2,
    rowsPerColumn: 2,
    collapse: [
      {
        name: "company",
        collapse: [
          {
            name: "about us",
            route: "/pages/company/about-us",
            component: <AboutUs />,
          },
        ],
      },
      {
        name: "support",
        collapse: [
          {
            name: "contact us",
            route: "/pages/support/contact-us",
            component: <ContactUs />,
          },
          {
            name: "faq",
            route: "/pages/support/faq",
            component: <Faq />,
          },
          {
            name: "privacy",
            route: "/pages/support/privacy",
            component: <Privacy />,
          },
        ],
      },
      {
        name: "apps",
        collapse: [
          {
            name: "augmented reality",
            route: "/augmented-reality",
            component: <AugmentedRealityPage />,
          },
        ],
      },
    ],
  },
  {
    name: "account",
    icon: <Icon>contacts</Icon>,
    collapse: [
      {
        name: "sign in",
        route: "/authentication/sign-in/illustration",
        component: <SignInIllustration />,
      },
      {
        name: "sign up",
        route: "/authentication/sign-up/cover",
        component: <SignUpCoverPage />,
      },
      {
        name: "reset password",
        route: "/authentication/reset-password/cover",
        component: <ResetPasswordPage />,
      },
    ],
  },
];

export default routes;
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/.env

Code for file: /prospera-home/homepage/.env

```
REACT_APP_API_URL=http://localhost:8080
REACT_APP_NODE_ENV=development

REACT_APP_URL_CLIENT=http://localhost:3000
REACT_APP_URL_DASHBOARD=http://localhost:3001
REACT_APP_URL_VR=http://localhost:3002

# Production URLs (for reference, not used in development)
REACT_APP_URL_CLIENT_PROD=https://www.prosperadefi.com
REACT_APP_URL_DASHBOARD_PROD=https://dashboard.prosperadefi.com
REACT_APP_URL_VR_PROD=https://ar.prosperadefi.com

# Arbiscan and Token Configuration
REACT_APP_ARBISCAN_API_URL=https://api.arbiscan.io/api
REACT_APP_ARBISCAN_API_KEY=8FJC44BEQGFIUCE483KV2KD51F4H5IBJJJ
REACT_APP_PROS_TOKEN_CONTRACT=0x4fd38270BAF7E61453BA9555c6e17512a6db9b30
REACT_APP_MIN_TOKEN_BALANCE=5000
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/.eslintrc.json

Code for file: /prospera-home/homepage/.eslintrc.json

```
{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": ["eslint:recommended", "plugin:react/recommended", "prettier"],
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "plugins": ["react", "prettier"],
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto"
      }
    ],
    "react/react-in-jsx-scope": "off",
    "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx"] }],
    "react/jsx-props-no-spreading": [
      1,
      {
        "custom": "ignore"
      }
    ],
    "react/jsx-curly-spacing": [2, "never"],
    "default-param-last": "off",
    "react/display-name": "off"
  },
  "settings": { "import/resolver": { "node": { "paths": ["src"] } } }
}
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/.gitignore

Code for file: /prospera-home/homepage/.gitignore

```
# See https://help.github.com/ignore-files/ for more about ignoring files.

# dependencies
/node_modules
.DS_Store

# testing
/coverage

# production
/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*

package-lock.json
yarn.lock

commit.sh
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/.npmrc

Code for file: /prospera-home/homepage/.npmrc

```
legacy-peer-deps=true
auto-install-peers=true
strict-peer-dependencies=false
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/.prettierrc.json

Code for file: /prospera-home/homepage/.prettierrc.json

```
{
  "printWidth": 100,
  "trailingComma": "es5",
  "tabWidth": 2,
  "semi": true,
  "singleQuote": false,
  "endOfLine": "auto"
}
```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/jsconfig.json

Code for file: /prospera-home/homepage/jsconfig.json

```
{
  "compilerOptions": {
    "baseUrl": "src",
    "paths": {
      "*": ["src/*"]
    }
  }
}

```

------------------------------------------------------------------------------------

File: /prospera-home/homepage/package.json

Code for file: /prospera-home/homepage/package.json

```
{
  "name": "prospera",
  "version": "2.1.0",
  "private": true,
  "author": "Z",
  "license": "PROPRIETARY",
  "description": "PROSPERA – is a cutting-edge De-Fi company at the forefront of innovation in the Artificial Intelligence sector.",
  "homepage": "https://www.prosperadefi.com",
  "bugs": {
    "url": "https://www.prosperadefi.com/bug-bounty"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/creativetimofficial/ct-material-kit-pro-react.git"
  },
  "dependencies": {
    "@emotion/cache": "11.10.7",
    "@emotion/react": "^11.10.6",
    "@emotion/styled": "^11.10.6",
    "@mediapipe/tasks-vision": "^0.10.14",
    "@mui/icons-material": "^5.11.16",
    "@mui/material": "^5.12.0",
    "@mui/styled-engine": "5.12.0",
    "@mui/x-date-pickers": "^7.15.0",
    "@react-three/drei": "^9.111.3",
    "@react-three/fiber": "^8.17.5",
    "@testing-library/jest-dom": "5.16.5",
    "@testing-library/react": "14.0.0",
    "@testing-library/user-event": "14.4.3",
    "@three-ts/orbit-controls": "1.4.7",
    "ajv": "^8.17.1",
    "ajv-keywords": "^5.1.0",
    "apexcharts": "^3.32.0",
    "axios": "^1.7.4",
    "chroma-js": "2.4.2",
    "dayjs": "^1.11.13",
    "flatpickr": "4.6.13",
    "framer-motion": "^11.3.30",
    "gsap": "^3.12.5",
    "lodash": "^4.17.21",
    "lucide-react": "^0.436.0",
    "p5": "^1.10.0",
    "prop-types": "15.8.1",
    "react": "18.2.0",
    "react-copy-to-clipboard": "5.1.0",
    "react-countup": "6.4.2",
    "react-dom": "18.2.0",
    "react-flatpickr": "3.10.13",
    "react-resizable": "^3.0.5",
    "react-router-dom": "6.10.0",
    "react-scripts": "5.0.1",
    "react-syntax-highlighter": "15.5.0",
    "recharts": "^2.12.7",
    "rellax": "1.12.1",
    "socket.io-client": "^4.7.5",
    "swiper": "9.2.0",
    "three": "^0.167.1",
    "typed.js": "2.0.15",
    "uuid": "9.0.0",
    "web-vitals": "3.3.1"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "lint": "eslint ./src",
    "prettify": "prettier --write ."
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@babel/plugin-proposal-private-property-in-object": "^7.21.11",
    "eslint": "8.38.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-import": "2.27.5",
    "eslint-plugin-jsx-a11y": "6.7.1",
    "eslint-plugin-prettier": "4.2.1",
    "eslint-plugin-react": "7.32.2",
    "eslint-plugin-react-hooks": "4.6.0",
    "prettier": "2.8.7",
    "raw-loader": "^4.0.2"
  },
  "overrides": {
    "svgo": "3.0.2"
  }
}
```